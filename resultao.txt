.....FFFFFFF.....FFF

Failures:

  1) Project POST /projects when the request is valid creates and returns the project
     Failure/Error: JSON.parse(response.body)

     JSON::ParserError:
       784: unexpected token at '<!DOCTYPE html>
       <html lang="en">
       <head>
         <meta charset="utf-8" />
         <title>Action Controller: Exception caught</title>
         <style>
           body {
             background-color: #FAFAFA;
             color: #333;
             margin: 0px;
           }

           body, p, ol, ul, td {
             font-family: helvetica, verdana, arial, sans-serif;
             font-size:   13px;
             line-height: 18px;
           }

           pre {
             font-size: 11px;
             white-space: pre-wrap;
           }

           pre.box {
             border: 1px solid #EEE;
             padding: 10px;
             margin: 0px;
             width: 958px;
           }

           header {
             color: #F0F0F0;
             background: #C52F24;
             padding: 0.5em 1.5em;
           }

           h1 {
             margin: 0.2em 0;
             line-height: 1.1em;
             font-size: 2em;
           }

           h2 {
             color: #C52F24;
             line-height: 25px;
           }

           .details {
             border: 1px solid #D0D0D0;
             border-radius: 4px;
             margin: 1em 0px;
             display: block;
             width: 978px;
           }

           .summary {
             padding: 8px 15px;
             border-bottom: 1px solid #D0D0D0;
             display: block;
           }

           .details pre {
             margin: 5px;
             border: none;
           }

           #container {
             box-sizing: border-box;
             width: 100%;
             padding: 0 1.5em;
           }

           .source * {
             margin: 0px;
             padding: 0px;
           }

           .source {
             border: 1px solid #D9D9D9;
             background: #ECECEC;
             width: 978px;
           }

           .source pre {
             padding: 10px 0px;
             border: none;
           }

           .source .data {
             font-size: 80%;
             overflow: auto;
             background-color: #FFF;
           }

           .info {
             padding: 0.5em;
           }

           .source .data .line_numbers {
             background-color: #ECECEC;
             color: #AAA;
             padding: 1em .5em;
             border-right: 1px solid #DDD;
             text-align: right;
           }

           .line {
             padding-left: 10px;
           }

           .line:hover {
             background-color: #F6F6F6;
           }

           .line.active {
             background-color: #FFCCCC;
           }

           .hidden {
             display: none;
           }

           a { color: #980905; }
           a:visited { color: #666; }
           a.trace-frames { color: #666; }
           a:hover { color: #C52F24; }
           a.trace-frames.selected { color: #C52F24 }

           
         </style>

         <script>
           var toggle = function(id) {
             var s = document.getElementById(id).style;
             s.display = s.display == 'none' ? 'block' : 'none';
             return false;
           }
           var show = function(id) {
             document.getElementById(id).style.display = 'block';
           }
           var hide = function(id) {
             document.getElementById(id).style.display = 'none';
           }
           var toggleTrace = function() {
             return toggle('blame_trace');
           }
           var toggleSessionDump = function() {
             return toggle('session_dump');
           }
           var toggleEnvDump = function() {
             return toggle('env_dump');
           }
         </script>
       </head>
       <body>

       <header>
         <h1>
           ActionController::ParameterMissing
             in ProjectsController#create
         </h1>
       </header>

       <div id="container">
         <h2>param is missing or the value is empty: project</h2>

             <div class="source hidden" id="frame-source-0">
             <div class="info">
               Extracted source (around line <strong>#437</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>435</span>
       <span>436</span>
       <span>437</span>
       <span>438</span>
       <span>439</span>
       <span>440</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        value
       </div><div class="line">      else
       </div><div class="line active">        raise ParameterMissing.new(key)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source " id="frame-source-1">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  def project_params
       </div><div class="line">    # whitelist params
       </div><div class="line active">    params.require(:project).permit(:name, :user_id)
       </div><div class="line">  end
       </div><div class="line">
       </div><div class="line">  def set_project
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-2">
             <div class="info">
               Extracted source (around line <strong>#10</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>8</span>
       <span>9</span>
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">  def create
       </div><div class="line active">    @project = Project.create!(project_params)
       </div><div class="line">    json_response(@project, :created)
       </div><div class="line">  end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-3">
             <div class="info">
               Extracted source (around line <strong>#4</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>2</span>
       <span>3</span>
       <span>4</span>
       <span>5</span>
       <span>6</span>
       <span>7</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  module BasicImplicitRender # :nodoc:
       </div><div class="line">    def send_action(method, *args)
       </div><div class="line active">      super.tap { default_render unless performed? }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def default_render(*args)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-4">
             <div class="info">
               Extracted source (around line <strong>#186</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>184</span>
       <span>185</span>
       <span>186</span>
       <span>187</span>
       <span>188</span>
       <span>189</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # which is *not* necessarily the same as the action name.
       </div><div class="line">      def process_action(method_name, *args)
       </div><div class="line active">        send_action(method_name, *args)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Actually call the method associated with the action. Override
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-5">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def process_action(*) #:nodoc:
       </div><div class="line">      self.formats = request.formats.map(&amp;:ref).compact
       </div><div class="line active">      super
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Check for double render errors and set the content_type after rendering.
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-6">
             <div class="info">
               Extracted source (around line <strong>#20</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def process_action(*args)
       </div><div class="line">      run_callbacks(:process_action) do
       </div><div class="line active">        super
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-7">
             <div class="info">
               Extracted source (around line <strong>#131</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>129</span>
       <span>130</span>
       <span>131</span>
       <span>132</span>
       <span>133</span>
       <span>134</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        if next_sequence.final?
       </div><div class="line">          next_sequence.invoke_before(env)
       </div><div class="line active">          env.value = !env.halted &amp;&amp; (!block_given? || yield)
       </div><div class="line">          next_sequence.invoke_after(env)
       </div><div class="line">          env.value
       </div><div class="line">        else
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-8">
             <div class="info">
               Extracted source (around line <strong>#19</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>17</span>
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    # process_action callbacks around the normal behavior.
       </div><div class="line">    def process_action(*args)
       </div><div class="line active">      run_callbacks(:process_action) do
       </div><div class="line">        super
       </div><div class="line">      end
       </div><div class="line">    end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-9">
             <div class="info">
               Extracted source (around line <strong>#20</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    private
       </div><div class="line">      def process_action(*args)
       </div><div class="line active">        super
       </div><div class="line">      rescue Exception =&gt; exception
       </div><div class="line">        request.env[&quot;action_dispatch.show_detailed_exceptions&quot;] ||= show_detailed_exceptions?
       </div><div class="line">        rescue_with_handler(exception) || raise
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-10">
             <div class="info">
               Extracted source (around line <strong>#32</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      ActiveSupport::Notifications.instrument(&quot;process_action.action_controller&quot;, raw_payload) do |payload|
       </div><div class="line">        begin
       </div><div class="line active">          result = super
       </div><div class="line">          payload[:status] = response.status
       </div><div class="line">          result
       </div><div class="line">        ensure
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-11">
             <div class="info">
               Extracted source (around line <strong>#166</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>164</span>
       <span>165</span>
       <span>166</span>
       <span>167</span>
       <span>168</span>
       <span>169</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def instrument(name, payload = {})
       </div><div class="line">        if notifier.listening?(name)
       </div><div class="line active">          instrumenter.instrument(name, payload) { yield payload if block_given? }
       </div><div class="line">        else
       </div><div class="line">          yield payload if block_given?
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-12">
             <div class="info">
               Extracted source (around line <strong>#21</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        listeners_state = start name, payload
       </div><div class="line">        begin
       </div><div class="line active">          yield payload
       </div><div class="line">        rescue Exception =&gt; e
       </div><div class="line">          payload[:exception] = [e.class.name, e.message]
       </div><div class="line">          payload[:exception_object] = e
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-13">
             <div class="info">
               Extracted source (around line <strong>#166</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>164</span>
       <span>165</span>
       <span>166</span>
       <span>167</span>
       <span>168</span>
       <span>169</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def instrument(name, payload = {})
       </div><div class="line">        if notifier.listening?(name)
       </div><div class="line active">          instrumenter.instrument(name, payload) { yield payload if block_given? }
       </div><div class="line">        else
       </div><div class="line">          yield payload if block_given?
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-14">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      ActiveSupport::Notifications.instrument(&quot;start_processing.action_controller&quot;, raw_payload.dup)
       </div><div class="line">
       </div><div class="line active">      ActiveSupport::Notifications.instrument(&quot;process_action.action_controller&quot;, raw_payload) do |payload|
       </div><div class="line">        begin
       </div><div class="line">          result = super
       </div><div class="line">          payload[:status] = response.status
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-15">
             <div class="info">
               Extracted source (around line <strong>#252</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>250</span>
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        request.filtered_parameters.merge! wrapped_filtered_hash
       </div><div class="line">      end
       </div><div class="line active">      super
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-16">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        # and it won&#39;t be cleaned up by the method below.
       </div><div class="line">        ActiveRecord::LogSubscriber.reset_runtime
       </div><div class="line active">        super
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def cleanup_view_runtime
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-17">
             <div class="info">
               Extracted source (around line <strong>#124</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>122</span>
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      @_response_body = nil
       </div><div class="line">
       </div><div class="line active">      process_action(action_name, *args)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Delegates to the class&#39; ::controller_path
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-18">
             <div class="info">
               Extracted source (around line <strong>#189</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>187</span>
       <span>188</span>
       <span>189</span>
       <span>190</span>
       <span>191</span>
       <span>192</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      set_request!(request)
       </div><div class="line">      set_response!(response)
       </div><div class="line active">      process(name)
       </div><div class="line">      request.commit_flash
       </div><div class="line">      to_a
       </div><div class="line">    end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-19">
             <div class="info">
               Extracted source (around line <strong>#253</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
       <span>256</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        middleware_stack.build(name) { |env| new.dispatch(name, req, res) }.call req.env
       </div><div class="line">      else
       </div><div class="line active">        new.dispatch(name, req, res)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">  end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-20">
             <div class="info">
               Extracted source (around line <strong>#49</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>47</span>
       <span>48</span>
       <span>49</span>
       <span>50</span>
       <span>51</span>
       <span>52</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def dispatch(controller, action, req, res)
       </div><div class="line active">          controller.dispatch(action, req, res)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-21">
             <div class="info">
               Extracted source (around line <strong>#31</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          controller = controller req
       </div><div class="line">          res        = controller.make_response! req
       </div><div class="line active">          dispatch(controller, params[:action], req, res)
       </div><div class="line">        rescue ActionController::RoutingError
       </div><div class="line">          if @raise_on_name_error
       </div><div class="line">            raise
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-22">
             <div class="info">
               Extracted source (around line <strong>#50</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>48</span>
       <span>49</span>
       <span>50</span>
       <span>51</span>
       <span>52</span>
       <span>53</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          req.path_parameters = set_params.merge parameters
       </div><div class="line">
       </div><div class="line active">          status, headers, body = route.app.serve(req)
       </div><div class="line">
       </div><div class="line">          if &quot;pass&quot; == headers[&quot;X-Cascade&quot;]
       </div><div class="line">            req.script_name     = script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-23">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def serve(req)
       </div><div class="line active">        find_routes(req).each do |match, parameters, route|
       </div><div class="line">          set_params  = req.path_parameters
       </div><div class="line">          path_info   = req.path_info
       </div><div class="line">          script_name = req.script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-24">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def serve(req)
       </div><div class="line active">        find_routes(req).each do |match, parameters, route|
       </div><div class="line">          set_params  = req.path_parameters
       </div><div class="line">          path_info   = req.path_info
       </div><div class="line">          script_name = req.script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-25">
             <div class="info">
               Extracted source (around line <strong>#834</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>832</span>
       <span>833</span>
       <span>834</span>
       <span>835</span>
       <span>836</span>
       <span>837</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        req = make_request(env)
       </div><div class="line">        req.path_info = Journey::Router::Utils.normalize_path(req.path_info)
       </div><div class="line active">        @router.serve(req)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def recognize_path(path, environment = {})
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-26">
             <div class="info">
               Extracted source (around line <strong>#25</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if etag_status?(status) &amp;&amp; etag_body?(body) &amp;&amp; !skip_caching?(headers)
       </div><div class="line">        original_body = body
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-27">
             <div class="info">
               Extracted source (around line <strong>#38</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>36</span>
       <span>37</span>
       <span>38</span>
       <span>39</span>
       <span>40</span>
       <span>41</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        [status, headers, body]
       </div><div class="line">      else
       </div><div class="line active">        @app.call(env)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-28">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if env[REQUEST_METHOD] == HEAD
       </div><div class="line">        [
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-29">
             <div class="info">
               Extracted source (around line <strong>#556</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>554</span>
       <span>555</span>
       <span>556</span>
       <span>557</span>
       <span>558</span>
       <span>559</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          @last_check = mtime
       </div><div class="line">        end
       </div><div class="line active">        @app.call(env)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-30">
             <div class="info">
               Extracted source (around line <strong>#26</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      result = run_callbacks :call do
       </div><div class="line">        begin
       </div><div class="line active">          @app.call(env)
       </div><div class="line">        rescue =&gt; error
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-31">
             <div class="info">
               Extracted source (around line <strong>#97</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>95</span>
       <span>96</span>
       <span>97</span>
       <span>98</span>
       <span>99</span>
       <span>100</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      if callbacks.empty?
       </div><div class="line active">        yield if block_given?
       </div><div class="line">      else
       </div><div class="line">        env = Filters::Environment.new(self, false, nil)
       </div><div class="line">        next_sequence = callbacks.compile
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-32">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      error = nil
       </div><div class="line active">      result = run_callbacks :call do
       </div><div class="line">        begin
       </div><div class="line">          @app.call(env)
       </div><div class="line">        rescue =&gt; error
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-33">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      state = @executor.run!
       </div><div class="line">      begin
       </div><div class="line active">        response = @app.call(env)
       </div><div class="line">        returned = response &lt;&lt; ::Rack::BodyProxy.new(response.pop) { state.complete! }
       </div><div class="line">      ensure
       </div><div class="line">        state.complete! unless returned
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-34">
             <div class="info">
               Extracted source (around line <strong>#59</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>57</span>
       <span>58</span>
       <span>59</span>
       <span>60</span>
       <span>61</span>
       <span>62</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      request = ActionDispatch::Request.new env
       </div><div class="line active">      _, headers, body = response = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if headers[&quot;X-Cascade&quot;] == &quot;pass&quot;
       </div><div class="line">        body.close if body.respond_to?(:close)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-35">
             <div class="info">
               Extracted source (around line <strong>#31</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      request = ActionDispatch::Request.new env
       </div><div class="line active">      @app.call(env)
       </div><div class="line">    rescue Exception =&gt; exception
       </div><div class="line">      if request.show_exceptions?
       </div><div class="line">        render_exception(request, exception)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-36">
             <div class="info">
               Extracted source (around line <strong>#36</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>34</span>
       <span>35</span>
       <span>36</span>
       <span>37</span>
       <span>38</span>
       <span>39</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          instrumenter.start &quot;request.action_dispatch&quot;, request: request
       </div><div class="line">          logger.info { started_request_message(request) }
       </div><div class="line active">          resp = @app.call(env)
       </div><div class="line">          resp[2] = ::Rack::BodyProxy.new(resp[2]) { finish(request) }
       </div><div class="line">          resp
       </div><div class="line">        rescue Exception
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-37">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        if logger.respond_to?(:tagged)
       </div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
       </div><div class="line">        else
       </div><div class="line">          call_app(request, env)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-38">
             <div class="info">
               Extracted source (around line <strong>#69</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>67</span>
       <span>68</span>
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def tagged(*tags)
       </div><div class="line active">      formatter.tagged(*tags) { yield self }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def flush
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-39">
             <div class="info">
               Extracted source (around line <strong>#26</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def tagged(*tags)
       </div><div class="line">        new_tags = push_tags(*tags)
       </div><div class="line active">        yield self
       </div><div class="line">      ensure
       </div><div class="line">        pop_tags(new_tags.size)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-40">
             <div class="info">
               Extracted source (around line <strong>#69</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>67</span>
       <span>68</span>
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def tagged(*tags)
       </div><div class="line active">      formatter.tagged(*tags) { yield self }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def flush
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-41">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        if logger.respond_to?(:tagged)
       </div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
       </div><div class="line">        else
       </div><div class="line">          call_app(request, env)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-42">
             <div class="info">
               Extracted source (around line <strong>#79</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>77</span>
       <span>78</span>
       <span>79</span>
       <span>80</span>
       <span>81</span>
       <span>82</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      req = ActionDispatch::Request.new env
       </div><div class="line">      req.remote_ip = GetIp.new(req, check_ip, proxies)
       </div><div class="line active">      @app.call(req.env)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # The GetIp class exists as a way to defer processing of the request data
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-43">
             <div class="info">
               Extracted source (around line <strong>#25</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      req = ActionDispatch::Request.new env
       </div><div class="line">      req.request_id = make_request_id(req.x_request_id)
       </div><div class="line active">      @app.call(env).tap { |_status, headers, _body| headers[X_REQUEST_ID] = req.request_id }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-44">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      start_time = Utils.clock_time
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">      request_time = Utils.clock_time - start_time
       </div><div class="line">
       </div><div class="line">      unless headers.has_key?(@header_name)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-45">
             <div class="info">
               Extracted source (around line <strong>#27</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
       <span>30</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          def call(env)
       </div><div class="line">            LocalCacheRegistry.set_cache_for(local_cache_key, LocalStore.new)
       </div><div class="line active">            response = @app.call(env)
       </div><div class="line">            response[2] = ::Rack::BodyProxy.new(response[2]) do
       </div><div class="line">              LocalCacheRegistry.set_cache_for(local_cache_key, nil)
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-46">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      state = @executor.run!
       </div><div class="line">      begin
       </div><div class="line active">        response = @app.call(env)
       </div><div class="line">        returned = response &lt;&lt; ::Rack::BodyProxy.new(response.pop) { state.complete! }
       </div><div class="line">      ensure
       </div><div class="line">        state.complete! unless returned
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-47">
             <div class="info">
               Extracted source (around line <strong>#125</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      end
       </div><div class="line">
       </div><div class="line active">      @app.call(req.env)
       </div><div class="line">    end
       </div><div class="line">  end
       </div><div class="line">end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-48">
             <div class="info">
               Extracted source (around line <strong>#111</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>109</span>
       <span>110</span>
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">      if body.respond_to?(:to_path)
       </div><div class="line">        case type = variation(env)
       </div><div class="line">        when &#39;X-Accel-Redirect&#39;
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-49">
             <div class="info">
               Extracted source (around line <strong>#522</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>520</span>
       <span>521</span>
       <span>522</span>
       <span>523</span>
       <span>524</span>
       <span>525</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      req = build_request env
       </div><div class="line active">      app.call req.env
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Defines additional Rack env configuration that is added on each call.
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-50">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      env[&quot;HTTP_COOKIE&quot;] ||= cookie_jar.for(uri)
       </div><div class="line">      @last_request = Rack::Request.new(env)
       </div><div class="line active">      status, headers, body = @app.call(@last_request.env)
       </div><div class="line">
       </div><div class="line">      @last_response = MockResponse.new(status, headers, body, env[&quot;rack.errors&quot;].flush)
       </div><div class="line">      body.close if body.respond_to?(:close)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-51">
             <div class="info">
               Extracted source (around line <strong>#249</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>247</span>
       <span>248</span>
       <span>249</span>
       <span>250</span>
       <span>251</span>
       <span>252</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        uri.scheme ||= &quot;https&quot; if env[&quot;HTTPS&quot;] == &quot;on&quot;
       </div><div class="line">
       </div><div class="line active">        @rack_mock_session.request(uri, env)
       </div><div class="line">
       </div><div class="line">        if retry_with_digest_auth?(env)
       </div><div class="line">          auth_env = env.merge({
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-52">
             <div class="info">
               Extracted source (around line <strong>#125</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def request(uri, env = {}, &amp;block)
       </div><div class="line">        env = env_for(uri, env)
       </div><div class="line active">        process_request(uri, env, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Set a header to be included on all subsequent requests through the
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-53">
             <div class="info">
               Extracted source (around line <strong>#261</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>259</span>
       <span>260</span>
       <span>261</span>
       <span>262</span>
       <span>263</span>
       <span>264</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        # NOTE: rack-test v0.5 doesn&#39;t build a default uri correctly
       </div><div class="line">        # Make sure requested path is always a full uri
       </div><div class="line active">        session.request(build_full_uri(path, request_env), request_env)
       </div><div class="line">
       </div><div class="line">        @request_count += 1
       </div><div class="line">        @request = ActionDispatch::Request.new(session.last_request.env)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-54">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # details.
       </div><div class="line">      def post(path, **args)
       </div><div class="line active">        process(:post, path, **args)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Performs a PATCH request with the given parameters. See +#process+ for more
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-55">
             <div class="info">
               Extracted source (around line <strong>#348</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>346</span>
       <span>347</span>
       <span>348</span>
       <span>349</span>
       <span>350</span>
       <span>351</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          end
       </div><div class="line">
       </div><div class="line active">          integration_session.__send__(method, *args).tap do
       </div><div class="line">            copy_session_variables!
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-56">
             <div class="info">
               Extracted source (around line <strong>#60</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>58</span>
       <span>59</span>
       <span>60</span>
       <span>61</span>
       <span>62</span>
       <span>63</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    context &quot;when the request is valid&quot; do
       </div><div class="line active">      before { post &quot;/projects&quot;, params: {name: &quot;Recorriendo Buenos Aires&quot;} }
       </div><div class="line">
       </div><div class="line">      it &quot;creates and returns the project&quot; do
       </div><div class="line">        expect(json).not_to be_empty
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-57">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-58">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-59">
             <div class="info">
               Extracted source (around line <strong>#350</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>348</span>
       <span>349</span>
       <span>350</span>
       <span>351</span>
       <span>352</span>
       <span>353</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class BeforeHook &lt; Hook
       </div><div class="line">        def run(example)
       </div><div class="line active">          example.instance_exec(example, &amp;block)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-60">
             <div class="info">
               Extracted source (around line <strong>#507</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
       <span>510</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line active">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-61">
             <div class="info">
               Extracted source (around line <strong>#506</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>504</span>
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line active">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-62">
             <div class="info">
               Extracted source (around line <strong>#506</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>504</span>
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line active">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-63">
             <div class="info">
               Extracted source (around line <strong>#593</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
       <span>596</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line active">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-64">
             <div class="info">
               Extracted source (around line <strong>#592</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line active">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-65">
             <div class="info">
               Extracted source (around line <strong>#592</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line active">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-66">
             <div class="info">
               Extracted source (around line <strong>#462</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>460</span>
       <span>461</span>
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          else
       </div><div class="line">            case position
       </div><div class="line active">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-67">
             <div class="info">
               Extracted source (around line <strong>#494</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>492</span>
       <span>493</span>
       <span>494</span>
       <span>495</span>
       <span>496</span>
       <span>497</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run_before_example
       </div><div class="line">        @example_group_instance.setup_mocks_for_rspec
       </div><div class="line active">        hooks.run(:before, :example, self)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def with_around_and_singleton_context_hooks
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-68">
             <div class="info">
               Extracted source (around line <strong>#253</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
       <span>256</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            with_around_and_singleton_context_hooks do
       </div><div class="line">              begin
       </div><div class="line active">                run_before_example
       </div><div class="line">                @example_group_instance.instance_exec(self, &amp;@example_block)
       </div><div class="line">
       </div><div class="line">                if pending?
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-69">
             <div class="info">
               Extracted source (around line <strong>#500</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>498</span>
       <span>499</span>
       <span>500</span>
       <span>501</span>
       <span>502</span>
       <span>503</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        singleton_context_hooks_host = example_group_instance.singleton_class
       </div><div class="line">        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
       </div><div class="line active">        with_around_example_hooks { yield }
       </div><div class="line">      ensure
       </div><div class="line">        singleton_context_hooks_host.run_after_context_hooks(example_group_instance)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-70">
             <div class="info">
               Extracted source (around line <strong>#457</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>455</span>
       <span>456</span>
       <span>457</span>
       <span>458</span>
       <span>459</span>
       <span>460</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def with_around_example_hooks
       </div><div class="line active">        hooks.run(:around, :example, self) { yield }
       </div><div class="line">      rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; e
       </div><div class="line">        set_exception(e)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-71">
             <div class="info">
               Extracted source (around line <strong>#464</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
       <span>466</span>
       <span>467</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line active">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-72">
             <div class="info">
               Extracted source (around line <strong>#604</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>602</span>
       <span>603</span>
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          return yield if hooks.empty? # exit early to avoid the extra allocation cost of `Example::Procsy`
       </div><div class="line">
       </div><div class="line active">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-73">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-74">
             <div class="info">
               Extracted source (around line <strong>#127</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
       <span>129</span>
       <span>130</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        group.around do |example|
       </div><div class="line">          before_setup
       </div><div class="line active">          example.run
       </div><div class="line">          after_teardown
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-75">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-76">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-77">
             <div class="info">
               Extracted source (around line <strong>#375</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>373</span>
       <span>374</span>
       <span>375</span>
       <span>376</span>
       <span>377</span>
       <span>378</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class AroundHook &lt; Hook
       </div><div class="line">        def execute_with(example, procsy)
       </div><div class="line active">          example.instance_exec(procsy, &amp;block)
       </div><div class="line">          return if procsy.executed?
       </div><div class="line">          Pending.mark_skipped!(example,
       </div><div class="line">                                &quot;#{hook_description} did not execute the example&quot;)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-78">
             <div class="info">
               Extracted source (around line <strong>#606</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line active">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-79">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-80">
             <div class="info">
               Extracted source (around line <strong>#74</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>72</span>
       <span>73</span>
       <span>74</span>
       <span>75</span>
       <span>76</span>
       <span>77</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  config.around(:each) do |example|
       </div><div class="line">    DatabaseCleaner.cleaning do
       </div><div class="line active">      example.run
       </div><div class="line">    end
       </div><div class="line">  end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-81">
             <div class="info">
               Extracted source (around line <strong>#16</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>14</span>
       <span>15</span>
       <span>16</span>
       <span>17</span>
       <span>18</span>
       <span>19</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          start
       </div><div class="line active">          yield
       </div><div class="line">        ensure
       </div><div class="line">          clean
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-82">
             <div class="info">
               Extracted source (around line <strong>#98</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>96</span>
       <span>97</span>
       <span>98</span>
       <span>99</span>
       <span>100</span>
       <span>101</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def cleaning(&amp;block)
       </div><div class="line active">      strategy.cleaning(&amp;block)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def auto_detected?
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-83">
             <div class="info">
               Extracted source (around line <strong>#86</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>84</span>
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def cleaning(&amp;inner_block)
       </div><div class="line">      connections.inject(inner_block) do |curr_block, connection|
       </div><div class="line active">        proc { connection.cleaning(&amp;curr_block) }
       </div><div class="line">      end.call
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-84">
             <div class="info">
               Extracted source (around line <strong>#87</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
       <span>90</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      connections.inject(inner_block) do |curr_block, connection|
       </div><div class="line">        proc { connection.cleaning(&amp;curr_block) }
       </div><div class="line active">      end.call
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def clean_with(*args)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-85">
             <div class="info">
               Extracted source (around line <strong>#73</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>71</span>
       <span>72</span>
       <span>73</span>
       <span>74</span>
       <span>75</span>
       <span>76</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  # start the transaction strategy as examples are run
       </div><div class="line">  config.around(:each) do |example|
       </div><div class="line active">    DatabaseCleaner.cleaning do
       </div><div class="line">      example.run
       </div><div class="line">    end
       </div><div class="line">  end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-86">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-87">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-88">
             <div class="info">
               Extracted source (around line <strong>#375</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>373</span>
       <span>374</span>
       <span>375</span>
       <span>376</span>
       <span>377</span>
       <span>378</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class AroundHook &lt; Hook
       </div><div class="line">        def execute_with(example, procsy)
       </div><div class="line active">          example.instance_exec(procsy, &amp;block)
       </div><div class="line">          return if procsy.executed?
       </div><div class="line">          Pending.mark_skipped!(example,
       </div><div class="line">                                &quot;#{hook_description} did not execute the example&quot;)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-89">
             <div class="info">
               Extracted source (around line <strong>#606</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line active">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-90">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-91">
             <div class="info">
               Extracted source (around line <strong>#607</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
       <span>610</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line active">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div><div class="line">        if respond_to?(:singleton_class) &amp;&amp; singleton_class.ancestors.include?(singleton_class)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-92">
             <div class="info">
               Extracted source (around line <strong>#464</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
       <span>466</span>
       <span>467</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line active">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-93">
             <div class="info">
               Extracted source (around line <strong>#457</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>455</span>
       <span>456</span>
       <span>457</span>
       <span>458</span>
       <span>459</span>
       <span>460</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def with_around_example_hooks
       </div><div class="line active">        hooks.run(:around, :example, self) { yield }
       </div><div class="line">      rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; e
       </div><div class="line">        set_exception(e)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-94">
             <div class="info">
               Extracted source (around line <strong>#500</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>498</span>
       <span>499</span>
       <span>500</span>
       <span>501</span>
       <span>502</span>
       <span>503</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        singleton_context_hooks_host = example_group_instance.singleton_class
       </div><div class="line">        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
       </div><div class="line active">        with_around_example_hooks { yield }
       </div><div class="line">      ensure
       </div><div class="line">        singleton_context_hooks_host.run_after_context_hooks(example_group_instance)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-95">
             <div class="info">
               Extracted source (around line <strong>#251</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>249</span>
       <span>250</span>
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            Pending.mark_pending! self, skip
       </div><div class="line">          elsif !RSpec.configuration.dry_run?
       </div><div class="line active">            with_around_and_singleton_context_hooks do
       </div><div class="line">              begin
       </div><div class="line">                run_before_example
       </div><div class="line">                @example_group_instance.instance_exec(self, &amp;@example_block)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-96">
             <div class="info">
               Extracted source (around line <strong>#627</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>625</span>
       <span>626</span>
       <span>627</span>
       <span>628</span>
       <span>629</span>
       <span>630</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div><div class="line active">          succeeded = example.run(instance, reporter)
       </div><div class="line">          if !succeeded &amp;&amp; reporter.fail_fast_limit_met?
       </div><div class="line">            RSpec.world.wants_to_quit = true
       </div><div class="line">          end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-97">
             <div class="info">
               Extracted source (around line <strong>#623</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>621</span>
       <span>622</span>
       <span>623</span>
       <span>624</span>
       <span>625</span>
       <span>626</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def self.run_examples(reporter)
       </div><div class="line active">        ordering_strategy.order(filtered_examples).map do |example|
       </div><div class="line">          next if RSpec.world.wants_to_quit
       </div><div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-98">
             <div class="info">
               Extracted source (around line <strong>#623</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>621</span>
       <span>622</span>
       <span>623</span>
       <span>624</span>
       <span>625</span>
       <span>626</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def self.run_examples(reporter)
       </div><div class="line active">        ordering_strategy.order(filtered_examples).map do |example|
       </div><div class="line">          next if RSpec.world.wants_to_quit
       </div><div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-99">
             <div class="info">
               Extracted source (around line <strong>#589</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>587</span>
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line active">          result_for_this_group = run_examples(reporter)
       </div><div class="line">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-100">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-101">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-102">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-103">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-104">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-105">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-106">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-107">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-108">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-109">
             <div class="info">
               Extracted source (around line <strong>#1894</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>1892</span>
       <span>1893</span>
       <span>1894</span>
       <span>1895</span>
       <span>1896</span>
       <span>1897</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          run_suite_hooks(&quot;a `before(:suite)` hook&quot;, @before_suite_hooks)
       </div><div class="line active">          yield
       </div><div class="line">        ensure
       </div><div class="line">          run_suite_hooks(&quot;an `after(:suite)` hook&quot;, @after_suite_hooks)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-110">
             <div class="info">
               Extracted source (around line <strong>#113</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
       <span>115</span>
       <span>116</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        examples_count = @world.example_count(example_groups)
       </div><div class="line">        success = @configuration.reporter.report(examples_count) do |reporter|
       </div><div class="line active">          @configuration.with_suite_hooks do
       </div><div class="line">            if examples_count == 0 &amp;&amp; @configuration.fail_if_no_examples
       </div><div class="line">              return @configuration.failure_exit_code
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-111">
             <div class="info">
               Extracted source (around line <strong>#79</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>77</span>
       <span>78</span>
       <span>79</span>
       <span>80</span>
       <span>81</span>
       <span>82</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      start(expected_example_count)
       </div><div class="line">      begin
       </div><div class="line active">        yield self
       </div><div class="line">      ensure
       </div><div class="line">        finish
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-112">
             <div class="info">
               Extracted source (around line <strong>#112</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>110</span>
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
       <span>115</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run_specs(example_groups)
       </div><div class="line">        examples_count = @world.example_count(example_groups)
       </div><div class="line active">        success = @configuration.reporter.report(examples_count) do |reporter|
       </div><div class="line">          @configuration.with_suite_hooks do
       </div><div class="line">            if examples_count == 0 &amp;&amp; @configuration.fail_if_no_examples
       </div><div class="line">              return @configuration.failure_exit_code
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-113">
             <div class="info">
               Extracted source (around line <strong>#87</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
       <span>90</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run(err, out)
       </div><div class="line">        setup(err, out)
       </div><div class="line active">        run_specs(@world.ordered_example_groups).tap do
       </div><div class="line">          persist_example_statuses
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-114">
             <div class="info">
               Extracted source (around line <strong>#71</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
       <span>73</span>
       <span>74</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          options.options[:runner].call(options, err, out)
       </div><div class="line">        else
       </div><div class="line active">          new(options).run(err, out)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-115">
             <div class="info">
               Extracted source (around line <strong>#45</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>43</span>
       <span>44</span>
       <span>45</span>
       <span>46</span>
       <span>47</span>
       <span>48</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def self.invoke
       </div><div class="line">        disable_autorun!
       </div><div class="line active">        status = run(ARGV, $stderr, $stdout).to_i
       </div><div class="line">        exit(status) if status != 0
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-116">
             <div class="info">
               Extracted source (around line <strong>#4</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>2</span>
       <span>3</span>
       <span>4</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">require &#39;rspec/core&#39;
       </div><div class="line active">RSpec::Core::Runner.invoke
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-117">
             <div class="info">
               Extracted source (around line <strong>#23</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">gem &#39;rspec-core&#39;, version
       </div><div class="line active">load Gem.bin_path(&#39;rspec-core&#39;, &#39;rspec&#39;, version)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-118">
             <div class="info">
               Extracted source (around line <strong>#23</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">gem &#39;rspec-core&#39;, version
       </div><div class="line active">load Gem.bin_path(&#39;rspec-core&#39;, &#39;rspec&#39;, version)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-119">
             <div class="info">
               Extracted source (around line <strong>#15</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">end
       </div><div class="line">
       </div><div class="line active">eval File.read($0), binding, $0
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-120">
             <div class="info">
               Extracted source (around line <strong>#15</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">end
       </div><div class="line">
       </div><div class="line active">eval File.read($0), binding, $0
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>

         
       <p><code>Rails.root: /home/giuliano/API Gamified Zooniverse/gamifiedZooniverse/gamified-zoo</code></p>

       <div id="traces">
           <a href="#" onclick="hide(&#39;Framework-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Application-Trace&#39;);; return false;">Application Trace</a> |
           <a href="#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Framework-Trace&#39;);; return false;">Framework Trace</a> |
           <a href="#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Framework-Trace&#39;);show(&#39;Full-Trace&#39;);; return false;">Full Trace</a> 

           <div id="Application-Trace" style="display: block;">
             <pre><code><a class="trace-frames" data-frame-id="1" href="#">app/controllers/projects_controller.rb:33:in `project_params&#39;</a><br><a class="trace-frames" data-frame-id="2" href="#">app/controllers/projects_controller.rb:10:in `create&#39;</a><br></code></pre>
           </div>
           <div id="Framework-Trace" style="display: none;">
             <pre><code><a class="trace-frames" data-frame-id="0" href="#">actionpack (5.1.4) lib/action_controller/metal/strong_parameters.rb:437:in `require&#39;</a><br><a class="trace-frames" data-frame-id="3" href="#">actionpack (5.1.4) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action&#39;</a><br><a class="trace-frames" data-frame-id="4" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:186:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="5" href="#">actionpack (5.1.4) lib/action_controller/metal/rendering.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="6" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:20:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="7" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:131:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="8" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:19:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="9" href="#">actionpack (5.1.4) lib/action_controller/metal/rescue.rb:20:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="10" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="11" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `block in instrument&#39;</a><br><a class="trace-frames" data-frame-id="12" href="#">activesupport (5.1.4) lib/active_support/notifications/instrumenter.rb:21:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="13" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="14" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="15" href="#">actionpack (5.1.4) lib/action_controller/metal/params_wrapper.rb:252:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="16" href="#">activerecord (5.1.4) lib/active_record/railties/controller_runtime.rb:22:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="17" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:124:in `process&#39;</a><br><a class="trace-frames" data-frame-id="18" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:189:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="19" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:253:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="20" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:49:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="21" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:31:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="22" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:50:in `block in serve&#39;</a><br><a class="trace-frames" data-frame-id="23" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `each&#39;</a><br><a class="trace-frames" data-frame-id="24" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="25" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:834:in `call&#39;</a><br><a class="trace-frames" data-frame-id="26" href="#">rack (2.0.3) lib/rack/etag.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="27" href="#">rack (2.0.3) lib/rack/conditional_get.rb:38:in `call&#39;</a><br><a class="trace-frames" data-frame-id="28" href="#">rack (2.0.3) lib/rack/head.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="29" href="#">activerecord (5.1.4) lib/active_record/migration.rb:556:in `call&#39;</a><br><a class="trace-frames" data-frame-id="30" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="31" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:97:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="32" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="33" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="34" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call&#39;</a><br><a class="trace-frames" data-frame-id="35" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call&#39;</a><br><a class="trace-frames" data-frame-id="36" href="#">railties (5.1.4) lib/rails/rack/logger.rb:36:in `call_app&#39;</a><br><a class="trace-frames" data-frame-id="37" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="38" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `block in tagged&#39;</a><br><a class="trace-frames" data-frame-id="39" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:26:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="40" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="41" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="42" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/remote_ip.rb:79:in `call&#39;</a><br><a class="trace-frames" data-frame-id="43" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/request_id.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="44" href="#">rack (2.0.3) lib/rack/runtime.rb:22:in `call&#39;</a><br><a class="trace-frames" data-frame-id="45" href="#">activesupport (5.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="46" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="47" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/static.rb:125:in `call&#39;</a><br><a class="trace-frames" data-frame-id="48" href="#">rack (2.0.3) lib/rack/sendfile.rb:111:in `call&#39;</a><br><a class="trace-frames" data-frame-id="49" href="#">railties (5.1.4) lib/rails/engine.rb:522:in `call&#39;</a><br><a class="trace-frames" data-frame-id="50" href="#">rack-test (0.7.0) lib/rack/mock_session.rb:30:in `request&#39;</a><br><a class="trace-frames" data-frame-id="51" href="#">rack-test (0.7.0) lib/rack/test.rb:249:in `process_request&#39;</a><br><a class="trace-frames" data-frame-id="52" href="#">rack-test (0.7.0) lib/rack/test.rb:125:in `request&#39;</a><br><a class="trace-frames" data-frame-id="53" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:261:in `process&#39;</a><br><a class="trace-frames" data-frame-id="54" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:22:in `post&#39;</a><br><a class="trace-frames" data-frame-id="55" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:348:in `block (2 levels) in &lt;module:Runner&gt;&#39;</a><br><a class="trace-frames" data-frame-id="56" href="#">spec/requests/projects_spec.rb:60:in `block (4 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="57" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="58" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="59" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:350:in `run&#39;</a><br><a class="trace-frames" data-frame-id="60" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:507:in `block in run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="61" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `each&#39;</a><br><a class="trace-frames" data-frame-id="62" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="63" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:593:in `block in run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="64" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `reverse_each&#39;</a><br><a class="trace-frames" data-frame-id="65" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="66" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:462:in `run&#39;</a><br><a class="trace-frames" data-frame-id="67" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:494:in `run_before_example&#39;</a><br><a class="trace-frames" data-frame-id="68" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:253:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="69" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `block in with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="70" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `block in with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="71" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="72" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:604:in `block in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="73" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="74" href="#">rspec-rails (3.6.1) lib/rspec/rails/adapters.rb:127:in `block (2 levels) in &lt;module:MinitestLifecycleAdapter&gt;&#39;</a><br><a class="trace-frames" data-frame-id="75" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="76" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="77" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="78" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="79" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="80" href="#">spec/rails_helper.rb:74:in `block (3 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="81" href="#">database_cleaner (1.6.1) lib/database_cleaner/generic/base.rb:16:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="82" href="#">database_cleaner (1.6.1) lib/database_cleaner/base.rb:98:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="83" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning&#39;</a><br><a class="trace-frames" data-frame-id="84" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:87:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="85" href="#">spec/rails_helper.rb:73:in `block (2 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="86" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="87" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="88" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="89" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="90" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="91" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:607:in `run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="92" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `run&#39;</a><br><a class="trace-frames" data-frame-id="93" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="94" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="95" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:251:in `run&#39;</a><br><a class="trace-frames" data-frame-id="96" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:627:in `block in run_examples&#39;</a><br><a class="trace-frames" data-frame-id="97" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `map&#39;</a><br><a class="trace-frames" data-frame-id="98" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `run_examples&#39;</a><br><a class="trace-frames" data-frame-id="99" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:589:in `run&#39;</a><br><a class="trace-frames" data-frame-id="100" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="101" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="102" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="103" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="104" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="105" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="106" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (3 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="107" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `map&#39;</a><br><a class="trace-frames" data-frame-id="108" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (2 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="109" href="#">rspec-core (3.6.0) lib/rspec/core/configuration.rb:1894:in `with_suite_hooks&#39;</a><br><a class="trace-frames" data-frame-id="110" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:113:in `block in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="111" href="#">rspec-core (3.6.0) lib/rspec/core/reporter.rb:79:in `report&#39;</a><br><a class="trace-frames" data-frame-id="112" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:112:in `run_specs&#39;</a><br><a class="trace-frames" data-frame-id="113" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:87:in `run&#39;</a><br><a class="trace-frames" data-frame-id="114" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:71:in `run&#39;</a><br><a class="trace-frames" data-frame-id="115" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:45:in `invoke&#39;</a><br><a class="trace-frames" data-frame-id="116" href="#">rspec-core (3.6.0) exe/rspec:4:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="117" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `load&#39;</a><br><a class="trace-frames" data-frame-id="118" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `&lt;main&gt;&#39;</a><br><a class="trace-frames" data-frame-id="119" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `eval&#39;</a><br><a class="trace-frames" data-frame-id="120" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `&lt;main&gt;&#39;</a><br></code></pre>
           </div>
           <div id="Full-Trace" style="display: none;">
             <pre><code><a class="trace-frames" data-frame-id="0" href="#">actionpack (5.1.4) lib/action_controller/metal/strong_parameters.rb:437:in `require&#39;</a><br><a class="trace-frames" data-frame-id="1" href="#">app/controllers/projects_controller.rb:33:in `project_params&#39;</a><br><a class="trace-frames" data-frame-id="2" href="#">app/controllers/projects_controller.rb:10:in `create&#39;</a><br><a class="trace-frames" data-frame-id="3" href="#">actionpack (5.1.4) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action&#39;</a><br><a class="trace-frames" data-frame-id="4" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:186:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="5" href="#">actionpack (5.1.4) lib/action_controller/metal/rendering.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="6" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:20:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="7" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:131:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="8" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:19:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="9" href="#">actionpack (5.1.4) lib/action_controller/metal/rescue.rb:20:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="10" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="11" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `block in instrument&#39;</a><br><a class="trace-frames" data-frame-id="12" href="#">activesupport (5.1.4) lib/active_support/notifications/instrumenter.rb:21:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="13" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="14" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="15" href="#">actionpack (5.1.4) lib/action_controller/metal/params_wrapper.rb:252:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="16" href="#">activerecord (5.1.4) lib/active_record/railties/controller_runtime.rb:22:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="17" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:124:in `process&#39;</a><br><a class="trace-frames" data-frame-id="18" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:189:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="19" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:253:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="20" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:49:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="21" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:31:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="22" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:50:in `block in serve&#39;</a><br><a class="trace-frames" data-frame-id="23" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `each&#39;</a><br><a class="trace-frames" data-frame-id="24" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="25" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:834:in `call&#39;</a><br><a class="trace-frames" data-frame-id="26" href="#">rack (2.0.3) lib/rack/etag.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="27" href="#">rack (2.0.3) lib/rack/conditional_get.rb:38:in `call&#39;</a><br><a class="trace-frames" data-frame-id="28" href="#">rack (2.0.3) lib/rack/head.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="29" href="#">activerecord (5.1.4) lib/active_record/migration.rb:556:in `call&#39;</a><br><a class="trace-frames" data-frame-id="30" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="31" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:97:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="32" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="33" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="34" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call&#39;</a><br><a class="trace-frames" data-frame-id="35" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call&#39;</a><br><a class="trace-frames" data-frame-id="36" href="#">railties (5.1.4) lib/rails/rack/logger.rb:36:in `call_app&#39;</a><br><a class="trace-frames" data-frame-id="37" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="38" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `block in tagged&#39;</a><br><a class="trace-frames" data-frame-id="39" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:26:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="40" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="41" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="42" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/remote_ip.rb:79:in `call&#39;</a><br><a class="trace-frames" data-frame-id="43" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/request_id.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="44" href="#">rack (2.0.3) lib/rack/runtime.rb:22:in `call&#39;</a><br><a class="trace-frames" data-frame-id="45" href="#">activesupport (5.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="46" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="47" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/static.rb:125:in `call&#39;</a><br><a class="trace-frames" data-frame-id="48" href="#">rack (2.0.3) lib/rack/sendfile.rb:111:in `call&#39;</a><br><a class="trace-frames" data-frame-id="49" href="#">railties (5.1.4) lib/rails/engine.rb:522:in `call&#39;</a><br><a class="trace-frames" data-frame-id="50" href="#">rack-test (0.7.0) lib/rack/mock_session.rb:30:in `request&#39;</a><br><a class="trace-frames" data-frame-id="51" href="#">rack-test (0.7.0) lib/rack/test.rb:249:in `process_request&#39;</a><br><a class="trace-frames" data-frame-id="52" href="#">rack-test (0.7.0) lib/rack/test.rb:125:in `request&#39;</a><br><a class="trace-frames" data-frame-id="53" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:261:in `process&#39;</a><br><a class="trace-frames" data-frame-id="54" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:22:in `post&#39;</a><br><a class="trace-frames" data-frame-id="55" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:348:in `block (2 levels) in &lt;module:Runner&gt;&#39;</a><br><a class="trace-frames" data-frame-id="56" href="#">spec/requests/projects_spec.rb:60:in `block (4 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="57" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="58" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="59" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:350:in `run&#39;</a><br><a class="trace-frames" data-frame-id="60" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:507:in `block in run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="61" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `each&#39;</a><br><a class="trace-frames" data-frame-id="62" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="63" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:593:in `block in run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="64" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `reverse_each&#39;</a><br><a class="trace-frames" data-frame-id="65" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="66" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:462:in `run&#39;</a><br><a class="trace-frames" data-frame-id="67" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:494:in `run_before_example&#39;</a><br><a class="trace-frames" data-frame-id="68" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:253:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="69" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `block in with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="70" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `block in with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="71" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="72" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:604:in `block in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="73" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="74" href="#">rspec-rails (3.6.1) lib/rspec/rails/adapters.rb:127:in `block (2 levels) in &lt;module:MinitestLifecycleAdapter&gt;&#39;</a><br><a class="trace-frames" data-frame-id="75" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="76" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="77" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="78" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="79" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="80" href="#">spec/rails_helper.rb:74:in `block (3 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="81" href="#">database_cleaner (1.6.1) lib/database_cleaner/generic/base.rb:16:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="82" href="#">database_cleaner (1.6.1) lib/database_cleaner/base.rb:98:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="83" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning&#39;</a><br><a class="trace-frames" data-frame-id="84" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:87:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="85" href="#">spec/rails_helper.rb:73:in `block (2 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="86" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="87" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="88" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="89" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="90" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="91" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:607:in `run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="92" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `run&#39;</a><br><a class="trace-frames" data-frame-id="93" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="94" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="95" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:251:in `run&#39;</a><br><a class="trace-frames" data-frame-id="96" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:627:in `block in run_examples&#39;</a><br><a class="trace-frames" data-frame-id="97" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `map&#39;</a><br><a class="trace-frames" data-frame-id="98" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `run_examples&#39;</a><br><a class="trace-frames" data-frame-id="99" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:589:in `run&#39;</a><br><a class="trace-frames" data-frame-id="100" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="101" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="102" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="103" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="104" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="105" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="106" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (3 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="107" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `map&#39;</a><br><a class="trace-frames" data-frame-id="108" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (2 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="109" href="#">rspec-core (3.6.0) lib/rspec/core/configuration.rb:1894:in `with_suite_hooks&#39;</a><br><a class="trace-frames" data-frame-id="110" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:113:in `block in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="111" href="#">rspec-core (3.6.0) lib/rspec/core/reporter.rb:79:in `report&#39;</a><br><a class="trace-frames" data-frame-id="112" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:112:in `run_specs&#39;</a><br><a class="trace-frames" data-frame-id="113" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:87:in `run&#39;</a><br><a class="trace-frames" data-frame-id="114" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:71:in `run&#39;</a><br><a class="trace-frames" data-frame-id="115" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:45:in `invoke&#39;</a><br><a class="trace-frames" data-frame-id="116" href="#">rspec-core (3.6.0) exe/rspec:4:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="117" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `load&#39;</a><br><a class="trace-frames" data-frame-id="118" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `&lt;main&gt;&#39;</a><br><a class="trace-frames" data-frame-id="119" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `eval&#39;</a><br><a class="trace-frames" data-frame-id="120" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `&lt;main&gt;&#39;</a><br></code></pre>
           </div>

         <script type="text/javascript">
           var traceFrames = document.getElementsByClassName('trace-frames');
           var selectedFrame, currentSource = document.getElementById('frame-source-0');

           // Add click listeners for all stack frames
           for (var i = 0; i < traceFrames.length; i++) {
             traceFrames[i].addEventListener('click', function(e) {
               e.preventDefault();
               var target = e.target;
               var frame_id = target.dataset.frameId;

               if (selectedFrame) {
                 selectedFrame.className = selectedFrame.className.replace("selected", "");
               }

               target.className += " selected";
               selectedFrame = target;

               // Change the extracted source code
               changeSourceExtract(frame_id);
             });

             function changeSourceExtract(frame_id) {
               var el = document.getElementById('frame-source-' + frame_id);
               if (currentSource && el) {
                 currentSource.className += " hidden";
                 el.className = el.className.replace(" hidden", "");
                 currentSource = el;
               }
             }
           }
         </script>
       </div>

         
       <h2 style="margin-top: 30px">Request</h2>
       <p><b>Parameters</b>:</p> <pre>{&quot;name&quot;=&gt;&quot;Recorriendo Buenos Aires&quot;}
       </pre>

       <div class="details">
         <div class="summary"><a href="#" onclick="return toggleSessionDump()">Toggle session dump</a></div>
         <div id="session_dump" style="display:none"><pre></pre></div>
       </div>

       <div class="details">
         <div class="summary"><a href="#" onclick="return toggleEnvDump()">Toggle env dump</a></div>
         <div id="env_dump" style="display:none"><pre>HTTP_ACCEPT: &quot;text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5&quot;
       ORIGINAL_SCRIPT_NAME: &quot;&quot;
       REMOTE_ADDR: &quot;127.0.0.1&quot;
       SERVER_NAME: &quot;www.example.com&quot;</pre></div>
       </div>

       <h2 style="margin-top: 30px">Response</h2>
       <p><b>Headers</b>:</p> <pre>None</pre>

       </div>


       </body>
       </html>
       '
     # ./spec/support/request_spec_helper.rb:4:in `json'
     # ./spec/requests/projects_spec.rb:63:in `block (4 levels) in <top (required)>'
     # ./spec/rails_helper.rb:74:in `block (3 levels) in <top (required)>'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/generic/base.rb:16:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/base.rb:98:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:87:in `cleaning'
     # ./spec/rails_helper.rb:73:in `block (2 levels) in <top (required)>'

  2) Project POST /projects when the request is valid returns status code 201 (created)
     Failure/Error: expect(response).to have_http_status(201)
       expected the response to have status code 201 but it was 400
     # ./spec/requests/projects_spec.rb:70:in `block (4 levels) in <top (required)>'
     # ./spec/rails_helper.rb:74:in `block (3 levels) in <top (required)>'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/generic/base.rb:16:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/base.rb:98:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:87:in `cleaning'
     # ./spec/rails_helper.rb:73:in `block (2 levels) in <top (required)>'

  3) Project POST /projects when the request is invalid (wrong param name) returns status code 422 (unprocessable entity)
     Failure/Error: expect(response).to have_http_status(422)
       expected the response to have status code 422 but it was 400
     # ./spec/requests/projects_spec.rb:77:in `block (4 levels) in <top (required)>'
     # ./spec/rails_helper.rb:74:in `block (3 levels) in <top (required)>'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/generic/base.rb:16:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/base.rb:98:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:87:in `cleaning'
     # ./spec/rails_helper.rb:73:in `block (2 levels) in <top (required)>'

  4) Project POST /projects when the request is invalid (missing params) returns a validation error
     Failure/Error: JSON.parse(response.body)

     JSON::ParserError:
       784: unexpected token at '<!DOCTYPE html>
       <html lang="en">
       <head>
         <meta charset="utf-8" />
         <title>Action Controller: Exception caught</title>
         <style>
           body {
             background-color: #FAFAFA;
             color: #333;
             margin: 0px;
           }

           body, p, ol, ul, td {
             font-family: helvetica, verdana, arial, sans-serif;
             font-size:   13px;
             line-height: 18px;
           }

           pre {
             font-size: 11px;
             white-space: pre-wrap;
           }

           pre.box {
             border: 1px solid #EEE;
             padding: 10px;
             margin: 0px;
             width: 958px;
           }

           header {
             color: #F0F0F0;
             background: #C52F24;
             padding: 0.5em 1.5em;
           }

           h1 {
             margin: 0.2em 0;
             line-height: 1.1em;
             font-size: 2em;
           }

           h2 {
             color: #C52F24;
             line-height: 25px;
           }

           .details {
             border: 1px solid #D0D0D0;
             border-radius: 4px;
             margin: 1em 0px;
             display: block;
             width: 978px;
           }

           .summary {
             padding: 8px 15px;
             border-bottom: 1px solid #D0D0D0;
             display: block;
           }

           .details pre {
             margin: 5px;
             border: none;
           }

           #container {
             box-sizing: border-box;
             width: 100%;
             padding: 0 1.5em;
           }

           .source * {
             margin: 0px;
             padding: 0px;
           }

           .source {
             border: 1px solid #D9D9D9;
             background: #ECECEC;
             width: 978px;
           }

           .source pre {
             padding: 10px 0px;
             border: none;
           }

           .source .data {
             font-size: 80%;
             overflow: auto;
             background-color: #FFF;
           }

           .info {
             padding: 0.5em;
           }

           .source .data .line_numbers {
             background-color: #ECECEC;
             color: #AAA;
             padding: 1em .5em;
             border-right: 1px solid #DDD;
             text-align: right;
           }

           .line {
             padding-left: 10px;
           }

           .line:hover {
             background-color: #F6F6F6;
           }

           .line.active {
             background-color: #FFCCCC;
           }

           .hidden {
             display: none;
           }

           a { color: #980905; }
           a:visited { color: #666; }
           a.trace-frames { color: #666; }
           a:hover { color: #C52F24; }
           a.trace-frames.selected { color: #C52F24 }

           
         </style>

         <script>
           var toggle = function(id) {
             var s = document.getElementById(id).style;
             s.display = s.display == 'none' ? 'block' : 'none';
             return false;
           }
           var show = function(id) {
             document.getElementById(id).style.display = 'block';
           }
           var hide = function(id) {
             document.getElementById(id).style.display = 'none';
           }
           var toggleTrace = function() {
             return toggle('blame_trace');
           }
           var toggleSessionDump = function() {
             return toggle('session_dump');
           }
           var toggleEnvDump = function() {
             return toggle('env_dump');
           }
         </script>
       </head>
       <body>

       <header>
         <h1>
           ActionController::ParameterMissing
             in ProjectsController#create
         </h1>
       </header>

       <div id="container">
         <h2>param is missing or the value is empty: project</h2>

             <div class="source hidden" id="frame-source-0">
             <div class="info">
               Extracted source (around line <strong>#437</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>435</span>
       <span>436</span>
       <span>437</span>
       <span>438</span>
       <span>439</span>
       <span>440</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        value
       </div><div class="line">      else
       </div><div class="line active">        raise ParameterMissing.new(key)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source " id="frame-source-1">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  def project_params
       </div><div class="line">    # whitelist params
       </div><div class="line active">    params.require(:project).permit(:name, :user_id)
       </div><div class="line">  end
       </div><div class="line">
       </div><div class="line">  def set_project
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-2">
             <div class="info">
               Extracted source (around line <strong>#10</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>8</span>
       <span>9</span>
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">  def create
       </div><div class="line active">    @project = Project.create!(project_params)
       </div><div class="line">    json_response(@project, :created)
       </div><div class="line">  end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-3">
             <div class="info">
               Extracted source (around line <strong>#4</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>2</span>
       <span>3</span>
       <span>4</span>
       <span>5</span>
       <span>6</span>
       <span>7</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  module BasicImplicitRender # :nodoc:
       </div><div class="line">    def send_action(method, *args)
       </div><div class="line active">      super.tap { default_render unless performed? }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def default_render(*args)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-4">
             <div class="info">
               Extracted source (around line <strong>#186</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>184</span>
       <span>185</span>
       <span>186</span>
       <span>187</span>
       <span>188</span>
       <span>189</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # which is *not* necessarily the same as the action name.
       </div><div class="line">      def process_action(method_name, *args)
       </div><div class="line active">        send_action(method_name, *args)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Actually call the method associated with the action. Override
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-5">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def process_action(*) #:nodoc:
       </div><div class="line">      self.formats = request.formats.map(&amp;:ref).compact
       </div><div class="line active">      super
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Check for double render errors and set the content_type after rendering.
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-6">
             <div class="info">
               Extracted source (around line <strong>#20</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def process_action(*args)
       </div><div class="line">      run_callbacks(:process_action) do
       </div><div class="line active">        super
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-7">
             <div class="info">
               Extracted source (around line <strong>#131</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>129</span>
       <span>130</span>
       <span>131</span>
       <span>132</span>
       <span>133</span>
       <span>134</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        if next_sequence.final?
       </div><div class="line">          next_sequence.invoke_before(env)
       </div><div class="line active">          env.value = !env.halted &amp;&amp; (!block_given? || yield)
       </div><div class="line">          next_sequence.invoke_after(env)
       </div><div class="line">          env.value
       </div><div class="line">        else
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-8">
             <div class="info">
               Extracted source (around line <strong>#19</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>17</span>
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    # process_action callbacks around the normal behavior.
       </div><div class="line">    def process_action(*args)
       </div><div class="line active">      run_callbacks(:process_action) do
       </div><div class="line">        super
       </div><div class="line">      end
       </div><div class="line">    end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-9">
             <div class="info">
               Extracted source (around line <strong>#20</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    private
       </div><div class="line">      def process_action(*args)
       </div><div class="line active">        super
       </div><div class="line">      rescue Exception =&gt; exception
       </div><div class="line">        request.env[&quot;action_dispatch.show_detailed_exceptions&quot;] ||= show_detailed_exceptions?
       </div><div class="line">        rescue_with_handler(exception) || raise
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-10">
             <div class="info">
               Extracted source (around line <strong>#32</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      ActiveSupport::Notifications.instrument(&quot;process_action.action_controller&quot;, raw_payload) do |payload|
       </div><div class="line">        begin
       </div><div class="line active">          result = super
       </div><div class="line">          payload[:status] = response.status
       </div><div class="line">          result
       </div><div class="line">        ensure
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-11">
             <div class="info">
               Extracted source (around line <strong>#166</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>164</span>
       <span>165</span>
       <span>166</span>
       <span>167</span>
       <span>168</span>
       <span>169</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def instrument(name, payload = {})
       </div><div class="line">        if notifier.listening?(name)
       </div><div class="line active">          instrumenter.instrument(name, payload) { yield payload if block_given? }
       </div><div class="line">        else
       </div><div class="line">          yield payload if block_given?
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-12">
             <div class="info">
               Extracted source (around line <strong>#21</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        listeners_state = start name, payload
       </div><div class="line">        begin
       </div><div class="line active">          yield payload
       </div><div class="line">        rescue Exception =&gt; e
       </div><div class="line">          payload[:exception] = [e.class.name, e.message]
       </div><div class="line">          payload[:exception_object] = e
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-13">
             <div class="info">
               Extracted source (around line <strong>#166</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>164</span>
       <span>165</span>
       <span>166</span>
       <span>167</span>
       <span>168</span>
       <span>169</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def instrument(name, payload = {})
       </div><div class="line">        if notifier.listening?(name)
       </div><div class="line active">          instrumenter.instrument(name, payload) { yield payload if block_given? }
       </div><div class="line">        else
       </div><div class="line">          yield payload if block_given?
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-14">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      ActiveSupport::Notifications.instrument(&quot;start_processing.action_controller&quot;, raw_payload.dup)
       </div><div class="line">
       </div><div class="line active">      ActiveSupport::Notifications.instrument(&quot;process_action.action_controller&quot;, raw_payload) do |payload|
       </div><div class="line">        begin
       </div><div class="line">          result = super
       </div><div class="line">          payload[:status] = response.status
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-15">
             <div class="info">
               Extracted source (around line <strong>#252</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>250</span>
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        request.filtered_parameters.merge! wrapped_filtered_hash
       </div><div class="line">      end
       </div><div class="line active">      super
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-16">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        # and it won&#39;t be cleaned up by the method below.
       </div><div class="line">        ActiveRecord::LogSubscriber.reset_runtime
       </div><div class="line active">        super
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def cleanup_view_runtime
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-17">
             <div class="info">
               Extracted source (around line <strong>#124</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>122</span>
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      @_response_body = nil
       </div><div class="line">
       </div><div class="line active">      process_action(action_name, *args)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Delegates to the class&#39; ::controller_path
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-18">
             <div class="info">
               Extracted source (around line <strong>#189</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>187</span>
       <span>188</span>
       <span>189</span>
       <span>190</span>
       <span>191</span>
       <span>192</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      set_request!(request)
       </div><div class="line">      set_response!(response)
       </div><div class="line active">      process(name)
       </div><div class="line">      request.commit_flash
       </div><div class="line">      to_a
       </div><div class="line">    end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-19">
             <div class="info">
               Extracted source (around line <strong>#253</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
       <span>256</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        middleware_stack.build(name) { |env| new.dispatch(name, req, res) }.call req.env
       </div><div class="line">      else
       </div><div class="line active">        new.dispatch(name, req, res)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">  end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-20">
             <div class="info">
               Extracted source (around line <strong>#49</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>47</span>
       <span>48</span>
       <span>49</span>
       <span>50</span>
       <span>51</span>
       <span>52</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def dispatch(controller, action, req, res)
       </div><div class="line active">          controller.dispatch(action, req, res)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-21">
             <div class="info">
               Extracted source (around line <strong>#31</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          controller = controller req
       </div><div class="line">          res        = controller.make_response! req
       </div><div class="line active">          dispatch(controller, params[:action], req, res)
       </div><div class="line">        rescue ActionController::RoutingError
       </div><div class="line">          if @raise_on_name_error
       </div><div class="line">            raise
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-22">
             <div class="info">
               Extracted source (around line <strong>#50</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>48</span>
       <span>49</span>
       <span>50</span>
       <span>51</span>
       <span>52</span>
       <span>53</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          req.path_parameters = set_params.merge parameters
       </div><div class="line">
       </div><div class="line active">          status, headers, body = route.app.serve(req)
       </div><div class="line">
       </div><div class="line">          if &quot;pass&quot; == headers[&quot;X-Cascade&quot;]
       </div><div class="line">            req.script_name     = script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-23">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def serve(req)
       </div><div class="line active">        find_routes(req).each do |match, parameters, route|
       </div><div class="line">          set_params  = req.path_parameters
       </div><div class="line">          path_info   = req.path_info
       </div><div class="line">          script_name = req.script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-24">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def serve(req)
       </div><div class="line active">        find_routes(req).each do |match, parameters, route|
       </div><div class="line">          set_params  = req.path_parameters
       </div><div class="line">          path_info   = req.path_info
       </div><div class="line">          script_name = req.script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-25">
             <div class="info">
               Extracted source (around line <strong>#834</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>832</span>
       <span>833</span>
       <span>834</span>
       <span>835</span>
       <span>836</span>
       <span>837</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        req = make_request(env)
       </div><div class="line">        req.path_info = Journey::Router::Utils.normalize_path(req.path_info)
       </div><div class="line active">        @router.serve(req)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def recognize_path(path, environment = {})
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-26">
             <div class="info">
               Extracted source (around line <strong>#25</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if etag_status?(status) &amp;&amp; etag_body?(body) &amp;&amp; !skip_caching?(headers)
       </div><div class="line">        original_body = body
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-27">
             <div class="info">
               Extracted source (around line <strong>#38</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>36</span>
       <span>37</span>
       <span>38</span>
       <span>39</span>
       <span>40</span>
       <span>41</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        [status, headers, body]
       </div><div class="line">      else
       </div><div class="line active">        @app.call(env)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-28">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if env[REQUEST_METHOD] == HEAD
       </div><div class="line">        [
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-29">
             <div class="info">
               Extracted source (around line <strong>#556</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>554</span>
       <span>555</span>
       <span>556</span>
       <span>557</span>
       <span>558</span>
       <span>559</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          @last_check = mtime
       </div><div class="line">        end
       </div><div class="line active">        @app.call(env)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-30">
             <div class="info">
               Extracted source (around line <strong>#26</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      result = run_callbacks :call do
       </div><div class="line">        begin
       </div><div class="line active">          @app.call(env)
       </div><div class="line">        rescue =&gt; error
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-31">
             <div class="info">
               Extracted source (around line <strong>#97</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>95</span>
       <span>96</span>
       <span>97</span>
       <span>98</span>
       <span>99</span>
       <span>100</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      if callbacks.empty?
       </div><div class="line active">        yield if block_given?
       </div><div class="line">      else
       </div><div class="line">        env = Filters::Environment.new(self, false, nil)
       </div><div class="line">        next_sequence = callbacks.compile
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-32">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      error = nil
       </div><div class="line active">      result = run_callbacks :call do
       </div><div class="line">        begin
       </div><div class="line">          @app.call(env)
       </div><div class="line">        rescue =&gt; error
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-33">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      state = @executor.run!
       </div><div class="line">      begin
       </div><div class="line active">        response = @app.call(env)
       </div><div class="line">        returned = response &lt;&lt; ::Rack::BodyProxy.new(response.pop) { state.complete! }
       </div><div class="line">      ensure
       </div><div class="line">        state.complete! unless returned
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-34">
             <div class="info">
               Extracted source (around line <strong>#59</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>57</span>
       <span>58</span>
       <span>59</span>
       <span>60</span>
       <span>61</span>
       <span>62</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      request = ActionDispatch::Request.new env
       </div><div class="line active">      _, headers, body = response = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if headers[&quot;X-Cascade&quot;] == &quot;pass&quot;
       </div><div class="line">        body.close if body.respond_to?(:close)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-35">
             <div class="info">
               Extracted source (around line <strong>#31</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      request = ActionDispatch::Request.new env
       </div><div class="line active">      @app.call(env)
       </div><div class="line">    rescue Exception =&gt; exception
       </div><div class="line">      if request.show_exceptions?
       </div><div class="line">        render_exception(request, exception)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-36">
             <div class="info">
               Extracted source (around line <strong>#36</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>34</span>
       <span>35</span>
       <span>36</span>
       <span>37</span>
       <span>38</span>
       <span>39</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          instrumenter.start &quot;request.action_dispatch&quot;, request: request
       </div><div class="line">          logger.info { started_request_message(request) }
       </div><div class="line active">          resp = @app.call(env)
       </div><div class="line">          resp[2] = ::Rack::BodyProxy.new(resp[2]) { finish(request) }
       </div><div class="line">          resp
       </div><div class="line">        rescue Exception
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-37">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        if logger.respond_to?(:tagged)
       </div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
       </div><div class="line">        else
       </div><div class="line">          call_app(request, env)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-38">
             <div class="info">
               Extracted source (around line <strong>#69</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>67</span>
       <span>68</span>
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def tagged(*tags)
       </div><div class="line active">      formatter.tagged(*tags) { yield self }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def flush
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-39">
             <div class="info">
               Extracted source (around line <strong>#26</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def tagged(*tags)
       </div><div class="line">        new_tags = push_tags(*tags)
       </div><div class="line active">        yield self
       </div><div class="line">      ensure
       </div><div class="line">        pop_tags(new_tags.size)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-40">
             <div class="info">
               Extracted source (around line <strong>#69</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>67</span>
       <span>68</span>
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def tagged(*tags)
       </div><div class="line active">      formatter.tagged(*tags) { yield self }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def flush
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-41">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        if logger.respond_to?(:tagged)
       </div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
       </div><div class="line">        else
       </div><div class="line">          call_app(request, env)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-42">
             <div class="info">
               Extracted source (around line <strong>#79</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>77</span>
       <span>78</span>
       <span>79</span>
       <span>80</span>
       <span>81</span>
       <span>82</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      req = ActionDispatch::Request.new env
       </div><div class="line">      req.remote_ip = GetIp.new(req, check_ip, proxies)
       </div><div class="line active">      @app.call(req.env)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # The GetIp class exists as a way to defer processing of the request data
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-43">
             <div class="info">
               Extracted source (around line <strong>#25</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      req = ActionDispatch::Request.new env
       </div><div class="line">      req.request_id = make_request_id(req.x_request_id)
       </div><div class="line active">      @app.call(env).tap { |_status, headers, _body| headers[X_REQUEST_ID] = req.request_id }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-44">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      start_time = Utils.clock_time
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">      request_time = Utils.clock_time - start_time
       </div><div class="line">
       </div><div class="line">      unless headers.has_key?(@header_name)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-45">
             <div class="info">
               Extracted source (around line <strong>#27</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
       <span>30</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          def call(env)
       </div><div class="line">            LocalCacheRegistry.set_cache_for(local_cache_key, LocalStore.new)
       </div><div class="line active">            response = @app.call(env)
       </div><div class="line">            response[2] = ::Rack::BodyProxy.new(response[2]) do
       </div><div class="line">              LocalCacheRegistry.set_cache_for(local_cache_key, nil)
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-46">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      state = @executor.run!
       </div><div class="line">      begin
       </div><div class="line active">        response = @app.call(env)
       </div><div class="line">        returned = response &lt;&lt; ::Rack::BodyProxy.new(response.pop) { state.complete! }
       </div><div class="line">      ensure
       </div><div class="line">        state.complete! unless returned
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-47">
             <div class="info">
               Extracted source (around line <strong>#125</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      end
       </div><div class="line">
       </div><div class="line active">      @app.call(req.env)
       </div><div class="line">    end
       </div><div class="line">  end
       </div><div class="line">end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-48">
             <div class="info">
               Extracted source (around line <strong>#111</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>109</span>
       <span>110</span>
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">      if body.respond_to?(:to_path)
       </div><div class="line">        case type = variation(env)
       </div><div class="line">        when &#39;X-Accel-Redirect&#39;
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-49">
             <div class="info">
               Extracted source (around line <strong>#522</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>520</span>
       <span>521</span>
       <span>522</span>
       <span>523</span>
       <span>524</span>
       <span>525</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      req = build_request env
       </div><div class="line active">      app.call req.env
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Defines additional Rack env configuration that is added on each call.
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-50">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      env[&quot;HTTP_COOKIE&quot;] ||= cookie_jar.for(uri)
       </div><div class="line">      @last_request = Rack::Request.new(env)
       </div><div class="line active">      status, headers, body = @app.call(@last_request.env)
       </div><div class="line">
       </div><div class="line">      @last_response = MockResponse.new(status, headers, body, env[&quot;rack.errors&quot;].flush)
       </div><div class="line">      body.close if body.respond_to?(:close)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-51">
             <div class="info">
               Extracted source (around line <strong>#249</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>247</span>
       <span>248</span>
       <span>249</span>
       <span>250</span>
       <span>251</span>
       <span>252</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        uri.scheme ||= &quot;https&quot; if env[&quot;HTTPS&quot;] == &quot;on&quot;
       </div><div class="line">
       </div><div class="line active">        @rack_mock_session.request(uri, env)
       </div><div class="line">
       </div><div class="line">        if retry_with_digest_auth?(env)
       </div><div class="line">          auth_env = env.merge({
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-52">
             <div class="info">
               Extracted source (around line <strong>#125</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def request(uri, env = {}, &amp;block)
       </div><div class="line">        env = env_for(uri, env)
       </div><div class="line active">        process_request(uri, env, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Set a header to be included on all subsequent requests through the
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-53">
             <div class="info">
               Extracted source (around line <strong>#261</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>259</span>
       <span>260</span>
       <span>261</span>
       <span>262</span>
       <span>263</span>
       <span>264</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        # NOTE: rack-test v0.5 doesn&#39;t build a default uri correctly
       </div><div class="line">        # Make sure requested path is always a full uri
       </div><div class="line active">        session.request(build_full_uri(path, request_env), request_env)
       </div><div class="line">
       </div><div class="line">        @request_count += 1
       </div><div class="line">        @request = ActionDispatch::Request.new(session.last_request.env)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-54">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # details.
       </div><div class="line">      def post(path, **args)
       </div><div class="line active">        process(:post, path, **args)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Performs a PATCH request with the given parameters. See +#process+ for more
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-55">
             <div class="info">
               Extracted source (around line <strong>#348</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>346</span>
       <span>347</span>
       <span>348</span>
       <span>349</span>
       <span>350</span>
       <span>351</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          end
       </div><div class="line">
       </div><div class="line active">          integration_session.__send__(method, *args).tap do
       </div><div class="line">            copy_session_variables!
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-56">
             <div class="info">
               Extracted source (around line <strong>#82</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>80</span>
       <span>81</span>
       <span>82</span>
       <span>83</span>
       <span>84</span>
       <span>85</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    context &quot;when the request is invalid (missing params)&quot; do
       </div><div class="line active">      before { post &quot;/projects&quot;, params: {} }
       </div><div class="line">
       </div><div class="line">      it &quot;returns a validation error&quot; do
       </div><div class="line">        expect(json[&#39;message&#39;]).to match(/Project name can&#39;t be blank/i) #La i indica que es case-insensitive
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-57">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-58">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-59">
             <div class="info">
               Extracted source (around line <strong>#350</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>348</span>
       <span>349</span>
       <span>350</span>
       <span>351</span>
       <span>352</span>
       <span>353</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class BeforeHook &lt; Hook
       </div><div class="line">        def run(example)
       </div><div class="line active">          example.instance_exec(example, &amp;block)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-60">
             <div class="info">
               Extracted source (around line <strong>#507</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
       <span>510</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line active">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-61">
             <div class="info">
               Extracted source (around line <strong>#506</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>504</span>
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line active">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-62">
             <div class="info">
               Extracted source (around line <strong>#506</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>504</span>
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line active">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-63">
             <div class="info">
               Extracted source (around line <strong>#593</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
       <span>596</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line active">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-64">
             <div class="info">
               Extracted source (around line <strong>#592</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line active">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-65">
             <div class="info">
               Extracted source (around line <strong>#592</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line active">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-66">
             <div class="info">
               Extracted source (around line <strong>#462</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>460</span>
       <span>461</span>
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          else
       </div><div class="line">            case position
       </div><div class="line active">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-67">
             <div class="info">
               Extracted source (around line <strong>#494</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>492</span>
       <span>493</span>
       <span>494</span>
       <span>495</span>
       <span>496</span>
       <span>497</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run_before_example
       </div><div class="line">        @example_group_instance.setup_mocks_for_rspec
       </div><div class="line active">        hooks.run(:before, :example, self)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def with_around_and_singleton_context_hooks
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-68">
             <div class="info">
               Extracted source (around line <strong>#253</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
       <span>256</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            with_around_and_singleton_context_hooks do
       </div><div class="line">              begin
       </div><div class="line active">                run_before_example
       </div><div class="line">                @example_group_instance.instance_exec(self, &amp;@example_block)
       </div><div class="line">
       </div><div class="line">                if pending?
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-69">
             <div class="info">
               Extracted source (around line <strong>#500</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>498</span>
       <span>499</span>
       <span>500</span>
       <span>501</span>
       <span>502</span>
       <span>503</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        singleton_context_hooks_host = example_group_instance.singleton_class
       </div><div class="line">        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
       </div><div class="line active">        with_around_example_hooks { yield }
       </div><div class="line">      ensure
       </div><div class="line">        singleton_context_hooks_host.run_after_context_hooks(example_group_instance)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-70">
             <div class="info">
               Extracted source (around line <strong>#457</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>455</span>
       <span>456</span>
       <span>457</span>
       <span>458</span>
       <span>459</span>
       <span>460</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def with_around_example_hooks
       </div><div class="line active">        hooks.run(:around, :example, self) { yield }
       </div><div class="line">      rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; e
       </div><div class="line">        set_exception(e)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-71">
             <div class="info">
               Extracted source (around line <strong>#464</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
       <span>466</span>
       <span>467</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line active">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-72">
             <div class="info">
               Extracted source (around line <strong>#604</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>602</span>
       <span>603</span>
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          return yield if hooks.empty? # exit early to avoid the extra allocation cost of `Example::Procsy`
       </div><div class="line">
       </div><div class="line active">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-73">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-74">
             <div class="info">
               Extracted source (around line <strong>#127</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
       <span>129</span>
       <span>130</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        group.around do |example|
       </div><div class="line">          before_setup
       </div><div class="line active">          example.run
       </div><div class="line">          after_teardown
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-75">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-76">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-77">
             <div class="info">
               Extracted source (around line <strong>#375</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>373</span>
       <span>374</span>
       <span>375</span>
       <span>376</span>
       <span>377</span>
       <span>378</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class AroundHook &lt; Hook
       </div><div class="line">        def execute_with(example, procsy)
       </div><div class="line active">          example.instance_exec(procsy, &amp;block)
       </div><div class="line">          return if procsy.executed?
       </div><div class="line">          Pending.mark_skipped!(example,
       </div><div class="line">                                &quot;#{hook_description} did not execute the example&quot;)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-78">
             <div class="info">
               Extracted source (around line <strong>#606</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line active">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-79">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-80">
             <div class="info">
               Extracted source (around line <strong>#74</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>72</span>
       <span>73</span>
       <span>74</span>
       <span>75</span>
       <span>76</span>
       <span>77</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  config.around(:each) do |example|
       </div><div class="line">    DatabaseCleaner.cleaning do
       </div><div class="line active">      example.run
       </div><div class="line">    end
       </div><div class="line">  end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-81">
             <div class="info">
               Extracted source (around line <strong>#16</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>14</span>
       <span>15</span>
       <span>16</span>
       <span>17</span>
       <span>18</span>
       <span>19</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          start
       </div><div class="line active">          yield
       </div><div class="line">        ensure
       </div><div class="line">          clean
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-82">
             <div class="info">
               Extracted source (around line <strong>#98</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>96</span>
       <span>97</span>
       <span>98</span>
       <span>99</span>
       <span>100</span>
       <span>101</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def cleaning(&amp;block)
       </div><div class="line active">      strategy.cleaning(&amp;block)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def auto_detected?
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-83">
             <div class="info">
               Extracted source (around line <strong>#86</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>84</span>
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def cleaning(&amp;inner_block)
       </div><div class="line">      connections.inject(inner_block) do |curr_block, connection|
       </div><div class="line active">        proc { connection.cleaning(&amp;curr_block) }
       </div><div class="line">      end.call
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-84">
             <div class="info">
               Extracted source (around line <strong>#87</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
       <span>90</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      connections.inject(inner_block) do |curr_block, connection|
       </div><div class="line">        proc { connection.cleaning(&amp;curr_block) }
       </div><div class="line active">      end.call
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def clean_with(*args)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-85">
             <div class="info">
               Extracted source (around line <strong>#73</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>71</span>
       <span>72</span>
       <span>73</span>
       <span>74</span>
       <span>75</span>
       <span>76</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  # start the transaction strategy as examples are run
       </div><div class="line">  config.around(:each) do |example|
       </div><div class="line active">    DatabaseCleaner.cleaning do
       </div><div class="line">      example.run
       </div><div class="line">    end
       </div><div class="line">  end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-86">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-87">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-88">
             <div class="info">
               Extracted source (around line <strong>#375</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>373</span>
       <span>374</span>
       <span>375</span>
       <span>376</span>
       <span>377</span>
       <span>378</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class AroundHook &lt; Hook
       </div><div class="line">        def execute_with(example, procsy)
       </div><div class="line active">          example.instance_exec(procsy, &amp;block)
       </div><div class="line">          return if procsy.executed?
       </div><div class="line">          Pending.mark_skipped!(example,
       </div><div class="line">                                &quot;#{hook_description} did not execute the example&quot;)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-89">
             <div class="info">
               Extracted source (around line <strong>#606</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line active">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-90">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-91">
             <div class="info">
               Extracted source (around line <strong>#607</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
       <span>610</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line active">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div><div class="line">        if respond_to?(:singleton_class) &amp;&amp; singleton_class.ancestors.include?(singleton_class)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-92">
             <div class="info">
               Extracted source (around line <strong>#464</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
       <span>466</span>
       <span>467</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line active">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-93">
             <div class="info">
               Extracted source (around line <strong>#457</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>455</span>
       <span>456</span>
       <span>457</span>
       <span>458</span>
       <span>459</span>
       <span>460</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def with_around_example_hooks
       </div><div class="line active">        hooks.run(:around, :example, self) { yield }
       </div><div class="line">      rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; e
       </div><div class="line">        set_exception(e)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-94">
             <div class="info">
               Extracted source (around line <strong>#500</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>498</span>
       <span>499</span>
       <span>500</span>
       <span>501</span>
       <span>502</span>
       <span>503</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        singleton_context_hooks_host = example_group_instance.singleton_class
       </div><div class="line">        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
       </div><div class="line active">        with_around_example_hooks { yield }
       </div><div class="line">      ensure
       </div><div class="line">        singleton_context_hooks_host.run_after_context_hooks(example_group_instance)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-95">
             <div class="info">
               Extracted source (around line <strong>#251</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>249</span>
       <span>250</span>
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            Pending.mark_pending! self, skip
       </div><div class="line">          elsif !RSpec.configuration.dry_run?
       </div><div class="line active">            with_around_and_singleton_context_hooks do
       </div><div class="line">              begin
       </div><div class="line">                run_before_example
       </div><div class="line">                @example_group_instance.instance_exec(self, &amp;@example_block)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-96">
             <div class="info">
               Extracted source (around line <strong>#627</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>625</span>
       <span>626</span>
       <span>627</span>
       <span>628</span>
       <span>629</span>
       <span>630</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div><div class="line active">          succeeded = example.run(instance, reporter)
       </div><div class="line">          if !succeeded &amp;&amp; reporter.fail_fast_limit_met?
       </div><div class="line">            RSpec.world.wants_to_quit = true
       </div><div class="line">          end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-97">
             <div class="info">
               Extracted source (around line <strong>#623</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>621</span>
       <span>622</span>
       <span>623</span>
       <span>624</span>
       <span>625</span>
       <span>626</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def self.run_examples(reporter)
       </div><div class="line active">        ordering_strategy.order(filtered_examples).map do |example|
       </div><div class="line">          next if RSpec.world.wants_to_quit
       </div><div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-98">
             <div class="info">
               Extracted source (around line <strong>#623</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>621</span>
       <span>622</span>
       <span>623</span>
       <span>624</span>
       <span>625</span>
       <span>626</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def self.run_examples(reporter)
       </div><div class="line active">        ordering_strategy.order(filtered_examples).map do |example|
       </div><div class="line">          next if RSpec.world.wants_to_quit
       </div><div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-99">
             <div class="info">
               Extracted source (around line <strong>#589</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>587</span>
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line active">          result_for_this_group = run_examples(reporter)
       </div><div class="line">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-100">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-101">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-102">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-103">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-104">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-105">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-106">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-107">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-108">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-109">
             <div class="info">
               Extracted source (around line <strong>#1894</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>1892</span>
       <span>1893</span>
       <span>1894</span>
       <span>1895</span>
       <span>1896</span>
       <span>1897</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          run_suite_hooks(&quot;a `before(:suite)` hook&quot;, @before_suite_hooks)
       </div><div class="line active">          yield
       </div><div class="line">        ensure
       </div><div class="line">          run_suite_hooks(&quot;an `after(:suite)` hook&quot;, @after_suite_hooks)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-110">
             <div class="info">
               Extracted source (around line <strong>#113</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
       <span>115</span>
       <span>116</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        examples_count = @world.example_count(example_groups)
       </div><div class="line">        success = @configuration.reporter.report(examples_count) do |reporter|
       </div><div class="line active">          @configuration.with_suite_hooks do
       </div><div class="line">            if examples_count == 0 &amp;&amp; @configuration.fail_if_no_examples
       </div><div class="line">              return @configuration.failure_exit_code
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-111">
             <div class="info">
               Extracted source (around line <strong>#79</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>77</span>
       <span>78</span>
       <span>79</span>
       <span>80</span>
       <span>81</span>
       <span>82</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      start(expected_example_count)
       </div><div class="line">      begin
       </div><div class="line active">        yield self
       </div><div class="line">      ensure
       </div><div class="line">        finish
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-112">
             <div class="info">
               Extracted source (around line <strong>#112</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>110</span>
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
       <span>115</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run_specs(example_groups)
       </div><div class="line">        examples_count = @world.example_count(example_groups)
       </div><div class="line active">        success = @configuration.reporter.report(examples_count) do |reporter|
       </div><div class="line">          @configuration.with_suite_hooks do
       </div><div class="line">            if examples_count == 0 &amp;&amp; @configuration.fail_if_no_examples
       </div><div class="line">              return @configuration.failure_exit_code
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-113">
             <div class="info">
               Extracted source (around line <strong>#87</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
       <span>90</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run(err, out)
       </div><div class="line">        setup(err, out)
       </div><div class="line active">        run_specs(@world.ordered_example_groups).tap do
       </div><div class="line">          persist_example_statuses
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-114">
             <div class="info">
               Extracted source (around line <strong>#71</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
       <span>73</span>
       <span>74</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          options.options[:runner].call(options, err, out)
       </div><div class="line">        else
       </div><div class="line active">          new(options).run(err, out)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-115">
             <div class="info">
               Extracted source (around line <strong>#45</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>43</span>
       <span>44</span>
       <span>45</span>
       <span>46</span>
       <span>47</span>
       <span>48</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def self.invoke
       </div><div class="line">        disable_autorun!
       </div><div class="line active">        status = run(ARGV, $stderr, $stdout).to_i
       </div><div class="line">        exit(status) if status != 0
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-116">
             <div class="info">
               Extracted source (around line <strong>#4</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>2</span>
       <span>3</span>
       <span>4</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">require &#39;rspec/core&#39;
       </div><div class="line active">RSpec::Core::Runner.invoke
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-117">
             <div class="info">
               Extracted source (around line <strong>#23</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">gem &#39;rspec-core&#39;, version
       </div><div class="line active">load Gem.bin_path(&#39;rspec-core&#39;, &#39;rspec&#39;, version)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-118">
             <div class="info">
               Extracted source (around line <strong>#23</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">gem &#39;rspec-core&#39;, version
       </div><div class="line active">load Gem.bin_path(&#39;rspec-core&#39;, &#39;rspec&#39;, version)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-119">
             <div class="info">
               Extracted source (around line <strong>#15</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">end
       </div><div class="line">
       </div><div class="line active">eval File.read($0), binding, $0
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-120">
             <div class="info">
               Extracted source (around line <strong>#15</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">end
       </div><div class="line">
       </div><div class="line active">eval File.read($0), binding, $0
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>

         
       <p><code>Rails.root: /home/giuliano/API Gamified Zooniverse/gamifiedZooniverse/gamified-zoo</code></p>

       <div id="traces">
           <a href="#" onclick="hide(&#39;Framework-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Application-Trace&#39;);; return false;">Application Trace</a> |
           <a href="#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Framework-Trace&#39;);; return false;">Framework Trace</a> |
           <a href="#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Framework-Trace&#39;);show(&#39;Full-Trace&#39;);; return false;">Full Trace</a> 

           <div id="Application-Trace" style="display: block;">
             <pre><code><a class="trace-frames" data-frame-id="1" href="#">app/controllers/projects_controller.rb:33:in `project_params&#39;</a><br><a class="trace-frames" data-frame-id="2" href="#">app/controllers/projects_controller.rb:10:in `create&#39;</a><br></code></pre>
           </div>
           <div id="Framework-Trace" style="display: none;">
             <pre><code><a class="trace-frames" data-frame-id="0" href="#">actionpack (5.1.4) lib/action_controller/metal/strong_parameters.rb:437:in `require&#39;</a><br><a class="trace-frames" data-frame-id="3" href="#">actionpack (5.1.4) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action&#39;</a><br><a class="trace-frames" data-frame-id="4" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:186:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="5" href="#">actionpack (5.1.4) lib/action_controller/metal/rendering.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="6" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:20:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="7" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:131:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="8" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:19:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="9" href="#">actionpack (5.1.4) lib/action_controller/metal/rescue.rb:20:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="10" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="11" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `block in instrument&#39;</a><br><a class="trace-frames" data-frame-id="12" href="#">activesupport (5.1.4) lib/active_support/notifications/instrumenter.rb:21:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="13" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="14" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="15" href="#">actionpack (5.1.4) lib/action_controller/metal/params_wrapper.rb:252:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="16" href="#">activerecord (5.1.4) lib/active_record/railties/controller_runtime.rb:22:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="17" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:124:in `process&#39;</a><br><a class="trace-frames" data-frame-id="18" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:189:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="19" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:253:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="20" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:49:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="21" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:31:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="22" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:50:in `block in serve&#39;</a><br><a class="trace-frames" data-frame-id="23" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `each&#39;</a><br><a class="trace-frames" data-frame-id="24" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="25" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:834:in `call&#39;</a><br><a class="trace-frames" data-frame-id="26" href="#">rack (2.0.3) lib/rack/etag.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="27" href="#">rack (2.0.3) lib/rack/conditional_get.rb:38:in `call&#39;</a><br><a class="trace-frames" data-frame-id="28" href="#">rack (2.0.3) lib/rack/head.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="29" href="#">activerecord (5.1.4) lib/active_record/migration.rb:556:in `call&#39;</a><br><a class="trace-frames" data-frame-id="30" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="31" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:97:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="32" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="33" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="34" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call&#39;</a><br><a class="trace-frames" data-frame-id="35" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call&#39;</a><br><a class="trace-frames" data-frame-id="36" href="#">railties (5.1.4) lib/rails/rack/logger.rb:36:in `call_app&#39;</a><br><a class="trace-frames" data-frame-id="37" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="38" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `block in tagged&#39;</a><br><a class="trace-frames" data-frame-id="39" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:26:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="40" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="41" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="42" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/remote_ip.rb:79:in `call&#39;</a><br><a class="trace-frames" data-frame-id="43" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/request_id.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="44" href="#">rack (2.0.3) lib/rack/runtime.rb:22:in `call&#39;</a><br><a class="trace-frames" data-frame-id="45" href="#">activesupport (5.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="46" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="47" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/static.rb:125:in `call&#39;</a><br><a class="trace-frames" data-frame-id="48" href="#">rack (2.0.3) lib/rack/sendfile.rb:111:in `call&#39;</a><br><a class="trace-frames" data-frame-id="49" href="#">railties (5.1.4) lib/rails/engine.rb:522:in `call&#39;</a><br><a class="trace-frames" data-frame-id="50" href="#">rack-test (0.7.0) lib/rack/mock_session.rb:30:in `request&#39;</a><br><a class="trace-frames" data-frame-id="51" href="#">rack-test (0.7.0) lib/rack/test.rb:249:in `process_request&#39;</a><br><a class="trace-frames" data-frame-id="52" href="#">rack-test (0.7.0) lib/rack/test.rb:125:in `request&#39;</a><br><a class="trace-frames" data-frame-id="53" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:261:in `process&#39;</a><br><a class="trace-frames" data-frame-id="54" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:22:in `post&#39;</a><br><a class="trace-frames" data-frame-id="55" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:348:in `block (2 levels) in &lt;module:Runner&gt;&#39;</a><br><a class="trace-frames" data-frame-id="56" href="#">spec/requests/projects_spec.rb:82:in `block (4 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="57" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="58" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="59" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:350:in `run&#39;</a><br><a class="trace-frames" data-frame-id="60" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:507:in `block in run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="61" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `each&#39;</a><br><a class="trace-frames" data-frame-id="62" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="63" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:593:in `block in run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="64" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `reverse_each&#39;</a><br><a class="trace-frames" data-frame-id="65" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="66" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:462:in `run&#39;</a><br><a class="trace-frames" data-frame-id="67" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:494:in `run_before_example&#39;</a><br><a class="trace-frames" data-frame-id="68" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:253:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="69" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `block in with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="70" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `block in with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="71" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="72" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:604:in `block in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="73" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="74" href="#">rspec-rails (3.6.1) lib/rspec/rails/adapters.rb:127:in `block (2 levels) in &lt;module:MinitestLifecycleAdapter&gt;&#39;</a><br><a class="trace-frames" data-frame-id="75" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="76" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="77" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="78" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="79" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="80" href="#">spec/rails_helper.rb:74:in `block (3 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="81" href="#">database_cleaner (1.6.1) lib/database_cleaner/generic/base.rb:16:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="82" href="#">database_cleaner (1.6.1) lib/database_cleaner/base.rb:98:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="83" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning&#39;</a><br><a class="trace-frames" data-frame-id="84" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:87:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="85" href="#">spec/rails_helper.rb:73:in `block (2 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="86" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="87" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="88" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="89" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="90" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="91" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:607:in `run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="92" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `run&#39;</a><br><a class="trace-frames" data-frame-id="93" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="94" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="95" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:251:in `run&#39;</a><br><a class="trace-frames" data-frame-id="96" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:627:in `block in run_examples&#39;</a><br><a class="trace-frames" data-frame-id="97" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `map&#39;</a><br><a class="trace-frames" data-frame-id="98" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `run_examples&#39;</a><br><a class="trace-frames" data-frame-id="99" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:589:in `run&#39;</a><br><a class="trace-frames" data-frame-id="100" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="101" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="102" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="103" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="104" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="105" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="106" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (3 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="107" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `map&#39;</a><br><a class="trace-frames" data-frame-id="108" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (2 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="109" href="#">rspec-core (3.6.0) lib/rspec/core/configuration.rb:1894:in `with_suite_hooks&#39;</a><br><a class="trace-frames" data-frame-id="110" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:113:in `block in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="111" href="#">rspec-core (3.6.0) lib/rspec/core/reporter.rb:79:in `report&#39;</a><br><a class="trace-frames" data-frame-id="112" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:112:in `run_specs&#39;</a><br><a class="trace-frames" data-frame-id="113" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:87:in `run&#39;</a><br><a class="trace-frames" data-frame-id="114" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:71:in `run&#39;</a><br><a class="trace-frames" data-frame-id="115" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:45:in `invoke&#39;</a><br><a class="trace-frames" data-frame-id="116" href="#">rspec-core (3.6.0) exe/rspec:4:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="117" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `load&#39;</a><br><a class="trace-frames" data-frame-id="118" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `&lt;main&gt;&#39;</a><br><a class="trace-frames" data-frame-id="119" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `eval&#39;</a><br><a class="trace-frames" data-frame-id="120" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `&lt;main&gt;&#39;</a><br></code></pre>
           </div>
           <div id="Full-Trace" style="display: none;">
             <pre><code><a class="trace-frames" data-frame-id="0" href="#">actionpack (5.1.4) lib/action_controller/metal/strong_parameters.rb:437:in `require&#39;</a><br><a class="trace-frames" data-frame-id="1" href="#">app/controllers/projects_controller.rb:33:in `project_params&#39;</a><br><a class="trace-frames" data-frame-id="2" href="#">app/controllers/projects_controller.rb:10:in `create&#39;</a><br><a class="trace-frames" data-frame-id="3" href="#">actionpack (5.1.4) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action&#39;</a><br><a class="trace-frames" data-frame-id="4" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:186:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="5" href="#">actionpack (5.1.4) lib/action_controller/metal/rendering.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="6" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:20:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="7" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:131:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="8" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:19:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="9" href="#">actionpack (5.1.4) lib/action_controller/metal/rescue.rb:20:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="10" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="11" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `block in instrument&#39;</a><br><a class="trace-frames" data-frame-id="12" href="#">activesupport (5.1.4) lib/active_support/notifications/instrumenter.rb:21:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="13" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="14" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="15" href="#">actionpack (5.1.4) lib/action_controller/metal/params_wrapper.rb:252:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="16" href="#">activerecord (5.1.4) lib/active_record/railties/controller_runtime.rb:22:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="17" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:124:in `process&#39;</a><br><a class="trace-frames" data-frame-id="18" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:189:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="19" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:253:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="20" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:49:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="21" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:31:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="22" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:50:in `block in serve&#39;</a><br><a class="trace-frames" data-frame-id="23" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `each&#39;</a><br><a class="trace-frames" data-frame-id="24" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="25" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:834:in `call&#39;</a><br><a class="trace-frames" data-frame-id="26" href="#">rack (2.0.3) lib/rack/etag.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="27" href="#">rack (2.0.3) lib/rack/conditional_get.rb:38:in `call&#39;</a><br><a class="trace-frames" data-frame-id="28" href="#">rack (2.0.3) lib/rack/head.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="29" href="#">activerecord (5.1.4) lib/active_record/migration.rb:556:in `call&#39;</a><br><a class="trace-frames" data-frame-id="30" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="31" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:97:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="32" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="33" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="34" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call&#39;</a><br><a class="trace-frames" data-frame-id="35" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call&#39;</a><br><a class="trace-frames" data-frame-id="36" href="#">railties (5.1.4) lib/rails/rack/logger.rb:36:in `call_app&#39;</a><br><a class="trace-frames" data-frame-id="37" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="38" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `block in tagged&#39;</a><br><a class="trace-frames" data-frame-id="39" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:26:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="40" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="41" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="42" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/remote_ip.rb:79:in `call&#39;</a><br><a class="trace-frames" data-frame-id="43" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/request_id.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="44" href="#">rack (2.0.3) lib/rack/runtime.rb:22:in `call&#39;</a><br><a class="trace-frames" data-frame-id="45" href="#">activesupport (5.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="46" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="47" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/static.rb:125:in `call&#39;</a><br><a class="trace-frames" data-frame-id="48" href="#">rack (2.0.3) lib/rack/sendfile.rb:111:in `call&#39;</a><br><a class="trace-frames" data-frame-id="49" href="#">railties (5.1.4) lib/rails/engine.rb:522:in `call&#39;</a><br><a class="trace-frames" data-frame-id="50" href="#">rack-test (0.7.0) lib/rack/mock_session.rb:30:in `request&#39;</a><br><a class="trace-frames" data-frame-id="51" href="#">rack-test (0.7.0) lib/rack/test.rb:249:in `process_request&#39;</a><br><a class="trace-frames" data-frame-id="52" href="#">rack-test (0.7.0) lib/rack/test.rb:125:in `request&#39;</a><br><a class="trace-frames" data-frame-id="53" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:261:in `process&#39;</a><br><a class="trace-frames" data-frame-id="54" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:22:in `post&#39;</a><br><a class="trace-frames" data-frame-id="55" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:348:in `block (2 levels) in &lt;module:Runner&gt;&#39;</a><br><a class="trace-frames" data-frame-id="56" href="#">spec/requests/projects_spec.rb:82:in `block (4 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="57" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="58" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="59" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:350:in `run&#39;</a><br><a class="trace-frames" data-frame-id="60" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:507:in `block in run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="61" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `each&#39;</a><br><a class="trace-frames" data-frame-id="62" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="63" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:593:in `block in run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="64" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `reverse_each&#39;</a><br><a class="trace-frames" data-frame-id="65" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="66" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:462:in `run&#39;</a><br><a class="trace-frames" data-frame-id="67" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:494:in `run_before_example&#39;</a><br><a class="trace-frames" data-frame-id="68" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:253:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="69" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `block in with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="70" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `block in with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="71" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="72" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:604:in `block in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="73" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="74" href="#">rspec-rails (3.6.1) lib/rspec/rails/adapters.rb:127:in `block (2 levels) in &lt;module:MinitestLifecycleAdapter&gt;&#39;</a><br><a class="trace-frames" data-frame-id="75" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="76" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="77" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="78" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="79" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="80" href="#">spec/rails_helper.rb:74:in `block (3 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="81" href="#">database_cleaner (1.6.1) lib/database_cleaner/generic/base.rb:16:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="82" href="#">database_cleaner (1.6.1) lib/database_cleaner/base.rb:98:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="83" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning&#39;</a><br><a class="trace-frames" data-frame-id="84" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:87:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="85" href="#">spec/rails_helper.rb:73:in `block (2 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="86" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="87" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="88" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="89" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="90" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="91" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:607:in `run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="92" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `run&#39;</a><br><a class="trace-frames" data-frame-id="93" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="94" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="95" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:251:in `run&#39;</a><br><a class="trace-frames" data-frame-id="96" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:627:in `block in run_examples&#39;</a><br><a class="trace-frames" data-frame-id="97" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `map&#39;</a><br><a class="trace-frames" data-frame-id="98" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `run_examples&#39;</a><br><a class="trace-frames" data-frame-id="99" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:589:in `run&#39;</a><br><a class="trace-frames" data-frame-id="100" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="101" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="102" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="103" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="104" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="105" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="106" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (3 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="107" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `map&#39;</a><br><a class="trace-frames" data-frame-id="108" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (2 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="109" href="#">rspec-core (3.6.0) lib/rspec/core/configuration.rb:1894:in `with_suite_hooks&#39;</a><br><a class="trace-frames" data-frame-id="110" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:113:in `block in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="111" href="#">rspec-core (3.6.0) lib/rspec/core/reporter.rb:79:in `report&#39;</a><br><a class="trace-frames" data-frame-id="112" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:112:in `run_specs&#39;</a><br><a class="trace-frames" data-frame-id="113" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:87:in `run&#39;</a><br><a class="trace-frames" data-frame-id="114" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:71:in `run&#39;</a><br><a class="trace-frames" data-frame-id="115" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:45:in `invoke&#39;</a><br><a class="trace-frames" data-frame-id="116" href="#">rspec-core (3.6.0) exe/rspec:4:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="117" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `load&#39;</a><br><a class="trace-frames" data-frame-id="118" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `&lt;main&gt;&#39;</a><br><a class="trace-frames" data-frame-id="119" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `eval&#39;</a><br><a class="trace-frames" data-frame-id="120" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `&lt;main&gt;&#39;</a><br></code></pre>
           </div>

         <script type="text/javascript">
           var traceFrames = document.getElementsByClassName('trace-frames');
           var selectedFrame, currentSource = document.getElementById('frame-source-0');

           // Add click listeners for all stack frames
           for (var i = 0; i < traceFrames.length; i++) {
             traceFrames[i].addEventListener('click', function(e) {
               e.preventDefault();
               var target = e.target;
               var frame_id = target.dataset.frameId;

               if (selectedFrame) {
                 selectedFrame.className = selectedFrame.className.replace("selected", "");
               }

               target.className += " selected";
               selectedFrame = target;

               // Change the extracted source code
               changeSourceExtract(frame_id);
             });

             function changeSourceExtract(frame_id) {
               var el = document.getElementById('frame-source-' + frame_id);
               if (currentSource && el) {
                 currentSource.className += " hidden";
                 el.className = el.className.replace(" hidden", "");
                 currentSource = el;
               }
             }
           }
         </script>
       </div>

         
       <h2 style="margin-top: 30px">Request</h2>
       <p><b>Parameters</b>:</p> <pre>None</pre>

       <div class="details">
         <div class="summary"><a href="#" onclick="return toggleSessionDump()">Toggle session dump</a></div>
         <div id="session_dump" style="display:none"><pre></pre></div>
       </div>

       <div class="details">
         <div class="summary"><a href="#" onclick="return toggleEnvDump()">Toggle env dump</a></div>
         <div id="env_dump" style="display:none"><pre>HTTP_ACCEPT: &quot;text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5&quot;
       ORIGINAL_SCRIPT_NAME: &quot;&quot;
       REMOTE_ADDR: &quot;127.0.0.1&quot;
       SERVER_NAME: &quot;www.example.com&quot;</pre></div>
       </div>

       <h2 style="margin-top: 30px">Response</h2>
       <p><b>Headers</b>:</p> <pre>None</pre>

       </div>


       </body>
       </html>
       '
     # ./spec/support/request_spec_helper.rb:4:in `json'
     # ./spec/requests/projects_spec.rb:85:in `block (4 levels) in <top (required)>'
     # ./spec/rails_helper.rb:74:in `block (3 levels) in <top (required)>'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/generic/base.rb:16:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/base.rb:98:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:87:in `cleaning'
     # ./spec/rails_helper.rb:73:in `block (2 levels) in <top (required)>'

  5) Project POST /projects when the request is invalid (missing params) returns status code 422 (unprocessable entity)
     Failure/Error: expect(response).to have_http_status(422)
       expected the response to have status code 422 but it was 400
     # ./spec/requests/projects_spec.rb:89:in `block (4 levels) in <top (required)>'
     # ./spec/rails_helper.rb:74:in `block (3 levels) in <top (required)>'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/generic/base.rb:16:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/base.rb:98:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:87:in `cleaning'
     # ./spec/rails_helper.rb:73:in `block (2 levels) in <top (required)>'

  6) Project POST /projects when the name of the project is taken returns a validation error
     Failure/Error: JSON.parse(response.body)

     JSON::ParserError:
       784: unexpected token at '<!DOCTYPE html>
       <html lang="en">
       <head>
         <meta charset="utf-8" />
         <title>Action Controller: Exception caught</title>
         <style>
           body {
             background-color: #FAFAFA;
             color: #333;
             margin: 0px;
           }

           body, p, ol, ul, td {
             font-family: helvetica, verdana, arial, sans-serif;
             font-size:   13px;
             line-height: 18px;
           }

           pre {
             font-size: 11px;
             white-space: pre-wrap;
           }

           pre.box {
             border: 1px solid #EEE;
             padding: 10px;
             margin: 0px;
             width: 958px;
           }

           header {
             color: #F0F0F0;
             background: #C52F24;
             padding: 0.5em 1.5em;
           }

           h1 {
             margin: 0.2em 0;
             line-height: 1.1em;
             font-size: 2em;
           }

           h2 {
             color: #C52F24;
             line-height: 25px;
           }

           .details {
             border: 1px solid #D0D0D0;
             border-radius: 4px;
             margin: 1em 0px;
             display: block;
             width: 978px;
           }

           .summary {
             padding: 8px 15px;
             border-bottom: 1px solid #D0D0D0;
             display: block;
           }

           .details pre {
             margin: 5px;
             border: none;
           }

           #container {
             box-sizing: border-box;
             width: 100%;
             padding: 0 1.5em;
           }

           .source * {
             margin: 0px;
             padding: 0px;
           }

           .source {
             border: 1px solid #D9D9D9;
             background: #ECECEC;
             width: 978px;
           }

           .source pre {
             padding: 10px 0px;
             border: none;
           }

           .source .data {
             font-size: 80%;
             overflow: auto;
             background-color: #FFF;
           }

           .info {
             padding: 0.5em;
           }

           .source .data .line_numbers {
             background-color: #ECECEC;
             color: #AAA;
             padding: 1em .5em;
             border-right: 1px solid #DDD;
             text-align: right;
           }

           .line {
             padding-left: 10px;
           }

           .line:hover {
             background-color: #F6F6F6;
           }

           .line.active {
             background-color: #FFCCCC;
           }

           .hidden {
             display: none;
           }

           a { color: #980905; }
           a:visited { color: #666; }
           a.trace-frames { color: #666; }
           a:hover { color: #C52F24; }
           a.trace-frames.selected { color: #C52F24 }

           
         </style>

         <script>
           var toggle = function(id) {
             var s = document.getElementById(id).style;
             s.display = s.display == 'none' ? 'block' : 'none';
             return false;
           }
           var show = function(id) {
             document.getElementById(id).style.display = 'block';
           }
           var hide = function(id) {
             document.getElementById(id).style.display = 'none';
           }
           var toggleTrace = function() {
             return toggle('blame_trace');
           }
           var toggleSessionDump = function() {
             return toggle('session_dump');
           }
           var toggleEnvDump = function() {
             return toggle('env_dump');
           }
         </script>
       </head>
       <body>

       <header>
         <h1>
           ActionController::ParameterMissing
             in ProjectsController#create
         </h1>
       </header>

       <div id="container">
         <h2>param is missing or the value is empty: project</h2>

             <div class="source hidden" id="frame-source-0">
             <div class="info">
               Extracted source (around line <strong>#437</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>435</span>
       <span>436</span>
       <span>437</span>
       <span>438</span>
       <span>439</span>
       <span>440</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        value
       </div><div class="line">      else
       </div><div class="line active">        raise ParameterMissing.new(key)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source " id="frame-source-1">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  def project_params
       </div><div class="line">    # whitelist params
       </div><div class="line active">    params.require(:project).permit(:name, :user_id)
       </div><div class="line">  end
       </div><div class="line">
       </div><div class="line">  def set_project
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-2">
             <div class="info">
               Extracted source (around line <strong>#10</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>8</span>
       <span>9</span>
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">  def create
       </div><div class="line active">    @project = Project.create!(project_params)
       </div><div class="line">    json_response(@project, :created)
       </div><div class="line">  end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-3">
             <div class="info">
               Extracted source (around line <strong>#4</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>2</span>
       <span>3</span>
       <span>4</span>
       <span>5</span>
       <span>6</span>
       <span>7</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  module BasicImplicitRender # :nodoc:
       </div><div class="line">    def send_action(method, *args)
       </div><div class="line active">      super.tap { default_render unless performed? }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def default_render(*args)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-4">
             <div class="info">
               Extracted source (around line <strong>#186</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>184</span>
       <span>185</span>
       <span>186</span>
       <span>187</span>
       <span>188</span>
       <span>189</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # which is *not* necessarily the same as the action name.
       </div><div class="line">      def process_action(method_name, *args)
       </div><div class="line active">        send_action(method_name, *args)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Actually call the method associated with the action. Override
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-5">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def process_action(*) #:nodoc:
       </div><div class="line">      self.formats = request.formats.map(&amp;:ref).compact
       </div><div class="line active">      super
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Check for double render errors and set the content_type after rendering.
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-6">
             <div class="info">
               Extracted source (around line <strong>#20</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def process_action(*args)
       </div><div class="line">      run_callbacks(:process_action) do
       </div><div class="line active">        super
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-7">
             <div class="info">
               Extracted source (around line <strong>#131</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>129</span>
       <span>130</span>
       <span>131</span>
       <span>132</span>
       <span>133</span>
       <span>134</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        if next_sequence.final?
       </div><div class="line">          next_sequence.invoke_before(env)
       </div><div class="line active">          env.value = !env.halted &amp;&amp; (!block_given? || yield)
       </div><div class="line">          next_sequence.invoke_after(env)
       </div><div class="line">          env.value
       </div><div class="line">        else
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-8">
             <div class="info">
               Extracted source (around line <strong>#19</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>17</span>
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    # process_action callbacks around the normal behavior.
       </div><div class="line">    def process_action(*args)
       </div><div class="line active">      run_callbacks(:process_action) do
       </div><div class="line">        super
       </div><div class="line">      end
       </div><div class="line">    end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-9">
             <div class="info">
               Extracted source (around line <strong>#20</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    private
       </div><div class="line">      def process_action(*args)
       </div><div class="line active">        super
       </div><div class="line">      rescue Exception =&gt; exception
       </div><div class="line">        request.env[&quot;action_dispatch.show_detailed_exceptions&quot;] ||= show_detailed_exceptions?
       </div><div class="line">        rescue_with_handler(exception) || raise
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-10">
             <div class="info">
               Extracted source (around line <strong>#32</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      ActiveSupport::Notifications.instrument(&quot;process_action.action_controller&quot;, raw_payload) do |payload|
       </div><div class="line">        begin
       </div><div class="line active">          result = super
       </div><div class="line">          payload[:status] = response.status
       </div><div class="line">          result
       </div><div class="line">        ensure
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-11">
             <div class="info">
               Extracted source (around line <strong>#166</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>164</span>
       <span>165</span>
       <span>166</span>
       <span>167</span>
       <span>168</span>
       <span>169</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def instrument(name, payload = {})
       </div><div class="line">        if notifier.listening?(name)
       </div><div class="line active">          instrumenter.instrument(name, payload) { yield payload if block_given? }
       </div><div class="line">        else
       </div><div class="line">          yield payload if block_given?
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-12">
             <div class="info">
               Extracted source (around line <strong>#21</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        listeners_state = start name, payload
       </div><div class="line">        begin
       </div><div class="line active">          yield payload
       </div><div class="line">        rescue Exception =&gt; e
       </div><div class="line">          payload[:exception] = [e.class.name, e.message]
       </div><div class="line">          payload[:exception_object] = e
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-13">
             <div class="info">
               Extracted source (around line <strong>#166</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>164</span>
       <span>165</span>
       <span>166</span>
       <span>167</span>
       <span>168</span>
       <span>169</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def instrument(name, payload = {})
       </div><div class="line">        if notifier.listening?(name)
       </div><div class="line active">          instrumenter.instrument(name, payload) { yield payload if block_given? }
       </div><div class="line">        else
       </div><div class="line">          yield payload if block_given?
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-14">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      ActiveSupport::Notifications.instrument(&quot;start_processing.action_controller&quot;, raw_payload.dup)
       </div><div class="line">
       </div><div class="line active">      ActiveSupport::Notifications.instrument(&quot;process_action.action_controller&quot;, raw_payload) do |payload|
       </div><div class="line">        begin
       </div><div class="line">          result = super
       </div><div class="line">          payload[:status] = response.status
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-15">
             <div class="info">
               Extracted source (around line <strong>#252</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>250</span>
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        request.filtered_parameters.merge! wrapped_filtered_hash
       </div><div class="line">      end
       </div><div class="line active">      super
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-16">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        # and it won&#39;t be cleaned up by the method below.
       </div><div class="line">        ActiveRecord::LogSubscriber.reset_runtime
       </div><div class="line active">        super
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def cleanup_view_runtime
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-17">
             <div class="info">
               Extracted source (around line <strong>#124</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>122</span>
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      @_response_body = nil
       </div><div class="line">
       </div><div class="line active">      process_action(action_name, *args)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Delegates to the class&#39; ::controller_path
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-18">
             <div class="info">
               Extracted source (around line <strong>#189</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>187</span>
       <span>188</span>
       <span>189</span>
       <span>190</span>
       <span>191</span>
       <span>192</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      set_request!(request)
       </div><div class="line">      set_response!(response)
       </div><div class="line active">      process(name)
       </div><div class="line">      request.commit_flash
       </div><div class="line">      to_a
       </div><div class="line">    end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-19">
             <div class="info">
               Extracted source (around line <strong>#253</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
       <span>256</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        middleware_stack.build(name) { |env| new.dispatch(name, req, res) }.call req.env
       </div><div class="line">      else
       </div><div class="line active">        new.dispatch(name, req, res)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">  end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-20">
             <div class="info">
               Extracted source (around line <strong>#49</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>47</span>
       <span>48</span>
       <span>49</span>
       <span>50</span>
       <span>51</span>
       <span>52</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def dispatch(controller, action, req, res)
       </div><div class="line active">          controller.dispatch(action, req, res)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-21">
             <div class="info">
               Extracted source (around line <strong>#31</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          controller = controller req
       </div><div class="line">          res        = controller.make_response! req
       </div><div class="line active">          dispatch(controller, params[:action], req, res)
       </div><div class="line">        rescue ActionController::RoutingError
       </div><div class="line">          if @raise_on_name_error
       </div><div class="line">            raise
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-22">
             <div class="info">
               Extracted source (around line <strong>#50</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>48</span>
       <span>49</span>
       <span>50</span>
       <span>51</span>
       <span>52</span>
       <span>53</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          req.path_parameters = set_params.merge parameters
       </div><div class="line">
       </div><div class="line active">          status, headers, body = route.app.serve(req)
       </div><div class="line">
       </div><div class="line">          if &quot;pass&quot; == headers[&quot;X-Cascade&quot;]
       </div><div class="line">            req.script_name     = script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-23">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def serve(req)
       </div><div class="line active">        find_routes(req).each do |match, parameters, route|
       </div><div class="line">          set_params  = req.path_parameters
       </div><div class="line">          path_info   = req.path_info
       </div><div class="line">          script_name = req.script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-24">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def serve(req)
       </div><div class="line active">        find_routes(req).each do |match, parameters, route|
       </div><div class="line">          set_params  = req.path_parameters
       </div><div class="line">          path_info   = req.path_info
       </div><div class="line">          script_name = req.script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-25">
             <div class="info">
               Extracted source (around line <strong>#834</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>832</span>
       <span>833</span>
       <span>834</span>
       <span>835</span>
       <span>836</span>
       <span>837</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        req = make_request(env)
       </div><div class="line">        req.path_info = Journey::Router::Utils.normalize_path(req.path_info)
       </div><div class="line active">        @router.serve(req)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def recognize_path(path, environment = {})
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-26">
             <div class="info">
               Extracted source (around line <strong>#25</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if etag_status?(status) &amp;&amp; etag_body?(body) &amp;&amp; !skip_caching?(headers)
       </div><div class="line">        original_body = body
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-27">
             <div class="info">
               Extracted source (around line <strong>#38</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>36</span>
       <span>37</span>
       <span>38</span>
       <span>39</span>
       <span>40</span>
       <span>41</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        [status, headers, body]
       </div><div class="line">      else
       </div><div class="line active">        @app.call(env)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-28">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if env[REQUEST_METHOD] == HEAD
       </div><div class="line">        [
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-29">
             <div class="info">
               Extracted source (around line <strong>#556</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>554</span>
       <span>555</span>
       <span>556</span>
       <span>557</span>
       <span>558</span>
       <span>559</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          @last_check = mtime
       </div><div class="line">        end
       </div><div class="line active">        @app.call(env)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-30">
             <div class="info">
               Extracted source (around line <strong>#26</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      result = run_callbacks :call do
       </div><div class="line">        begin
       </div><div class="line active">          @app.call(env)
       </div><div class="line">        rescue =&gt; error
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-31">
             <div class="info">
               Extracted source (around line <strong>#97</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>95</span>
       <span>96</span>
       <span>97</span>
       <span>98</span>
       <span>99</span>
       <span>100</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      if callbacks.empty?
       </div><div class="line active">        yield if block_given?
       </div><div class="line">      else
       </div><div class="line">        env = Filters::Environment.new(self, false, nil)
       </div><div class="line">        next_sequence = callbacks.compile
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-32">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      error = nil
       </div><div class="line active">      result = run_callbacks :call do
       </div><div class="line">        begin
       </div><div class="line">          @app.call(env)
       </div><div class="line">        rescue =&gt; error
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-33">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      state = @executor.run!
       </div><div class="line">      begin
       </div><div class="line active">        response = @app.call(env)
       </div><div class="line">        returned = response &lt;&lt; ::Rack::BodyProxy.new(response.pop) { state.complete! }
       </div><div class="line">      ensure
       </div><div class="line">        state.complete! unless returned
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-34">
             <div class="info">
               Extracted source (around line <strong>#59</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>57</span>
       <span>58</span>
       <span>59</span>
       <span>60</span>
       <span>61</span>
       <span>62</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      request = ActionDispatch::Request.new env
       </div><div class="line active">      _, headers, body = response = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if headers[&quot;X-Cascade&quot;] == &quot;pass&quot;
       </div><div class="line">        body.close if body.respond_to?(:close)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-35">
             <div class="info">
               Extracted source (around line <strong>#31</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      request = ActionDispatch::Request.new env
       </div><div class="line active">      @app.call(env)
       </div><div class="line">    rescue Exception =&gt; exception
       </div><div class="line">      if request.show_exceptions?
       </div><div class="line">        render_exception(request, exception)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-36">
             <div class="info">
               Extracted source (around line <strong>#36</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>34</span>
       <span>35</span>
       <span>36</span>
       <span>37</span>
       <span>38</span>
       <span>39</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          instrumenter.start &quot;request.action_dispatch&quot;, request: request
       </div><div class="line">          logger.info { started_request_message(request) }
       </div><div class="line active">          resp = @app.call(env)
       </div><div class="line">          resp[2] = ::Rack::BodyProxy.new(resp[2]) { finish(request) }
       </div><div class="line">          resp
       </div><div class="line">        rescue Exception
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-37">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        if logger.respond_to?(:tagged)
       </div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
       </div><div class="line">        else
       </div><div class="line">          call_app(request, env)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-38">
             <div class="info">
               Extracted source (around line <strong>#69</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>67</span>
       <span>68</span>
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def tagged(*tags)
       </div><div class="line active">      formatter.tagged(*tags) { yield self }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def flush
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-39">
             <div class="info">
               Extracted source (around line <strong>#26</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def tagged(*tags)
       </div><div class="line">        new_tags = push_tags(*tags)
       </div><div class="line active">        yield self
       </div><div class="line">      ensure
       </div><div class="line">        pop_tags(new_tags.size)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-40">
             <div class="info">
               Extracted source (around line <strong>#69</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>67</span>
       <span>68</span>
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def tagged(*tags)
       </div><div class="line active">      formatter.tagged(*tags) { yield self }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def flush
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-41">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        if logger.respond_to?(:tagged)
       </div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
       </div><div class="line">        else
       </div><div class="line">          call_app(request, env)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-42">
             <div class="info">
               Extracted source (around line <strong>#79</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>77</span>
       <span>78</span>
       <span>79</span>
       <span>80</span>
       <span>81</span>
       <span>82</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      req = ActionDispatch::Request.new env
       </div><div class="line">      req.remote_ip = GetIp.new(req, check_ip, proxies)
       </div><div class="line active">      @app.call(req.env)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # The GetIp class exists as a way to defer processing of the request data
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-43">
             <div class="info">
               Extracted source (around line <strong>#25</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      req = ActionDispatch::Request.new env
       </div><div class="line">      req.request_id = make_request_id(req.x_request_id)
       </div><div class="line active">      @app.call(env).tap { |_status, headers, _body| headers[X_REQUEST_ID] = req.request_id }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-44">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      start_time = Utils.clock_time
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">      request_time = Utils.clock_time - start_time
       </div><div class="line">
       </div><div class="line">      unless headers.has_key?(@header_name)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-45">
             <div class="info">
               Extracted source (around line <strong>#27</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
       <span>30</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          def call(env)
       </div><div class="line">            LocalCacheRegistry.set_cache_for(local_cache_key, LocalStore.new)
       </div><div class="line active">            response = @app.call(env)
       </div><div class="line">            response[2] = ::Rack::BodyProxy.new(response[2]) do
       </div><div class="line">              LocalCacheRegistry.set_cache_for(local_cache_key, nil)
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-46">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      state = @executor.run!
       </div><div class="line">      begin
       </div><div class="line active">        response = @app.call(env)
       </div><div class="line">        returned = response &lt;&lt; ::Rack::BodyProxy.new(response.pop) { state.complete! }
       </div><div class="line">      ensure
       </div><div class="line">        state.complete! unless returned
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-47">
             <div class="info">
               Extracted source (around line <strong>#125</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      end
       </div><div class="line">
       </div><div class="line active">      @app.call(req.env)
       </div><div class="line">    end
       </div><div class="line">  end
       </div><div class="line">end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-48">
             <div class="info">
               Extracted source (around line <strong>#111</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>109</span>
       <span>110</span>
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">      if body.respond_to?(:to_path)
       </div><div class="line">        case type = variation(env)
       </div><div class="line">        when &#39;X-Accel-Redirect&#39;
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-49">
             <div class="info">
               Extracted source (around line <strong>#522</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>520</span>
       <span>521</span>
       <span>522</span>
       <span>523</span>
       <span>524</span>
       <span>525</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      req = build_request env
       </div><div class="line active">      app.call req.env
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Defines additional Rack env configuration that is added on each call.
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-50">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      env[&quot;HTTP_COOKIE&quot;] ||= cookie_jar.for(uri)
       </div><div class="line">      @last_request = Rack::Request.new(env)
       </div><div class="line active">      status, headers, body = @app.call(@last_request.env)
       </div><div class="line">
       </div><div class="line">      @last_response = MockResponse.new(status, headers, body, env[&quot;rack.errors&quot;].flush)
       </div><div class="line">      body.close if body.respond_to?(:close)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-51">
             <div class="info">
               Extracted source (around line <strong>#249</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>247</span>
       <span>248</span>
       <span>249</span>
       <span>250</span>
       <span>251</span>
       <span>252</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        uri.scheme ||= &quot;https&quot; if env[&quot;HTTPS&quot;] == &quot;on&quot;
       </div><div class="line">
       </div><div class="line active">        @rack_mock_session.request(uri, env)
       </div><div class="line">
       </div><div class="line">        if retry_with_digest_auth?(env)
       </div><div class="line">          auth_env = env.merge({
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-52">
             <div class="info">
               Extracted source (around line <strong>#125</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def request(uri, env = {}, &amp;block)
       </div><div class="line">        env = env_for(uri, env)
       </div><div class="line active">        process_request(uri, env, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Set a header to be included on all subsequent requests through the
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-53">
             <div class="info">
               Extracted source (around line <strong>#261</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>259</span>
       <span>260</span>
       <span>261</span>
       <span>262</span>
       <span>263</span>
       <span>264</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        # NOTE: rack-test v0.5 doesn&#39;t build a default uri correctly
       </div><div class="line">        # Make sure requested path is always a full uri
       </div><div class="line active">        session.request(build_full_uri(path, request_env), request_env)
       </div><div class="line">
       </div><div class="line">        @request_count += 1
       </div><div class="line">        @request = ActionDispatch::Request.new(session.last_request.env)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-54">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # details.
       </div><div class="line">      def post(path, **args)
       </div><div class="line active">        process(:post, path, **args)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Performs a PATCH request with the given parameters. See +#process+ for more
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-55">
             <div class="info">
               Extracted source (around line <strong>#348</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>346</span>
       <span>347</span>
       <span>348</span>
       <span>349</span>
       <span>350</span>
       <span>351</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          end
       </div><div class="line">
       </div><div class="line active">          integration_session.__send__(method, *args).tap do
       </div><div class="line">            copy_session_variables!
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-56">
             <div class="info">
               Extracted source (around line <strong>#94</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>92</span>
       <span>93</span>
       <span>94</span>
       <span>95</span>
       <span>96</span>
       <span>97</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    context &quot;when the name of the project is taken&quot; do
       </div><div class="line active">      before { post &quot;/projects&quot;, params: {name: &quot;Recorriendo La Plata&quot;, user_id: collaborator_id} }
       </div><div class="line">
       </div><div class="line">      it &quot;returns a validation error&quot; do
       </div><div class="line">        expect(json[&#39;message&#39;]).to match(/Project name must be unique. &quot;Recorriendo La Plata&quot; is already taken/)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-57">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-58">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-59">
             <div class="info">
               Extracted source (around line <strong>#350</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>348</span>
       <span>349</span>
       <span>350</span>
       <span>351</span>
       <span>352</span>
       <span>353</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class BeforeHook &lt; Hook
       </div><div class="line">        def run(example)
       </div><div class="line active">          example.instance_exec(example, &amp;block)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-60">
             <div class="info">
               Extracted source (around line <strong>#507</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
       <span>510</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line active">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-61">
             <div class="info">
               Extracted source (around line <strong>#506</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>504</span>
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line active">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-62">
             <div class="info">
               Extracted source (around line <strong>#506</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>504</span>
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line active">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-63">
             <div class="info">
               Extracted source (around line <strong>#593</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
       <span>596</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line active">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-64">
             <div class="info">
               Extracted source (around line <strong>#592</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line active">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-65">
             <div class="info">
               Extracted source (around line <strong>#592</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line active">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-66">
             <div class="info">
               Extracted source (around line <strong>#462</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>460</span>
       <span>461</span>
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          else
       </div><div class="line">            case position
       </div><div class="line active">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-67">
             <div class="info">
               Extracted source (around line <strong>#494</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>492</span>
       <span>493</span>
       <span>494</span>
       <span>495</span>
       <span>496</span>
       <span>497</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run_before_example
       </div><div class="line">        @example_group_instance.setup_mocks_for_rspec
       </div><div class="line active">        hooks.run(:before, :example, self)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def with_around_and_singleton_context_hooks
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-68">
             <div class="info">
               Extracted source (around line <strong>#253</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
       <span>256</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            with_around_and_singleton_context_hooks do
       </div><div class="line">              begin
       </div><div class="line active">                run_before_example
       </div><div class="line">                @example_group_instance.instance_exec(self, &amp;@example_block)
       </div><div class="line">
       </div><div class="line">                if pending?
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-69">
             <div class="info">
               Extracted source (around line <strong>#500</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>498</span>
       <span>499</span>
       <span>500</span>
       <span>501</span>
       <span>502</span>
       <span>503</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        singleton_context_hooks_host = example_group_instance.singleton_class
       </div><div class="line">        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
       </div><div class="line active">        with_around_example_hooks { yield }
       </div><div class="line">      ensure
       </div><div class="line">        singleton_context_hooks_host.run_after_context_hooks(example_group_instance)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-70">
             <div class="info">
               Extracted source (around line <strong>#457</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>455</span>
       <span>456</span>
       <span>457</span>
       <span>458</span>
       <span>459</span>
       <span>460</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def with_around_example_hooks
       </div><div class="line active">        hooks.run(:around, :example, self) { yield }
       </div><div class="line">      rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; e
       </div><div class="line">        set_exception(e)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-71">
             <div class="info">
               Extracted source (around line <strong>#464</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
       <span>466</span>
       <span>467</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line active">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-72">
             <div class="info">
               Extracted source (around line <strong>#604</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>602</span>
       <span>603</span>
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          return yield if hooks.empty? # exit early to avoid the extra allocation cost of `Example::Procsy`
       </div><div class="line">
       </div><div class="line active">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-73">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-74">
             <div class="info">
               Extracted source (around line <strong>#127</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
       <span>129</span>
       <span>130</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        group.around do |example|
       </div><div class="line">          before_setup
       </div><div class="line active">          example.run
       </div><div class="line">          after_teardown
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-75">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-76">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-77">
             <div class="info">
               Extracted source (around line <strong>#375</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>373</span>
       <span>374</span>
       <span>375</span>
       <span>376</span>
       <span>377</span>
       <span>378</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class AroundHook &lt; Hook
       </div><div class="line">        def execute_with(example, procsy)
       </div><div class="line active">          example.instance_exec(procsy, &amp;block)
       </div><div class="line">          return if procsy.executed?
       </div><div class="line">          Pending.mark_skipped!(example,
       </div><div class="line">                                &quot;#{hook_description} did not execute the example&quot;)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-78">
             <div class="info">
               Extracted source (around line <strong>#606</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line active">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-79">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-80">
             <div class="info">
               Extracted source (around line <strong>#74</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>72</span>
       <span>73</span>
       <span>74</span>
       <span>75</span>
       <span>76</span>
       <span>77</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  config.around(:each) do |example|
       </div><div class="line">    DatabaseCleaner.cleaning do
       </div><div class="line active">      example.run
       </div><div class="line">    end
       </div><div class="line">  end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-81">
             <div class="info">
               Extracted source (around line <strong>#16</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>14</span>
       <span>15</span>
       <span>16</span>
       <span>17</span>
       <span>18</span>
       <span>19</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          start
       </div><div class="line active">          yield
       </div><div class="line">        ensure
       </div><div class="line">          clean
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-82">
             <div class="info">
               Extracted source (around line <strong>#98</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>96</span>
       <span>97</span>
       <span>98</span>
       <span>99</span>
       <span>100</span>
       <span>101</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def cleaning(&amp;block)
       </div><div class="line active">      strategy.cleaning(&amp;block)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def auto_detected?
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-83">
             <div class="info">
               Extracted source (around line <strong>#86</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>84</span>
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def cleaning(&amp;inner_block)
       </div><div class="line">      connections.inject(inner_block) do |curr_block, connection|
       </div><div class="line active">        proc { connection.cleaning(&amp;curr_block) }
       </div><div class="line">      end.call
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-84">
             <div class="info">
               Extracted source (around line <strong>#87</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
       <span>90</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      connections.inject(inner_block) do |curr_block, connection|
       </div><div class="line">        proc { connection.cleaning(&amp;curr_block) }
       </div><div class="line active">      end.call
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def clean_with(*args)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-85">
             <div class="info">
               Extracted source (around line <strong>#73</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>71</span>
       <span>72</span>
       <span>73</span>
       <span>74</span>
       <span>75</span>
       <span>76</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  # start the transaction strategy as examples are run
       </div><div class="line">  config.around(:each) do |example|
       </div><div class="line active">    DatabaseCleaner.cleaning do
       </div><div class="line">      example.run
       </div><div class="line">    end
       </div><div class="line">  end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-86">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-87">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-88">
             <div class="info">
               Extracted source (around line <strong>#375</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>373</span>
       <span>374</span>
       <span>375</span>
       <span>376</span>
       <span>377</span>
       <span>378</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class AroundHook &lt; Hook
       </div><div class="line">        def execute_with(example, procsy)
       </div><div class="line active">          example.instance_exec(procsy, &amp;block)
       </div><div class="line">          return if procsy.executed?
       </div><div class="line">          Pending.mark_skipped!(example,
       </div><div class="line">                                &quot;#{hook_description} did not execute the example&quot;)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-89">
             <div class="info">
               Extracted source (around line <strong>#606</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line active">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-90">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-91">
             <div class="info">
               Extracted source (around line <strong>#607</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
       <span>610</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line active">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div><div class="line">        if respond_to?(:singleton_class) &amp;&amp; singleton_class.ancestors.include?(singleton_class)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-92">
             <div class="info">
               Extracted source (around line <strong>#464</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
       <span>466</span>
       <span>467</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line active">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-93">
             <div class="info">
               Extracted source (around line <strong>#457</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>455</span>
       <span>456</span>
       <span>457</span>
       <span>458</span>
       <span>459</span>
       <span>460</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def with_around_example_hooks
       </div><div class="line active">        hooks.run(:around, :example, self) { yield }
       </div><div class="line">      rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; e
       </div><div class="line">        set_exception(e)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-94">
             <div class="info">
               Extracted source (around line <strong>#500</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>498</span>
       <span>499</span>
       <span>500</span>
       <span>501</span>
       <span>502</span>
       <span>503</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        singleton_context_hooks_host = example_group_instance.singleton_class
       </div><div class="line">        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
       </div><div class="line active">        with_around_example_hooks { yield }
       </div><div class="line">      ensure
       </div><div class="line">        singleton_context_hooks_host.run_after_context_hooks(example_group_instance)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-95">
             <div class="info">
               Extracted source (around line <strong>#251</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>249</span>
       <span>250</span>
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            Pending.mark_pending! self, skip
       </div><div class="line">          elsif !RSpec.configuration.dry_run?
       </div><div class="line active">            with_around_and_singleton_context_hooks do
       </div><div class="line">              begin
       </div><div class="line">                run_before_example
       </div><div class="line">                @example_group_instance.instance_exec(self, &amp;@example_block)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-96">
             <div class="info">
               Extracted source (around line <strong>#627</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>625</span>
       <span>626</span>
       <span>627</span>
       <span>628</span>
       <span>629</span>
       <span>630</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div><div class="line active">          succeeded = example.run(instance, reporter)
       </div><div class="line">          if !succeeded &amp;&amp; reporter.fail_fast_limit_met?
       </div><div class="line">            RSpec.world.wants_to_quit = true
       </div><div class="line">          end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-97">
             <div class="info">
               Extracted source (around line <strong>#623</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>621</span>
       <span>622</span>
       <span>623</span>
       <span>624</span>
       <span>625</span>
       <span>626</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def self.run_examples(reporter)
       </div><div class="line active">        ordering_strategy.order(filtered_examples).map do |example|
       </div><div class="line">          next if RSpec.world.wants_to_quit
       </div><div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-98">
             <div class="info">
               Extracted source (around line <strong>#623</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>621</span>
       <span>622</span>
       <span>623</span>
       <span>624</span>
       <span>625</span>
       <span>626</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def self.run_examples(reporter)
       </div><div class="line active">        ordering_strategy.order(filtered_examples).map do |example|
       </div><div class="line">          next if RSpec.world.wants_to_quit
       </div><div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-99">
             <div class="info">
               Extracted source (around line <strong>#589</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>587</span>
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line active">          result_for_this_group = run_examples(reporter)
       </div><div class="line">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-100">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-101">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-102">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-103">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-104">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-105">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-106">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-107">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-108">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-109">
             <div class="info">
               Extracted source (around line <strong>#1894</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>1892</span>
       <span>1893</span>
       <span>1894</span>
       <span>1895</span>
       <span>1896</span>
       <span>1897</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          run_suite_hooks(&quot;a `before(:suite)` hook&quot;, @before_suite_hooks)
       </div><div class="line active">          yield
       </div><div class="line">        ensure
       </div><div class="line">          run_suite_hooks(&quot;an `after(:suite)` hook&quot;, @after_suite_hooks)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-110">
             <div class="info">
               Extracted source (around line <strong>#113</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
       <span>115</span>
       <span>116</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        examples_count = @world.example_count(example_groups)
       </div><div class="line">        success = @configuration.reporter.report(examples_count) do |reporter|
       </div><div class="line active">          @configuration.with_suite_hooks do
       </div><div class="line">            if examples_count == 0 &amp;&amp; @configuration.fail_if_no_examples
       </div><div class="line">              return @configuration.failure_exit_code
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-111">
             <div class="info">
               Extracted source (around line <strong>#79</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>77</span>
       <span>78</span>
       <span>79</span>
       <span>80</span>
       <span>81</span>
       <span>82</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      start(expected_example_count)
       </div><div class="line">      begin
       </div><div class="line active">        yield self
       </div><div class="line">      ensure
       </div><div class="line">        finish
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-112">
             <div class="info">
               Extracted source (around line <strong>#112</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>110</span>
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
       <span>115</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run_specs(example_groups)
       </div><div class="line">        examples_count = @world.example_count(example_groups)
       </div><div class="line active">        success = @configuration.reporter.report(examples_count) do |reporter|
       </div><div class="line">          @configuration.with_suite_hooks do
       </div><div class="line">            if examples_count == 0 &amp;&amp; @configuration.fail_if_no_examples
       </div><div class="line">              return @configuration.failure_exit_code
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-113">
             <div class="info">
               Extracted source (around line <strong>#87</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
       <span>90</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run(err, out)
       </div><div class="line">        setup(err, out)
       </div><div class="line active">        run_specs(@world.ordered_example_groups).tap do
       </div><div class="line">          persist_example_statuses
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-114">
             <div class="info">
               Extracted source (around line <strong>#71</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
       <span>73</span>
       <span>74</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          options.options[:runner].call(options, err, out)
       </div><div class="line">        else
       </div><div class="line active">          new(options).run(err, out)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-115">
             <div class="info">
               Extracted source (around line <strong>#45</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>43</span>
       <span>44</span>
       <span>45</span>
       <span>46</span>
       <span>47</span>
       <span>48</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def self.invoke
       </div><div class="line">        disable_autorun!
       </div><div class="line active">        status = run(ARGV, $stderr, $stdout).to_i
       </div><div class="line">        exit(status) if status != 0
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-116">
             <div class="info">
               Extracted source (around line <strong>#4</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>2</span>
       <span>3</span>
       <span>4</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">require &#39;rspec/core&#39;
       </div><div class="line active">RSpec::Core::Runner.invoke
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-117">
             <div class="info">
               Extracted source (around line <strong>#23</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">gem &#39;rspec-core&#39;, version
       </div><div class="line active">load Gem.bin_path(&#39;rspec-core&#39;, &#39;rspec&#39;, version)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-118">
             <div class="info">
               Extracted source (around line <strong>#23</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">gem &#39;rspec-core&#39;, version
       </div><div class="line active">load Gem.bin_path(&#39;rspec-core&#39;, &#39;rspec&#39;, version)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-119">
             <div class="info">
               Extracted source (around line <strong>#15</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">end
       </div><div class="line">
       </div><div class="line active">eval File.read($0), binding, $0
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-120">
             <div class="info">
               Extracted source (around line <strong>#15</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">end
       </div><div class="line">
       </div><div class="line active">eval File.read($0), binding, $0
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>

         
       <p><code>Rails.root: /home/giuliano/API Gamified Zooniverse/gamifiedZooniverse/gamified-zoo</code></p>

       <div id="traces">
           <a href="#" onclick="hide(&#39;Framework-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Application-Trace&#39;);; return false;">Application Trace</a> |
           <a href="#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Framework-Trace&#39;);; return false;">Framework Trace</a> |
           <a href="#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Framework-Trace&#39;);show(&#39;Full-Trace&#39;);; return false;">Full Trace</a> 

           <div id="Application-Trace" style="display: block;">
             <pre><code><a class="trace-frames" data-frame-id="1" href="#">app/controllers/projects_controller.rb:33:in `project_params&#39;</a><br><a class="trace-frames" data-frame-id="2" href="#">app/controllers/projects_controller.rb:10:in `create&#39;</a><br></code></pre>
           </div>
           <div id="Framework-Trace" style="display: none;">
             <pre><code><a class="trace-frames" data-frame-id="0" href="#">actionpack (5.1.4) lib/action_controller/metal/strong_parameters.rb:437:in `require&#39;</a><br><a class="trace-frames" data-frame-id="3" href="#">actionpack (5.1.4) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action&#39;</a><br><a class="trace-frames" data-frame-id="4" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:186:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="5" href="#">actionpack (5.1.4) lib/action_controller/metal/rendering.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="6" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:20:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="7" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:131:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="8" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:19:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="9" href="#">actionpack (5.1.4) lib/action_controller/metal/rescue.rb:20:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="10" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="11" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `block in instrument&#39;</a><br><a class="trace-frames" data-frame-id="12" href="#">activesupport (5.1.4) lib/active_support/notifications/instrumenter.rb:21:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="13" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="14" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="15" href="#">actionpack (5.1.4) lib/action_controller/metal/params_wrapper.rb:252:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="16" href="#">activerecord (5.1.4) lib/active_record/railties/controller_runtime.rb:22:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="17" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:124:in `process&#39;</a><br><a class="trace-frames" data-frame-id="18" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:189:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="19" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:253:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="20" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:49:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="21" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:31:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="22" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:50:in `block in serve&#39;</a><br><a class="trace-frames" data-frame-id="23" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `each&#39;</a><br><a class="trace-frames" data-frame-id="24" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="25" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:834:in `call&#39;</a><br><a class="trace-frames" data-frame-id="26" href="#">rack (2.0.3) lib/rack/etag.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="27" href="#">rack (2.0.3) lib/rack/conditional_get.rb:38:in `call&#39;</a><br><a class="trace-frames" data-frame-id="28" href="#">rack (2.0.3) lib/rack/head.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="29" href="#">activerecord (5.1.4) lib/active_record/migration.rb:556:in `call&#39;</a><br><a class="trace-frames" data-frame-id="30" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="31" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:97:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="32" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="33" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="34" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call&#39;</a><br><a class="trace-frames" data-frame-id="35" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call&#39;</a><br><a class="trace-frames" data-frame-id="36" href="#">railties (5.1.4) lib/rails/rack/logger.rb:36:in `call_app&#39;</a><br><a class="trace-frames" data-frame-id="37" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="38" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `block in tagged&#39;</a><br><a class="trace-frames" data-frame-id="39" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:26:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="40" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="41" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="42" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/remote_ip.rb:79:in `call&#39;</a><br><a class="trace-frames" data-frame-id="43" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/request_id.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="44" href="#">rack (2.0.3) lib/rack/runtime.rb:22:in `call&#39;</a><br><a class="trace-frames" data-frame-id="45" href="#">activesupport (5.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="46" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="47" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/static.rb:125:in `call&#39;</a><br><a class="trace-frames" data-frame-id="48" href="#">rack (2.0.3) lib/rack/sendfile.rb:111:in `call&#39;</a><br><a class="trace-frames" data-frame-id="49" href="#">railties (5.1.4) lib/rails/engine.rb:522:in `call&#39;</a><br><a class="trace-frames" data-frame-id="50" href="#">rack-test (0.7.0) lib/rack/mock_session.rb:30:in `request&#39;</a><br><a class="trace-frames" data-frame-id="51" href="#">rack-test (0.7.0) lib/rack/test.rb:249:in `process_request&#39;</a><br><a class="trace-frames" data-frame-id="52" href="#">rack-test (0.7.0) lib/rack/test.rb:125:in `request&#39;</a><br><a class="trace-frames" data-frame-id="53" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:261:in `process&#39;</a><br><a class="trace-frames" data-frame-id="54" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:22:in `post&#39;</a><br><a class="trace-frames" data-frame-id="55" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:348:in `block (2 levels) in &lt;module:Runner&gt;&#39;</a><br><a class="trace-frames" data-frame-id="56" href="#">spec/requests/projects_spec.rb:94:in `block (4 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="57" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="58" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="59" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:350:in `run&#39;</a><br><a class="trace-frames" data-frame-id="60" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:507:in `block in run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="61" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `each&#39;</a><br><a class="trace-frames" data-frame-id="62" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="63" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:593:in `block in run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="64" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `reverse_each&#39;</a><br><a class="trace-frames" data-frame-id="65" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="66" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:462:in `run&#39;</a><br><a class="trace-frames" data-frame-id="67" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:494:in `run_before_example&#39;</a><br><a class="trace-frames" data-frame-id="68" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:253:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="69" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `block in with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="70" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `block in with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="71" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="72" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:604:in `block in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="73" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="74" href="#">rspec-rails (3.6.1) lib/rspec/rails/adapters.rb:127:in `block (2 levels) in &lt;module:MinitestLifecycleAdapter&gt;&#39;</a><br><a class="trace-frames" data-frame-id="75" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="76" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="77" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="78" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="79" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="80" href="#">spec/rails_helper.rb:74:in `block (3 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="81" href="#">database_cleaner (1.6.1) lib/database_cleaner/generic/base.rb:16:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="82" href="#">database_cleaner (1.6.1) lib/database_cleaner/base.rb:98:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="83" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning&#39;</a><br><a class="trace-frames" data-frame-id="84" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:87:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="85" href="#">spec/rails_helper.rb:73:in `block (2 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="86" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="87" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="88" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="89" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="90" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="91" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:607:in `run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="92" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `run&#39;</a><br><a class="trace-frames" data-frame-id="93" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="94" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="95" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:251:in `run&#39;</a><br><a class="trace-frames" data-frame-id="96" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:627:in `block in run_examples&#39;</a><br><a class="trace-frames" data-frame-id="97" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `map&#39;</a><br><a class="trace-frames" data-frame-id="98" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `run_examples&#39;</a><br><a class="trace-frames" data-frame-id="99" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:589:in `run&#39;</a><br><a class="trace-frames" data-frame-id="100" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="101" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="102" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="103" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="104" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="105" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="106" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (3 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="107" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `map&#39;</a><br><a class="trace-frames" data-frame-id="108" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (2 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="109" href="#">rspec-core (3.6.0) lib/rspec/core/configuration.rb:1894:in `with_suite_hooks&#39;</a><br><a class="trace-frames" data-frame-id="110" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:113:in `block in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="111" href="#">rspec-core (3.6.0) lib/rspec/core/reporter.rb:79:in `report&#39;</a><br><a class="trace-frames" data-frame-id="112" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:112:in `run_specs&#39;</a><br><a class="trace-frames" data-frame-id="113" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:87:in `run&#39;</a><br><a class="trace-frames" data-frame-id="114" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:71:in `run&#39;</a><br><a class="trace-frames" data-frame-id="115" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:45:in `invoke&#39;</a><br><a class="trace-frames" data-frame-id="116" href="#">rspec-core (3.6.0) exe/rspec:4:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="117" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `load&#39;</a><br><a class="trace-frames" data-frame-id="118" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `&lt;main&gt;&#39;</a><br><a class="trace-frames" data-frame-id="119" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `eval&#39;</a><br><a class="trace-frames" data-frame-id="120" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `&lt;main&gt;&#39;</a><br></code></pre>
           </div>
           <div id="Full-Trace" style="display: none;">
             <pre><code><a class="trace-frames" data-frame-id="0" href="#">actionpack (5.1.4) lib/action_controller/metal/strong_parameters.rb:437:in `require&#39;</a><br><a class="trace-frames" data-frame-id="1" href="#">app/controllers/projects_controller.rb:33:in `project_params&#39;</a><br><a class="trace-frames" data-frame-id="2" href="#">app/controllers/projects_controller.rb:10:in `create&#39;</a><br><a class="trace-frames" data-frame-id="3" href="#">actionpack (5.1.4) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action&#39;</a><br><a class="trace-frames" data-frame-id="4" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:186:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="5" href="#">actionpack (5.1.4) lib/action_controller/metal/rendering.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="6" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:20:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="7" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:131:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="8" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:19:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="9" href="#">actionpack (5.1.4) lib/action_controller/metal/rescue.rb:20:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="10" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="11" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `block in instrument&#39;</a><br><a class="trace-frames" data-frame-id="12" href="#">activesupport (5.1.4) lib/active_support/notifications/instrumenter.rb:21:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="13" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="14" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="15" href="#">actionpack (5.1.4) lib/action_controller/metal/params_wrapper.rb:252:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="16" href="#">activerecord (5.1.4) lib/active_record/railties/controller_runtime.rb:22:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="17" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:124:in `process&#39;</a><br><a class="trace-frames" data-frame-id="18" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:189:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="19" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:253:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="20" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:49:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="21" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:31:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="22" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:50:in `block in serve&#39;</a><br><a class="trace-frames" data-frame-id="23" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `each&#39;</a><br><a class="trace-frames" data-frame-id="24" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="25" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:834:in `call&#39;</a><br><a class="trace-frames" data-frame-id="26" href="#">rack (2.0.3) lib/rack/etag.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="27" href="#">rack (2.0.3) lib/rack/conditional_get.rb:38:in `call&#39;</a><br><a class="trace-frames" data-frame-id="28" href="#">rack (2.0.3) lib/rack/head.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="29" href="#">activerecord (5.1.4) lib/active_record/migration.rb:556:in `call&#39;</a><br><a class="trace-frames" data-frame-id="30" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="31" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:97:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="32" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="33" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="34" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call&#39;</a><br><a class="trace-frames" data-frame-id="35" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call&#39;</a><br><a class="trace-frames" data-frame-id="36" href="#">railties (5.1.4) lib/rails/rack/logger.rb:36:in `call_app&#39;</a><br><a class="trace-frames" data-frame-id="37" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="38" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `block in tagged&#39;</a><br><a class="trace-frames" data-frame-id="39" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:26:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="40" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="41" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="42" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/remote_ip.rb:79:in `call&#39;</a><br><a class="trace-frames" data-frame-id="43" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/request_id.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="44" href="#">rack (2.0.3) lib/rack/runtime.rb:22:in `call&#39;</a><br><a class="trace-frames" data-frame-id="45" href="#">activesupport (5.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="46" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="47" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/static.rb:125:in `call&#39;</a><br><a class="trace-frames" data-frame-id="48" href="#">rack (2.0.3) lib/rack/sendfile.rb:111:in `call&#39;</a><br><a class="trace-frames" data-frame-id="49" href="#">railties (5.1.4) lib/rails/engine.rb:522:in `call&#39;</a><br><a class="trace-frames" data-frame-id="50" href="#">rack-test (0.7.0) lib/rack/mock_session.rb:30:in `request&#39;</a><br><a class="trace-frames" data-frame-id="51" href="#">rack-test (0.7.0) lib/rack/test.rb:249:in `process_request&#39;</a><br><a class="trace-frames" data-frame-id="52" href="#">rack-test (0.7.0) lib/rack/test.rb:125:in `request&#39;</a><br><a class="trace-frames" data-frame-id="53" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:261:in `process&#39;</a><br><a class="trace-frames" data-frame-id="54" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:22:in `post&#39;</a><br><a class="trace-frames" data-frame-id="55" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:348:in `block (2 levels) in &lt;module:Runner&gt;&#39;</a><br><a class="trace-frames" data-frame-id="56" href="#">spec/requests/projects_spec.rb:94:in `block (4 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="57" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="58" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="59" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:350:in `run&#39;</a><br><a class="trace-frames" data-frame-id="60" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:507:in `block in run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="61" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `each&#39;</a><br><a class="trace-frames" data-frame-id="62" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="63" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:593:in `block in run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="64" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `reverse_each&#39;</a><br><a class="trace-frames" data-frame-id="65" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="66" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:462:in `run&#39;</a><br><a class="trace-frames" data-frame-id="67" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:494:in `run_before_example&#39;</a><br><a class="trace-frames" data-frame-id="68" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:253:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="69" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `block in with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="70" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `block in with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="71" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="72" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:604:in `block in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="73" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="74" href="#">rspec-rails (3.6.1) lib/rspec/rails/adapters.rb:127:in `block (2 levels) in &lt;module:MinitestLifecycleAdapter&gt;&#39;</a><br><a class="trace-frames" data-frame-id="75" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="76" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="77" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="78" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="79" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="80" href="#">spec/rails_helper.rb:74:in `block (3 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="81" href="#">database_cleaner (1.6.1) lib/database_cleaner/generic/base.rb:16:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="82" href="#">database_cleaner (1.6.1) lib/database_cleaner/base.rb:98:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="83" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning&#39;</a><br><a class="trace-frames" data-frame-id="84" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:87:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="85" href="#">spec/rails_helper.rb:73:in `block (2 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="86" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="87" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="88" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="89" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="90" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="91" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:607:in `run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="92" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `run&#39;</a><br><a class="trace-frames" data-frame-id="93" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="94" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="95" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:251:in `run&#39;</a><br><a class="trace-frames" data-frame-id="96" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:627:in `block in run_examples&#39;</a><br><a class="trace-frames" data-frame-id="97" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `map&#39;</a><br><a class="trace-frames" data-frame-id="98" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `run_examples&#39;</a><br><a class="trace-frames" data-frame-id="99" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:589:in `run&#39;</a><br><a class="trace-frames" data-frame-id="100" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="101" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="102" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="103" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="104" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="105" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="106" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (3 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="107" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `map&#39;</a><br><a class="trace-frames" data-frame-id="108" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (2 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="109" href="#">rspec-core (3.6.0) lib/rspec/core/configuration.rb:1894:in `with_suite_hooks&#39;</a><br><a class="trace-frames" data-frame-id="110" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:113:in `block in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="111" href="#">rspec-core (3.6.0) lib/rspec/core/reporter.rb:79:in `report&#39;</a><br><a class="trace-frames" data-frame-id="112" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:112:in `run_specs&#39;</a><br><a class="trace-frames" data-frame-id="113" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:87:in `run&#39;</a><br><a class="trace-frames" data-frame-id="114" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:71:in `run&#39;</a><br><a class="trace-frames" data-frame-id="115" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:45:in `invoke&#39;</a><br><a class="trace-frames" data-frame-id="116" href="#">rspec-core (3.6.0) exe/rspec:4:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="117" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `load&#39;</a><br><a class="trace-frames" data-frame-id="118" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `&lt;main&gt;&#39;</a><br><a class="trace-frames" data-frame-id="119" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `eval&#39;</a><br><a class="trace-frames" data-frame-id="120" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `&lt;main&gt;&#39;</a><br></code></pre>
           </div>

         <script type="text/javascript">
           var traceFrames = document.getElementsByClassName('trace-frames');
           var selectedFrame, currentSource = document.getElementById('frame-source-0');

           // Add click listeners for all stack frames
           for (var i = 0; i < traceFrames.length; i++) {
             traceFrames[i].addEventListener('click', function(e) {
               e.preventDefault();
               var target = e.target;
               var frame_id = target.dataset.frameId;

               if (selectedFrame) {
                 selectedFrame.className = selectedFrame.className.replace("selected", "");
               }

               target.className += " selected";
               selectedFrame = target;

               // Change the extracted source code
               changeSourceExtract(frame_id);
             });

             function changeSourceExtract(frame_id) {
               var el = document.getElementById('frame-source-' + frame_id);
               if (currentSource && el) {
                 currentSource.className += " hidden";
                 el.className = el.className.replace(" hidden", "");
                 currentSource = el;
               }
             }
           }
         </script>
       </div>

         
       <h2 style="margin-top: 30px">Request</h2>
       <p><b>Parameters</b>:</p> <pre>{&quot;name&quot;=&gt;&quot;Recorriendo La Plata&quot;, &quot;user_id&quot;=&gt;&quot;17&quot;}
       </pre>

       <div class="details">
         <div class="summary"><a href="#" onclick="return toggleSessionDump()">Toggle session dump</a></div>
         <div id="session_dump" style="display:none"><pre></pre></div>
       </div>

       <div class="details">
         <div class="summary"><a href="#" onclick="return toggleEnvDump()">Toggle env dump</a></div>
         <div id="env_dump" style="display:none"><pre>HTTP_ACCEPT: &quot;text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5&quot;
       ORIGINAL_SCRIPT_NAME: &quot;&quot;
       REMOTE_ADDR: &quot;127.0.0.1&quot;
       SERVER_NAME: &quot;www.example.com&quot;</pre></div>
       </div>

       <h2 style="margin-top: 30px">Response</h2>
       <p><b>Headers</b>:</p> <pre>None</pre>

       </div>


       </body>
       </html>
       '
     # ./spec/support/request_spec_helper.rb:4:in `json'
     # ./spec/requests/projects_spec.rb:97:in `block (4 levels) in <top (required)>'
     # ./spec/rails_helper.rb:74:in `block (3 levels) in <top (required)>'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/generic/base.rb:16:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/base.rb:98:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:87:in `cleaning'
     # ./spec/rails_helper.rb:73:in `block (2 levels) in <top (required)>'

  7) Project POST /projects when the name of the project is taken returns status code 422 (unprocessable entity)
     Failure/Error: expect(response).to have_http_status(422)
       expected the response to have status code 422 but it was 400
     # ./spec/requests/projects_spec.rb:101:in `block (4 levels) in <top (required)>'
     # ./spec/rails_helper.rb:74:in `block (3 levels) in <top (required)>'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/generic/base.rb:16:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/base.rb:98:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:87:in `cleaning'
     # ./spec/rails_helper.rb:73:in `block (2 levels) in <top (required)>'

  8) Project PUT /projects/:project_id when a project is updated adding its owner adds the user as the project owner and returns the project
     Failure/Error: JSON.parse(response.body)

     JSON::ParserError:
       784: unexpected token at '<!DOCTYPE html>
       <html lang="en">
       <head>
         <meta charset="utf-8" />
         <title>Action Controller: Exception caught</title>
         <style>
           body {
             background-color: #FAFAFA;
             color: #333;
             margin: 0px;
           }

           body, p, ol, ul, td {
             font-family: helvetica, verdana, arial, sans-serif;
             font-size:   13px;
             line-height: 18px;
           }

           pre {
             font-size: 11px;
             white-space: pre-wrap;
           }

           pre.box {
             border: 1px solid #EEE;
             padding: 10px;
             margin: 0px;
             width: 958px;
           }

           header {
             color: #F0F0F0;
             background: #C52F24;
             padding: 0.5em 1.5em;
           }

           h1 {
             margin: 0.2em 0;
             line-height: 1.1em;
             font-size: 2em;
           }

           h2 {
             color: #C52F24;
             line-height: 25px;
           }

           .details {
             border: 1px solid #D0D0D0;
             border-radius: 4px;
             margin: 1em 0px;
             display: block;
             width: 978px;
           }

           .summary {
             padding: 8px 15px;
             border-bottom: 1px solid #D0D0D0;
             display: block;
           }

           .details pre {
             margin: 5px;
             border: none;
           }

           #container {
             box-sizing: border-box;
             width: 100%;
             padding: 0 1.5em;
           }

           .source * {
             margin: 0px;
             padding: 0px;
           }

           .source {
             border: 1px solid #D9D9D9;
             background: #ECECEC;
             width: 978px;
           }

           .source pre {
             padding: 10px 0px;
             border: none;
           }

           .source .data {
             font-size: 80%;
             overflow: auto;
             background-color: #FFF;
           }

           .info {
             padding: 0.5em;
           }

           .source .data .line_numbers {
             background-color: #ECECEC;
             color: #AAA;
             padding: 1em .5em;
             border-right: 1px solid #DDD;
             text-align: right;
           }

           .line {
             padding-left: 10px;
           }

           .line:hover {
             background-color: #F6F6F6;
           }

           .line.active {
             background-color: #FFCCCC;
           }

           .hidden {
             display: none;
           }

           a { color: #980905; }
           a:visited { color: #666; }
           a.trace-frames { color: #666; }
           a:hover { color: #C52F24; }
           a.trace-frames.selected { color: #C52F24 }

           
         </style>

         <script>
           var toggle = function(id) {
             var s = document.getElementById(id).style;
             s.display = s.display == 'none' ? 'block' : 'none';
             return false;
           }
           var show = function(id) {
             document.getElementById(id).style.display = 'block';
           }
           var hide = function(id) {
             document.getElementById(id).style.display = 'none';
           }
           var toggleTrace = function() {
             return toggle('blame_trace');
           }
           var toggleSessionDump = function() {
             return toggle('session_dump');
           }
           var toggleEnvDump = function() {
             return toggle('env_dump');
           }
         </script>
       </head>
       <body>

       <header>
         <h1>
           ActionController::ParameterMissing
             in ProjectsController#update
         </h1>
       </header>

       <div id="container">
         <h2>param is missing or the value is empty: project</h2>

             <div class="source hidden" id="frame-source-0">
             <div class="info">
               Extracted source (around line <strong>#437</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>435</span>
       <span>436</span>
       <span>437</span>
       <span>438</span>
       <span>439</span>
       <span>440</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        value
       </div><div class="line">      else
       </div><div class="line active">        raise ParameterMissing.new(key)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source " id="frame-source-1">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  def project_params
       </div><div class="line">    # whitelist params
       </div><div class="line active">    params.require(:project).permit(:name, :user_id)
       </div><div class="line">  end
       </div><div class="line">
       </div><div class="line">  def set_project
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-2">
             <div class="info">
               Extracted source (around line <strong>#19</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>17</span>
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">  def update
       </div><div class="line active">    @project.update(project_params)
       </div><div class="line">    #head :no_content
       </div><div class="line">    json_response(@project, :accepted)
       </div><div class="line">  end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-3">
             <div class="info">
               Extracted source (around line <strong>#4</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>2</span>
       <span>3</span>
       <span>4</span>
       <span>5</span>
       <span>6</span>
       <span>7</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  module BasicImplicitRender # :nodoc:
       </div><div class="line">    def send_action(method, *args)
       </div><div class="line active">      super.tap { default_render unless performed? }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def default_render(*args)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-4">
             <div class="info">
               Extracted source (around line <strong>#186</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>184</span>
       <span>185</span>
       <span>186</span>
       <span>187</span>
       <span>188</span>
       <span>189</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # which is *not* necessarily the same as the action name.
       </div><div class="line">      def process_action(method_name, *args)
       </div><div class="line active">        send_action(method_name, *args)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Actually call the method associated with the action. Override
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-5">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def process_action(*) #:nodoc:
       </div><div class="line">      self.formats = request.formats.map(&amp;:ref).compact
       </div><div class="line active">      super
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Check for double render errors and set the content_type after rendering.
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-6">
             <div class="info">
               Extracted source (around line <strong>#20</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def process_action(*args)
       </div><div class="line">      run_callbacks(:process_action) do
       </div><div class="line active">        super
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-7">
             <div class="info">
               Extracted source (around line <strong>#131</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>129</span>
       <span>130</span>
       <span>131</span>
       <span>132</span>
       <span>133</span>
       <span>134</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        if next_sequence.final?
       </div><div class="line">          next_sequence.invoke_before(env)
       </div><div class="line active">          env.value = !env.halted &amp;&amp; (!block_given? || yield)
       </div><div class="line">          next_sequence.invoke_after(env)
       </div><div class="line">          env.value
       </div><div class="line">        else
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-8">
             <div class="info">
               Extracted source (around line <strong>#19</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>17</span>
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    # process_action callbacks around the normal behavior.
       </div><div class="line">    def process_action(*args)
       </div><div class="line active">      run_callbacks(:process_action) do
       </div><div class="line">        super
       </div><div class="line">      end
       </div><div class="line">    end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-9">
             <div class="info">
               Extracted source (around line <strong>#20</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>18</span>
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    private
       </div><div class="line">      def process_action(*args)
       </div><div class="line active">        super
       </div><div class="line">      rescue Exception =&gt; exception
       </div><div class="line">        request.env[&quot;action_dispatch.show_detailed_exceptions&quot;] ||= show_detailed_exceptions?
       </div><div class="line">        rescue_with_handler(exception) || raise
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-10">
             <div class="info">
               Extracted source (around line <strong>#32</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      ActiveSupport::Notifications.instrument(&quot;process_action.action_controller&quot;, raw_payload) do |payload|
       </div><div class="line">        begin
       </div><div class="line active">          result = super
       </div><div class="line">          payload[:status] = response.status
       </div><div class="line">          result
       </div><div class="line">        ensure
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-11">
             <div class="info">
               Extracted source (around line <strong>#166</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>164</span>
       <span>165</span>
       <span>166</span>
       <span>167</span>
       <span>168</span>
       <span>169</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def instrument(name, payload = {})
       </div><div class="line">        if notifier.listening?(name)
       </div><div class="line active">          instrumenter.instrument(name, payload) { yield payload if block_given? }
       </div><div class="line">        else
       </div><div class="line">          yield payload if block_given?
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-12">
             <div class="info">
               Extracted source (around line <strong>#21</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>19</span>
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        listeners_state = start name, payload
       </div><div class="line">        begin
       </div><div class="line active">          yield payload
       </div><div class="line">        rescue Exception =&gt; e
       </div><div class="line">          payload[:exception] = [e.class.name, e.message]
       </div><div class="line">          payload[:exception_object] = e
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-13">
             <div class="info">
               Extracted source (around line <strong>#166</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>164</span>
       <span>165</span>
       <span>166</span>
       <span>167</span>
       <span>168</span>
       <span>169</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def instrument(name, payload = {})
       </div><div class="line">        if notifier.listening?(name)
       </div><div class="line active">          instrumenter.instrument(name, payload) { yield payload if block_given? }
       </div><div class="line">        else
       </div><div class="line">          yield payload if block_given?
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-14">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      ActiveSupport::Notifications.instrument(&quot;start_processing.action_controller&quot;, raw_payload.dup)
       </div><div class="line">
       </div><div class="line active">      ActiveSupport::Notifications.instrument(&quot;process_action.action_controller&quot;, raw_payload) do |payload|
       </div><div class="line">        begin
       </div><div class="line">          result = super
       </div><div class="line">          payload[:status] = response.status
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-15">
             <div class="info">
               Extracted source (around line <strong>#252</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>250</span>
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        request.filtered_parameters.merge! wrapped_filtered_hash
       </div><div class="line">      end
       </div><div class="line active">      super
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-16">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        # and it won&#39;t be cleaned up by the method below.
       </div><div class="line">        ActiveRecord::LogSubscriber.reset_runtime
       </div><div class="line active">        super
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def cleanup_view_runtime
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-17">
             <div class="info">
               Extracted source (around line <strong>#124</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>122</span>
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      @_response_body = nil
       </div><div class="line">
       </div><div class="line active">      process_action(action_name, *args)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Delegates to the class&#39; ::controller_path
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-18">
             <div class="info">
               Extracted source (around line <strong>#189</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>187</span>
       <span>188</span>
       <span>189</span>
       <span>190</span>
       <span>191</span>
       <span>192</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      set_request!(request)
       </div><div class="line">      set_response!(response)
       </div><div class="line active">      process(name)
       </div><div class="line">      request.commit_flash
       </div><div class="line">      to_a
       </div><div class="line">    end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-19">
             <div class="info">
               Extracted source (around line <strong>#253</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
       <span>256</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        middleware_stack.build(name) { |env| new.dispatch(name, req, res) }.call req.env
       </div><div class="line">      else
       </div><div class="line active">        new.dispatch(name, req, res)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">  end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-20">
             <div class="info">
               Extracted source (around line <strong>#49</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>47</span>
       <span>48</span>
       <span>49</span>
       <span>50</span>
       <span>51</span>
       <span>52</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def dispatch(controller, action, req, res)
       </div><div class="line active">          controller.dispatch(action, req, res)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-21">
             <div class="info">
               Extracted source (around line <strong>#31</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          controller = controller req
       </div><div class="line">          res        = controller.make_response! req
       </div><div class="line active">          dispatch(controller, params[:action], req, res)
       </div><div class="line">        rescue ActionController::RoutingError
       </div><div class="line">          if @raise_on_name_error
       </div><div class="line">            raise
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-22">
             <div class="info">
               Extracted source (around line <strong>#50</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>48</span>
       <span>49</span>
       <span>50</span>
       <span>51</span>
       <span>52</span>
       <span>53</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          req.path_parameters = set_params.merge parameters
       </div><div class="line">
       </div><div class="line active">          status, headers, body = route.app.serve(req)
       </div><div class="line">
       </div><div class="line">          if &quot;pass&quot; == headers[&quot;X-Cascade&quot;]
       </div><div class="line">            req.script_name     = script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-23">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def serve(req)
       </div><div class="line active">        find_routes(req).each do |match, parameters, route|
       </div><div class="line">          set_params  = req.path_parameters
       </div><div class="line">          path_info   = req.path_info
       </div><div class="line">          script_name = req.script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-24">
             <div class="info">
               Extracted source (around line <strong>#33</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def serve(req)
       </div><div class="line active">        find_routes(req).each do |match, parameters, route|
       </div><div class="line">          set_params  = req.path_parameters
       </div><div class="line">          path_info   = req.path_info
       </div><div class="line">          script_name = req.script_name
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-25">
             <div class="info">
               Extracted source (around line <strong>#834</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>832</span>
       <span>833</span>
       <span>834</span>
       <span>835</span>
       <span>836</span>
       <span>837</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        req = make_request(env)
       </div><div class="line">        req.path_info = Journey::Router::Utils.normalize_path(req.path_info)
       </div><div class="line active">        @router.serve(req)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def recognize_path(path, environment = {})
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-26">
             <div class="info">
               Extracted source (around line <strong>#25</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if etag_status?(status) &amp;&amp; etag_body?(body) &amp;&amp; !skip_caching?(headers)
       </div><div class="line">        original_body = body
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-27">
             <div class="info">
               Extracted source (around line <strong>#38</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>36</span>
       <span>37</span>
       <span>38</span>
       <span>39</span>
       <span>40</span>
       <span>41</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        [status, headers, body]
       </div><div class="line">      else
       </div><div class="line active">        @app.call(env)
       </div><div class="line">      end
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-28">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if env[REQUEST_METHOD] == HEAD
       </div><div class="line">        [
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-29">
             <div class="info">
               Extracted source (around line <strong>#556</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>554</span>
       <span>555</span>
       <span>556</span>
       <span>557</span>
       <span>558</span>
       <span>559</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          @last_check = mtime
       </div><div class="line">        end
       </div><div class="line active">        @app.call(env)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-30">
             <div class="info">
               Extracted source (around line <strong>#26</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      result = run_callbacks :call do
       </div><div class="line">        begin
       </div><div class="line active">          @app.call(env)
       </div><div class="line">        rescue =&gt; error
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-31">
             <div class="info">
               Extracted source (around line <strong>#97</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>95</span>
       <span>96</span>
       <span>97</span>
       <span>98</span>
       <span>99</span>
       <span>100</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      if callbacks.empty?
       </div><div class="line active">        yield if block_given?
       </div><div class="line">      else
       </div><div class="line">        env = Filters::Environment.new(self, false, nil)
       </div><div class="line">        next_sequence = callbacks.compile
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-32">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      error = nil
       </div><div class="line active">      result = run_callbacks :call do
       </div><div class="line">        begin
       </div><div class="line">          @app.call(env)
       </div><div class="line">        rescue =&gt; error
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-33">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      state = @executor.run!
       </div><div class="line">      begin
       </div><div class="line active">        response = @app.call(env)
       </div><div class="line">        returned = response &lt;&lt; ::Rack::BodyProxy.new(response.pop) { state.complete! }
       </div><div class="line">      ensure
       </div><div class="line">        state.complete! unless returned
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-34">
             <div class="info">
               Extracted source (around line <strong>#59</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>57</span>
       <span>58</span>
       <span>59</span>
       <span>60</span>
       <span>61</span>
       <span>62</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      request = ActionDispatch::Request.new env
       </div><div class="line active">      _, headers, body = response = @app.call(env)
       </div><div class="line">
       </div><div class="line">      if headers[&quot;X-Cascade&quot;] == &quot;pass&quot;
       </div><div class="line">        body.close if body.respond_to?(:close)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-35">
             <div class="info">
               Extracted source (around line <strong>#31</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
       <span>34</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      request = ActionDispatch::Request.new env
       </div><div class="line active">      @app.call(env)
       </div><div class="line">    rescue Exception =&gt; exception
       </div><div class="line">      if request.show_exceptions?
       </div><div class="line">        render_exception(request, exception)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-36">
             <div class="info">
               Extracted source (around line <strong>#36</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>34</span>
       <span>35</span>
       <span>36</span>
       <span>37</span>
       <span>38</span>
       <span>39</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          instrumenter.start &quot;request.action_dispatch&quot;, request: request
       </div><div class="line">          logger.info { started_request_message(request) }
       </div><div class="line active">          resp = @app.call(env)
       </div><div class="line">          resp[2] = ::Rack::BodyProxy.new(resp[2]) { finish(request) }
       </div><div class="line">          resp
       </div><div class="line">        rescue Exception
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-37">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        if logger.respond_to?(:tagged)
       </div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
       </div><div class="line">        else
       </div><div class="line">          call_app(request, env)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-38">
             <div class="info">
               Extracted source (around line <strong>#69</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>67</span>
       <span>68</span>
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def tagged(*tags)
       </div><div class="line active">      formatter.tagged(*tags) { yield self }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def flush
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-39">
             <div class="info">
               Extracted source (around line <strong>#26</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def tagged(*tags)
       </div><div class="line">        new_tags = push_tags(*tags)
       </div><div class="line active">        yield self
       </div><div class="line">      ensure
       </div><div class="line">        pop_tags(new_tags.size)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-40">
             <div class="info">
               Extracted source (around line <strong>#69</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>67</span>
       <span>68</span>
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def tagged(*tags)
       </div><div class="line active">      formatter.tagged(*tags) { yield self }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def flush
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-41">
             <div class="info">
               Extracted source (around line <strong>#24</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        if logger.respond_to?(:tagged)
       </div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
       </div><div class="line">        else
       </div><div class="line">          call_app(request, env)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-42">
             <div class="info">
               Extracted source (around line <strong>#79</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>77</span>
       <span>78</span>
       <span>79</span>
       <span>80</span>
       <span>81</span>
       <span>82</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      req = ActionDispatch::Request.new env
       </div><div class="line">      req.remote_ip = GetIp.new(req, check_ip, proxies)
       </div><div class="line active">      @app.call(req.env)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # The GetIp class exists as a way to defer processing of the request data
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-43">
             <div class="info">
               Extracted source (around line <strong>#25</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>23</span>
       <span>24</span>
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      req = ActionDispatch::Request.new env
       </div><div class="line">      req.request_id = make_request_id(req.x_request_id)
       </div><div class="line active">      @app.call(env).tap { |_status, headers, _body| headers[X_REQUEST_ID] = req.request_id }
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-44">
             <div class="info">
               Extracted source (around line <strong>#22</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>20</span>
       <span>21</span>
       <span>22</span>
       <span>23</span>
       <span>24</span>
       <span>25</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      start_time = Utils.clock_time
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">      request_time = Utils.clock_time - start_time
       </div><div class="line">
       </div><div class="line">      unless headers.has_key?(@header_name)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-45">
             <div class="info">
               Extracted source (around line <strong>#27</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>25</span>
       <span>26</span>
       <span>27</span>
       <span>28</span>
       <span>29</span>
       <span>30</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          def call(env)
       </div><div class="line">            LocalCacheRegistry.set_cache_for(local_cache_key, LocalStore.new)
       </div><div class="line active">            response = @app.call(env)
       </div><div class="line">            response[2] = ::Rack::BodyProxy.new(response[2]) do
       </div><div class="line">              LocalCacheRegistry.set_cache_for(local_cache_key, nil)
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-46">
             <div class="info">
               Extracted source (around line <strong>#12</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>10</span>
       <span>11</span>
       <span>12</span>
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      state = @executor.run!
       </div><div class="line">      begin
       </div><div class="line active">        response = @app.call(env)
       </div><div class="line">        returned = response &lt;&lt; ::Rack::BodyProxy.new(response.pop) { state.complete! }
       </div><div class="line">      ensure
       </div><div class="line">        state.complete! unless returned
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-47">
             <div class="info">
               Extracted source (around line <strong>#125</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      end
       </div><div class="line">
       </div><div class="line active">      @app.call(req.env)
       </div><div class="line">    end
       </div><div class="line">  end
       </div><div class="line">end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-48">
             <div class="info">
               Extracted source (around line <strong>#111</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>109</span>
       <span>110</span>
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def call(env)
       </div><div class="line active">      status, headers, body = @app.call(env)
       </div><div class="line">      if body.respond_to?(:to_path)
       </div><div class="line">        case type = variation(env)
       </div><div class="line">        when &#39;X-Accel-Redirect&#39;
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-49">
             <div class="info">
               Extracted source (around line <strong>#522</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>520</span>
       <span>521</span>
       <span>522</span>
       <span>523</span>
       <span>524</span>
       <span>525</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def call(env)
       </div><div class="line">      req = build_request env
       </div><div class="line active">      app.call req.env
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    # Defines additional Rack env configuration that is added on each call.
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-50">
             <div class="info">
               Extracted source (around line <strong>#30</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>28</span>
       <span>29</span>
       <span>30</span>
       <span>31</span>
       <span>32</span>
       <span>33</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      env[&quot;HTTP_COOKIE&quot;] ||= cookie_jar.for(uri)
       </div><div class="line">      @last_request = Rack::Request.new(env)
       </div><div class="line active">      status, headers, body = @app.call(@last_request.env)
       </div><div class="line">
       </div><div class="line">      @last_response = MockResponse.new(status, headers, body, env[&quot;rack.errors&quot;].flush)
       </div><div class="line">      body.close if body.respond_to?(:close)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-51">
             <div class="info">
               Extracted source (around line <strong>#249</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>247</span>
       <span>248</span>
       <span>249</span>
       <span>250</span>
       <span>251</span>
       <span>252</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        uri.scheme ||= &quot;https&quot; if env[&quot;HTTPS&quot;] == &quot;on&quot;
       </div><div class="line">
       </div><div class="line active">        @rack_mock_session.request(uri, env)
       </div><div class="line">
       </div><div class="line">        if retry_with_digest_auth?(env)
       </div><div class="line">          auth_env = env.merge({
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-52">
             <div class="info">
               Extracted source (around line <strong>#125</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>123</span>
       <span>124</span>
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def request(uri, env = {}, &amp;block)
       </div><div class="line">        env = env_for(uri, env)
       </div><div class="line active">        process_request(uri, env, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Set a header to be included on all subsequent requests through the
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-53">
             <div class="info">
               Extracted source (around line <strong>#261</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>259</span>
       <span>260</span>
       <span>261</span>
       <span>262</span>
       <span>263</span>
       <span>264</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        # NOTE: rack-test v0.5 doesn&#39;t build a default uri correctly
       </div><div class="line">        # Make sure requested path is always a full uri
       </div><div class="line active">        session.request(build_full_uri(path, request_env), request_env)
       </div><div class="line">
       </div><div class="line">        @request_count += 1
       </div><div class="line">        @request = ActionDispatch::Request.new(session.last_request.env)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-54">
             <div class="info">
               Extracted source (around line <strong>#34</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>32</span>
       <span>33</span>
       <span>34</span>
       <span>35</span>
       <span>36</span>
       <span>37</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # details.
       </div><div class="line">      def put(path, **args)
       </div><div class="line active">        process(:put, path, **args)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      # Performs a DELETE request with the given parameters. See +#process+ for
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-55">
             <div class="info">
               Extracted source (around line <strong>#348</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>346</span>
       <span>347</span>
       <span>348</span>
       <span>349</span>
       <span>350</span>
       <span>351</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          end
       </div><div class="line">
       </div><div class="line active">          integration_session.__send__(method, *args).tap do
       </div><div class="line">            copy_session_variables!
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-56">
             <div class="info">
               Extracted source (around line <strong>#150</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>148</span>
       <span>149</span>
       <span>150</span>
       <span>151</span>
       <span>152</span>
       <span>153</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  describe &#39;PUT /projects/:project_id&#39; do
       </div><div class="line">    let(:projectWithNoOwner) { FactoryGirl.create :project, name: &quot;I turned myself into a project, Morty!&quot;}
       </div><div class="line active">    before { put &quot;/projects/#{projectWithNoOwner.id}&quot;, params: { owner_id: owner.id}}
       </div><div class="line">
       </div><div class="line">    context &quot;when a project is updated adding its owner&quot; do
       </div><div class="line">      it &quot;adds the user as the project owner and returns the project&quot; do
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-57">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-58">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-59">
             <div class="info">
               Extracted source (around line <strong>#350</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>348</span>
       <span>349</span>
       <span>350</span>
       <span>351</span>
       <span>352</span>
       <span>353</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class BeforeHook &lt; Hook
       </div><div class="line">        def run(example)
       </div><div class="line active">          example.instance_exec(example, &amp;block)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-60">
             <div class="info">
               Extracted source (around line <strong>#507</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
       <span>510</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line active">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-61">
             <div class="info">
               Extracted source (around line <strong>#506</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>504</span>
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line active">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-62">
             <div class="info">
               Extracted source (around line <strong>#506</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>504</span>
       <span>505</span>
       <span>506</span>
       <span>507</span>
       <span>508</span>
       <span>509</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_owned_hooks_for(position, scope, example_or_group)
       </div><div class="line active">          matching_hooks_for(position, scope, example_or_group).each do |hook|
       </div><div class="line">            hook.run(example_or_group)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-63">
             <div class="info">
               Extracted source (around line <strong>#593</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
       <span>596</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line active">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-64">
             <div class="info">
               Extracted source (around line <strong>#592</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line active">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-65">
             <div class="info">
               Extracted source (around line <strong>#592</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
       <span>594</span>
       <span>595</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">        def run_example_hooks_for(example, position, each_method)
       </div><div class="line active">          owner_parent_groups.__send__(each_method) do |group|
       </div><div class="line">            group.hooks.run_owned_hooks_for(position, :example, example)
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-66">
             <div class="info">
               Extracted source (around line <strong>#462</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>460</span>
       <span>461</span>
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          else
       </div><div class="line">            case position
       </div><div class="line active">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-67">
             <div class="info">
               Extracted source (around line <strong>#494</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>492</span>
       <span>493</span>
       <span>494</span>
       <span>495</span>
       <span>496</span>
       <span>497</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run_before_example
       </div><div class="line">        @example_group_instance.setup_mocks_for_rspec
       </div><div class="line active">        hooks.run(:before, :example, self)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">      def with_around_and_singleton_context_hooks
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-68">
             <div class="info">
               Extracted source (around line <strong>#253</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
       <span>255</span>
       <span>256</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            with_around_and_singleton_context_hooks do
       </div><div class="line">              begin
       </div><div class="line active">                run_before_example
       </div><div class="line">                @example_group_instance.instance_exec(self, &amp;@example_block)
       </div><div class="line">
       </div><div class="line">                if pending?
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-69">
             <div class="info">
               Extracted source (around line <strong>#500</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>498</span>
       <span>499</span>
       <span>500</span>
       <span>501</span>
       <span>502</span>
       <span>503</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        singleton_context_hooks_host = example_group_instance.singleton_class
       </div><div class="line">        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
       </div><div class="line active">        with_around_example_hooks { yield }
       </div><div class="line">      ensure
       </div><div class="line">        singleton_context_hooks_host.run_after_context_hooks(example_group_instance)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-70">
             <div class="info">
               Extracted source (around line <strong>#457</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>455</span>
       <span>456</span>
       <span>457</span>
       <span>458</span>
       <span>459</span>
       <span>460</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def with_around_example_hooks
       </div><div class="line active">        hooks.run(:around, :example, self) { yield }
       </div><div class="line">      rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; e
       </div><div class="line">        set_exception(e)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-71">
             <div class="info">
               Extracted source (around line <strong>#464</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
       <span>466</span>
       <span>467</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line active">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-72">
             <div class="info">
               Extracted source (around line <strong>#604</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>602</span>
       <span>603</span>
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          return yield if hooks.empty? # exit early to avoid the extra allocation cost of `Example::Procsy`
       </div><div class="line">
       </div><div class="line active">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-73">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-74">
             <div class="info">
               Extracted source (around line <strong>#127</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>125</span>
       <span>126</span>
       <span>127</span>
       <span>128</span>
       <span>129</span>
       <span>130</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        group.around do |example|
       </div><div class="line">          before_setup
       </div><div class="line active">          example.run
       </div><div class="line">          after_teardown
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-75">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-76">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-77">
             <div class="info">
               Extracted source (around line <strong>#375</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>373</span>
       <span>374</span>
       <span>375</span>
       <span>376</span>
       <span>377</span>
       <span>378</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class AroundHook &lt; Hook
       </div><div class="line">        def execute_with(example, procsy)
       </div><div class="line active">          example.instance_exec(procsy, &amp;block)
       </div><div class="line">          return if procsy.executed?
       </div><div class="line">          Pending.mark_skipped!(example,
       </div><div class="line">                                &quot;#{hook_description} did not execute the example&quot;)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-78">
             <div class="info">
               Extracted source (around line <strong>#606</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line active">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-79">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-80">
             <div class="info">
               Extracted source (around line <strong>#74</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>72</span>
       <span>73</span>
       <span>74</span>
       <span>75</span>
       <span>76</span>
       <span>77</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  config.around(:each) do |example|
       </div><div class="line">    DatabaseCleaner.cleaning do
       </div><div class="line active">      example.run
       </div><div class="line">    end
       </div><div class="line">  end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-81">
             <div class="info">
               Extracted source (around line <strong>#16</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>14</span>
       <span>15</span>
       <span>16</span>
       <span>17</span>
       <span>18</span>
       <span>19</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          start
       </div><div class="line active">          yield
       </div><div class="line">        ensure
       </div><div class="line">          clean
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-82">
             <div class="info">
               Extracted source (around line <strong>#98</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>96</span>
       <span>97</span>
       <span>98</span>
       <span>99</span>
       <span>100</span>
       <span>101</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">    def cleaning(&amp;block)
       </div><div class="line active">      strategy.cleaning(&amp;block)
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def auto_detected?
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-83">
             <div class="info">
               Extracted source (around line <strong>#86</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>84</span>
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">    def cleaning(&amp;inner_block)
       </div><div class="line">      connections.inject(inner_block) do |curr_block, connection|
       </div><div class="line active">        proc { connection.cleaning(&amp;curr_block) }
       </div><div class="line">      end.call
       </div><div class="line">    end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-84">
             <div class="info">
               Extracted source (around line <strong>#87</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
       <span>90</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      connections.inject(inner_block) do |curr_block, connection|
       </div><div class="line">        proc { connection.cleaning(&amp;curr_block) }
       </div><div class="line active">      end.call
       </div><div class="line">    end
       </div><div class="line">
       </div><div class="line">    def clean_with(*args)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-85">
             <div class="info">
               Extracted source (around line <strong>#73</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>71</span>
       <span>72</span>
       <span>73</span>
       <span>74</span>
       <span>75</span>
       <span>76</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">  # start the transaction strategy as examples are run
       </div><div class="line">  config.around(:each) do |example|
       </div><div class="line active">    DatabaseCleaner.cleaning do
       </div><div class="line">      example.run
       </div><div class="line">    end
       </div><div class="line">  end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-86">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-87">
             <div class="info">
               Extracted source (around line <strong>#447</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>445</span>
       <span>446</span>
       <span>447</span>
       <span>448</span>
       <span>449</span>
       <span>450</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def instance_exec(*args, &amp;block)
       </div><div class="line active">        @example_group_instance.instance_exec(*args, &amp;block)
       </div><div class="line">      end
       </div><div class="line">
       </div><div class="line">    private
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-88">
             <div class="info">
               Extracted source (around line <strong>#375</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>373</span>
       <span>374</span>
       <span>375</span>
       <span>376</span>
       <span>377</span>
       <span>378</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      class AroundHook &lt; Hook
       </div><div class="line">        def execute_with(example, procsy)
       </div><div class="line active">          example.instance_exec(procsy, &amp;block)
       </div><div class="line">          return if procsy.executed?
       </div><div class="line">          Pending.mark_skipped!(example,
       </div><div class="line">                                &quot;#{hook_description} did not execute the example&quot;)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-89">
             <div class="info">
               Extracted source (around line <strong>#606</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>604</span>
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          initial_procsy = Example::Procsy.new(example) { yield }
       </div><div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line active">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-90">
             <div class="info">
               Extracted source (around line <strong>#342</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>340</span>
       <span>341</span>
       <span>342</span>
       <span>343</span>
       <span>344</span>
       <span>345</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        def call(*args, &amp;block)
       </div><div class="line">          @executed = true
       </div><div class="line active">          @proc.call(*args, &amp;block)
       </div><div class="line">        end
       </div><div class="line">        alias run call
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-91">
             <div class="info">
               Extracted source (around line <strong>#607</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>605</span>
       <span>606</span>
       <span>607</span>
       <span>608</span>
       <span>609</span>
       <span>610</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          hooks.inject(initial_procsy) do |procsy, around_hook|
       </div><div class="line">            procsy.wrap { around_hook.execute_with(example, procsy) }
       </div><div class="line active">          end.call
       </div><div class="line">        end
       </div><div class="line">
       </div><div class="line">        if respond_to?(:singleton_class) &amp;&amp; singleton_class.ancestors.include?(singleton_class)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-92">
             <div class="info">
               Extracted source (around line <strong>#464</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>462</span>
       <span>463</span>
       <span>464</span>
       <span>465</span>
       <span>466</span>
       <span>467</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
       </div><div class="line">            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
       </div><div class="line active">            when :around then run_around_example_hooks_for(example_or_group) { yield }
       </div><div class="line">            end
       </div><div class="line">          end
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-93">
             <div class="info">
               Extracted source (around line <strong>#457</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>455</span>
       <span>456</span>
       <span>457</span>
       <span>458</span>
       <span>459</span>
       <span>460</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">      def with_around_example_hooks
       </div><div class="line active">        hooks.run(:around, :example, self) { yield }
       </div><div class="line">      rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; e
       </div><div class="line">        set_exception(e)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-94">
             <div class="info">
               Extracted source (around line <strong>#500</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>498</span>
       <span>499</span>
       <span>500</span>
       <span>501</span>
       <span>502</span>
       <span>503</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        singleton_context_hooks_host = example_group_instance.singleton_class
       </div><div class="line">        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
       </div><div class="line active">        with_around_example_hooks { yield }
       </div><div class="line">      ensure
       </div><div class="line">        singleton_context_hooks_host.run_after_context_hooks(example_group_instance)
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-95">
             <div class="info">
               Extracted source (around line <strong>#251</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>249</span>
       <span>250</span>
       <span>251</span>
       <span>252</span>
       <span>253</span>
       <span>254</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            Pending.mark_pending! self, skip
       </div><div class="line">          elsif !RSpec.configuration.dry_run?
       </div><div class="line active">            with_around_and_singleton_context_hooks do
       </div><div class="line">              begin
       </div><div class="line">                run_before_example
       </div><div class="line">                @example_group_instance.instance_exec(self, &amp;@example_block)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-96">
             <div class="info">
               Extracted source (around line <strong>#627</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>625</span>
       <span>626</span>
       <span>627</span>
       <span>628</span>
       <span>629</span>
       <span>630</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div><div class="line active">          succeeded = example.run(instance, reporter)
       </div><div class="line">          if !succeeded &amp;&amp; reporter.fail_fast_limit_met?
       </div><div class="line">            RSpec.world.wants_to_quit = true
       </div><div class="line">          end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-97">
             <div class="info">
               Extracted source (around line <strong>#623</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>621</span>
       <span>622</span>
       <span>623</span>
       <span>624</span>
       <span>625</span>
       <span>626</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def self.run_examples(reporter)
       </div><div class="line active">        ordering_strategy.order(filtered_examples).map do |example|
       </div><div class="line">          next if RSpec.world.wants_to_quit
       </div><div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-98">
             <div class="info">
               Extracted source (around line <strong>#623</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>621</span>
       <span>622</span>
       <span>623</span>
       <span>624</span>
       <span>625</span>
       <span>626</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      # @private
       </div><div class="line">      def self.run_examples(reporter)
       </div><div class="line active">        ordering_strategy.order(filtered_examples).map do |example|
       </div><div class="line">          next if RSpec.world.wants_to_quit
       </div><div class="line">          instance = new(example.inspect_output)
       </div><div class="line">          set_ivars(instance, before_context_ivars)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-99">
             <div class="info">
               Extracted source (around line <strong>#589</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>587</span>
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line active">          result_for_this_group = run_examples(reporter)
       </div><div class="line">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-100">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-101">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-102">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-103">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-104">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-105">
             <div class="info">
               Extracted source (around line <strong>#590</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>588</span>
       <span>589</span>
       <span>590</span>
       <span>591</span>
       <span>592</span>
       <span>593</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          run_before_context_hooks(new(&#39;before(:context) hook&#39;)) if should_run_context_hooks
       </div><div class="line">          result_for_this_group = run_examples(reporter)
       </div><div class="line active">          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
       </div><div class="line">          result_for_this_group &amp;&amp; results_for_descendants
       </div><div class="line">        rescue Pending::SkipDeclaredInExample =&gt; ex
       </div><div class="line">          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-106">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-107">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-108">
             <div class="info">
               Extracted source (around line <strong>#118</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>116</span>
       <span>117</span>
       <span>118</span>
       <span>119</span>
       <span>120</span>
       <span>121</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">            end
       </div><div class="line">
       </div><div class="line active">            example_groups.map { |g| g.run(reporter) }.all?
       </div><div class="line">          end
       </div><div class="line">        end &amp;&amp; !@world.non_example_failure
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-109">
             <div class="info">
               Extracted source (around line <strong>#1894</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>1892</span>
       <span>1893</span>
       <span>1894</span>
       <span>1895</span>
       <span>1896</span>
       <span>1897</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        begin
       </div><div class="line">          run_suite_hooks(&quot;a `before(:suite)` hook&quot;, @before_suite_hooks)
       </div><div class="line active">          yield
       </div><div class="line">        ensure
       </div><div class="line">          run_suite_hooks(&quot;an `after(:suite)` hook&quot;, @after_suite_hooks)
       </div><div class="line">        end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-110">
             <div class="info">
               Extracted source (around line <strong>#113</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
       <span>115</span>
       <span>116</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">        examples_count = @world.example_count(example_groups)
       </div><div class="line">        success = @configuration.reporter.report(examples_count) do |reporter|
       </div><div class="line active">          @configuration.with_suite_hooks do
       </div><div class="line">            if examples_count == 0 &amp;&amp; @configuration.fail_if_no_examples
       </div><div class="line">              return @configuration.failure_exit_code
       </div><div class="line">            end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-111">
             <div class="info">
               Extracted source (around line <strong>#79</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>77</span>
       <span>78</span>
       <span>79</span>
       <span>80</span>
       <span>81</span>
       <span>82</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      start(expected_example_count)
       </div><div class="line">      begin
       </div><div class="line active">        yield self
       </div><div class="line">      ensure
       </div><div class="line">        finish
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-112">
             <div class="info">
               Extracted source (around line <strong>#112</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>110</span>
       <span>111</span>
       <span>112</span>
       <span>113</span>
       <span>114</span>
       <span>115</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run_specs(example_groups)
       </div><div class="line">        examples_count = @world.example_count(example_groups)
       </div><div class="line active">        success = @configuration.reporter.report(examples_count) do |reporter|
       </div><div class="line">          @configuration.with_suite_hooks do
       </div><div class="line">            if examples_count == 0 &amp;&amp; @configuration.fail_if_no_examples
       </div><div class="line">              return @configuration.failure_exit_code
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-113">
             <div class="info">
               Extracted source (around line <strong>#87</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>85</span>
       <span>86</span>
       <span>87</span>
       <span>88</span>
       <span>89</span>
       <span>90</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def run(err, out)
       </div><div class="line">        setup(err, out)
       </div><div class="line active">        run_specs(@world.ordered_example_groups).tap do
       </div><div class="line">          persist_example_statuses
       </div><div class="line">        end
       </div><div class="line">      end
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-114">
             <div class="info">
               Extracted source (around line <strong>#71</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>69</span>
       <span>70</span>
       <span>71</span>
       <span>72</span>
       <span>73</span>
       <span>74</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">          options.options[:runner].call(options, err, out)
       </div><div class="line">        else
       </div><div class="line active">          new(options).run(err, out)
       </div><div class="line">        end
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-115">
             <div class="info">
               Extracted source (around line <strong>#45</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>43</span>
       <span>44</span>
       <span>45</span>
       <span>46</span>
       <span>47</span>
       <span>48</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">      def self.invoke
       </div><div class="line">        disable_autorun!
       </div><div class="line active">        status = run(ARGV, $stderr, $stdout).to_i
       </div><div class="line">        exit(status) if status != 0
       </div><div class="line">      end
       </div><div class="line">
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-116">
             <div class="info">
               Extracted source (around line <strong>#4</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>2</span>
       <span>3</span>
       <span>4</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">require &#39;rspec/core&#39;
       </div><div class="line active">RSpec::Core::Runner.invoke
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-117">
             <div class="info">
               Extracted source (around line <strong>#23</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">gem &#39;rspec-core&#39;, version
       </div><div class="line active">load Gem.bin_path(&#39;rspec-core&#39;, &#39;rspec&#39;, version)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-118">
             <div class="info">
               Extracted source (around line <strong>#23</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>21</span>
       <span>22</span>
       <span>23</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">
       </div><div class="line">gem &#39;rspec-core&#39;, version
       </div><div class="line active">load Gem.bin_path(&#39;rspec-core&#39;, &#39;rspec&#39;, version)
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-119">
             <div class="info">
               Extracted source (around line <strong>#15</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">end
       </div><div class="line">
       </div><div class="line active">eval File.read($0), binding, $0
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>
           <div class="source hidden" id="frame-source-120">
             <div class="info">
               Extracted source (around line <strong>#15</strong>):
             </div>
             <div class="data">
               <table cellpadding="0" cellspacing="0" class="lines">
                 <tr>
                   <td>
                     <pre class="line_numbers">
       <span>13</span>
       <span>14</span>
       <span>15</span>
                     </pre>
                   </td>
       <td width="100%">
       <pre>
       <div class="line">end
       </div><div class="line">
       </div><div class="line active">eval File.read($0), binding, $0
       </div>
       </pre>
       </td>
                 </tr>
               </table>
             </div>
           </div>

         
       <p><code>Rails.root: /home/giuliano/API Gamified Zooniverse/gamifiedZooniverse/gamified-zoo</code></p>

       <div id="traces">
           <a href="#" onclick="hide(&#39;Framework-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Application-Trace&#39;);; return false;">Application Trace</a> |
           <a href="#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Framework-Trace&#39;);; return false;">Framework Trace</a> |
           <a href="#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Framework-Trace&#39;);show(&#39;Full-Trace&#39;);; return false;">Full Trace</a> 

           <div id="Application-Trace" style="display: block;">
             <pre><code><a class="trace-frames" data-frame-id="1" href="#">app/controllers/projects_controller.rb:33:in `project_params&#39;</a><br><a class="trace-frames" data-frame-id="2" href="#">app/controllers/projects_controller.rb:19:in `update&#39;</a><br></code></pre>
           </div>
           <div id="Framework-Trace" style="display: none;">
             <pre><code><a class="trace-frames" data-frame-id="0" href="#">actionpack (5.1.4) lib/action_controller/metal/strong_parameters.rb:437:in `require&#39;</a><br><a class="trace-frames" data-frame-id="3" href="#">actionpack (5.1.4) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action&#39;</a><br><a class="trace-frames" data-frame-id="4" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:186:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="5" href="#">actionpack (5.1.4) lib/action_controller/metal/rendering.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="6" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:20:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="7" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:131:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="8" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:19:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="9" href="#">actionpack (5.1.4) lib/action_controller/metal/rescue.rb:20:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="10" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="11" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `block in instrument&#39;</a><br><a class="trace-frames" data-frame-id="12" href="#">activesupport (5.1.4) lib/active_support/notifications/instrumenter.rb:21:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="13" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="14" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="15" href="#">actionpack (5.1.4) lib/action_controller/metal/params_wrapper.rb:252:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="16" href="#">activerecord (5.1.4) lib/active_record/railties/controller_runtime.rb:22:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="17" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:124:in `process&#39;</a><br><a class="trace-frames" data-frame-id="18" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:189:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="19" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:253:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="20" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:49:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="21" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:31:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="22" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:50:in `block in serve&#39;</a><br><a class="trace-frames" data-frame-id="23" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `each&#39;</a><br><a class="trace-frames" data-frame-id="24" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="25" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:834:in `call&#39;</a><br><a class="trace-frames" data-frame-id="26" href="#">rack (2.0.3) lib/rack/etag.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="27" href="#">rack (2.0.3) lib/rack/conditional_get.rb:38:in `call&#39;</a><br><a class="trace-frames" data-frame-id="28" href="#">rack (2.0.3) lib/rack/head.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="29" href="#">activerecord (5.1.4) lib/active_record/migration.rb:556:in `call&#39;</a><br><a class="trace-frames" data-frame-id="30" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="31" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:97:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="32" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="33" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="34" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call&#39;</a><br><a class="trace-frames" data-frame-id="35" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call&#39;</a><br><a class="trace-frames" data-frame-id="36" href="#">railties (5.1.4) lib/rails/rack/logger.rb:36:in `call_app&#39;</a><br><a class="trace-frames" data-frame-id="37" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="38" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `block in tagged&#39;</a><br><a class="trace-frames" data-frame-id="39" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:26:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="40" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="41" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="42" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/remote_ip.rb:79:in `call&#39;</a><br><a class="trace-frames" data-frame-id="43" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/request_id.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="44" href="#">rack (2.0.3) lib/rack/runtime.rb:22:in `call&#39;</a><br><a class="trace-frames" data-frame-id="45" href="#">activesupport (5.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="46" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="47" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/static.rb:125:in `call&#39;</a><br><a class="trace-frames" data-frame-id="48" href="#">rack (2.0.3) lib/rack/sendfile.rb:111:in `call&#39;</a><br><a class="trace-frames" data-frame-id="49" href="#">railties (5.1.4) lib/rails/engine.rb:522:in `call&#39;</a><br><a class="trace-frames" data-frame-id="50" href="#">rack-test (0.7.0) lib/rack/mock_session.rb:30:in `request&#39;</a><br><a class="trace-frames" data-frame-id="51" href="#">rack-test (0.7.0) lib/rack/test.rb:249:in `process_request&#39;</a><br><a class="trace-frames" data-frame-id="52" href="#">rack-test (0.7.0) lib/rack/test.rb:125:in `request&#39;</a><br><a class="trace-frames" data-frame-id="53" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:261:in `process&#39;</a><br><a class="trace-frames" data-frame-id="54" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:34:in `put&#39;</a><br><a class="trace-frames" data-frame-id="55" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:348:in `block (2 levels) in &lt;module:Runner&gt;&#39;</a><br><a class="trace-frames" data-frame-id="56" href="#">spec/requests/projects_spec.rb:150:in `block (3 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="57" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="58" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="59" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:350:in `run&#39;</a><br><a class="trace-frames" data-frame-id="60" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:507:in `block in run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="61" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `each&#39;</a><br><a class="trace-frames" data-frame-id="62" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="63" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:593:in `block in run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="64" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `reverse_each&#39;</a><br><a class="trace-frames" data-frame-id="65" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="66" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:462:in `run&#39;</a><br><a class="trace-frames" data-frame-id="67" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:494:in `run_before_example&#39;</a><br><a class="trace-frames" data-frame-id="68" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:253:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="69" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `block in with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="70" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `block in with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="71" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="72" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:604:in `block in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="73" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="74" href="#">rspec-rails (3.6.1) lib/rspec/rails/adapters.rb:127:in `block (2 levels) in &lt;module:MinitestLifecycleAdapter&gt;&#39;</a><br><a class="trace-frames" data-frame-id="75" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="76" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="77" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="78" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="79" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="80" href="#">spec/rails_helper.rb:74:in `block (3 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="81" href="#">database_cleaner (1.6.1) lib/database_cleaner/generic/base.rb:16:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="82" href="#">database_cleaner (1.6.1) lib/database_cleaner/base.rb:98:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="83" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning&#39;</a><br><a class="trace-frames" data-frame-id="84" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:87:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="85" href="#">spec/rails_helper.rb:73:in `block (2 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="86" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="87" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="88" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="89" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="90" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="91" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:607:in `run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="92" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `run&#39;</a><br><a class="trace-frames" data-frame-id="93" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="94" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="95" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:251:in `run&#39;</a><br><a class="trace-frames" data-frame-id="96" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:627:in `block in run_examples&#39;</a><br><a class="trace-frames" data-frame-id="97" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `map&#39;</a><br><a class="trace-frames" data-frame-id="98" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `run_examples&#39;</a><br><a class="trace-frames" data-frame-id="99" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:589:in `run&#39;</a><br><a class="trace-frames" data-frame-id="100" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="101" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="102" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="103" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="104" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="105" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="106" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (3 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="107" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `map&#39;</a><br><a class="trace-frames" data-frame-id="108" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (2 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="109" href="#">rspec-core (3.6.0) lib/rspec/core/configuration.rb:1894:in `with_suite_hooks&#39;</a><br><a class="trace-frames" data-frame-id="110" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:113:in `block in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="111" href="#">rspec-core (3.6.0) lib/rspec/core/reporter.rb:79:in `report&#39;</a><br><a class="trace-frames" data-frame-id="112" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:112:in `run_specs&#39;</a><br><a class="trace-frames" data-frame-id="113" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:87:in `run&#39;</a><br><a class="trace-frames" data-frame-id="114" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:71:in `run&#39;</a><br><a class="trace-frames" data-frame-id="115" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:45:in `invoke&#39;</a><br><a class="trace-frames" data-frame-id="116" href="#">rspec-core (3.6.0) exe/rspec:4:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="117" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `load&#39;</a><br><a class="trace-frames" data-frame-id="118" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `&lt;main&gt;&#39;</a><br><a class="trace-frames" data-frame-id="119" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `eval&#39;</a><br><a class="trace-frames" data-frame-id="120" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `&lt;main&gt;&#39;</a><br></code></pre>
           </div>
           <div id="Full-Trace" style="display: none;">
             <pre><code><a class="trace-frames" data-frame-id="0" href="#">actionpack (5.1.4) lib/action_controller/metal/strong_parameters.rb:437:in `require&#39;</a><br><a class="trace-frames" data-frame-id="1" href="#">app/controllers/projects_controller.rb:33:in `project_params&#39;</a><br><a class="trace-frames" data-frame-id="2" href="#">app/controllers/projects_controller.rb:19:in `update&#39;</a><br><a class="trace-frames" data-frame-id="3" href="#">actionpack (5.1.4) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action&#39;</a><br><a class="trace-frames" data-frame-id="4" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:186:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="5" href="#">actionpack (5.1.4) lib/action_controller/metal/rendering.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="6" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:20:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="7" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:131:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="8" href="#">actionpack (5.1.4) lib/abstract_controller/callbacks.rb:19:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="9" href="#">actionpack (5.1.4) lib/action_controller/metal/rescue.rb:20:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="10" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action&#39;</a><br><a class="trace-frames" data-frame-id="11" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `block in instrument&#39;</a><br><a class="trace-frames" data-frame-id="12" href="#">activesupport (5.1.4) lib/active_support/notifications/instrumenter.rb:21:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="13" href="#">activesupport (5.1.4) lib/active_support/notifications.rb:166:in `instrument&#39;</a><br><a class="trace-frames" data-frame-id="14" href="#">actionpack (5.1.4) lib/action_controller/metal/instrumentation.rb:30:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="15" href="#">actionpack (5.1.4) lib/action_controller/metal/params_wrapper.rb:252:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="16" href="#">activerecord (5.1.4) lib/active_record/railties/controller_runtime.rb:22:in `process_action&#39;</a><br><a class="trace-frames" data-frame-id="17" href="#">actionpack (5.1.4) lib/abstract_controller/base.rb:124:in `process&#39;</a><br><a class="trace-frames" data-frame-id="18" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:189:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="19" href="#">actionpack (5.1.4) lib/action_controller/metal.rb:253:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="20" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:49:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="21" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:31:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="22" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:50:in `block in serve&#39;</a><br><a class="trace-frames" data-frame-id="23" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `each&#39;</a><br><a class="trace-frames" data-frame-id="24" href="#">actionpack (5.1.4) lib/action_dispatch/journey/router.rb:33:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="25" href="#">actionpack (5.1.4) lib/action_dispatch/routing/route_set.rb:834:in `call&#39;</a><br><a class="trace-frames" data-frame-id="26" href="#">rack (2.0.3) lib/rack/etag.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="27" href="#">rack (2.0.3) lib/rack/conditional_get.rb:38:in `call&#39;</a><br><a class="trace-frames" data-frame-id="28" href="#">rack (2.0.3) lib/rack/head.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="29" href="#">activerecord (5.1.4) lib/active_record/migration.rb:556:in `call&#39;</a><br><a class="trace-frames" data-frame-id="30" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="31" href="#">activesupport (5.1.4) lib/active_support/callbacks.rb:97:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="32" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/callbacks.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="33" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="34" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call&#39;</a><br><a class="trace-frames" data-frame-id="35" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call&#39;</a><br><a class="trace-frames" data-frame-id="36" href="#">railties (5.1.4) lib/rails/rack/logger.rb:36:in `call_app&#39;</a><br><a class="trace-frames" data-frame-id="37" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="38" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `block in tagged&#39;</a><br><a class="trace-frames" data-frame-id="39" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:26:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="40" href="#">activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="41" href="#">railties (5.1.4) lib/rails/rack/logger.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="42" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/remote_ip.rb:79:in `call&#39;</a><br><a class="trace-frames" data-frame-id="43" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/request_id.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="44" href="#">rack (2.0.3) lib/rack/runtime.rb:22:in `call&#39;</a><br><a class="trace-frames" data-frame-id="45" href="#">activesupport (5.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="46" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="47" href="#">actionpack (5.1.4) lib/action_dispatch/middleware/static.rb:125:in `call&#39;</a><br><a class="trace-frames" data-frame-id="48" href="#">rack (2.0.3) lib/rack/sendfile.rb:111:in `call&#39;</a><br><a class="trace-frames" data-frame-id="49" href="#">railties (5.1.4) lib/rails/engine.rb:522:in `call&#39;</a><br><a class="trace-frames" data-frame-id="50" href="#">rack-test (0.7.0) lib/rack/mock_session.rb:30:in `request&#39;</a><br><a class="trace-frames" data-frame-id="51" href="#">rack-test (0.7.0) lib/rack/test.rb:249:in `process_request&#39;</a><br><a class="trace-frames" data-frame-id="52" href="#">rack-test (0.7.0) lib/rack/test.rb:125:in `request&#39;</a><br><a class="trace-frames" data-frame-id="53" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:261:in `process&#39;</a><br><a class="trace-frames" data-frame-id="54" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:34:in `put&#39;</a><br><a class="trace-frames" data-frame-id="55" href="#">actionpack (5.1.4) lib/action_dispatch/testing/integration.rb:348:in `block (2 levels) in &lt;module:Runner&gt;&#39;</a><br><a class="trace-frames" data-frame-id="56" href="#">spec/requests/projects_spec.rb:150:in `block (3 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="57" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="58" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="59" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:350:in `run&#39;</a><br><a class="trace-frames" data-frame-id="60" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:507:in `block in run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="61" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `each&#39;</a><br><a class="trace-frames" data-frame-id="62" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:506:in `run_owned_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="63" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:593:in `block in run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="64" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `reverse_each&#39;</a><br><a class="trace-frames" data-frame-id="65" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:592:in `run_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="66" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:462:in `run&#39;</a><br><a class="trace-frames" data-frame-id="67" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:494:in `run_before_example&#39;</a><br><a class="trace-frames" data-frame-id="68" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:253:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="69" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `block in with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="70" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `block in with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="71" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="72" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:604:in `block in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="73" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="74" href="#">rspec-rails (3.6.1) lib/rspec/rails/adapters.rb:127:in `block (2 levels) in &lt;module:MinitestLifecycleAdapter&gt;&#39;</a><br><a class="trace-frames" data-frame-id="75" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="76" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="77" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="78" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="79" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="80" href="#">spec/rails_helper.rb:74:in `block (3 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="81" href="#">database_cleaner (1.6.1) lib/database_cleaner/generic/base.rb:16:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="82" href="#">database_cleaner (1.6.1) lib/database_cleaner/base.rb:98:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="83" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning&#39;</a><br><a class="trace-frames" data-frame-id="84" href="#">database_cleaner (1.6.1) lib/database_cleaner/configuration.rb:87:in `cleaning&#39;</a><br><a class="trace-frames" data-frame-id="85" href="#">spec/rails_helper.rb:73:in `block (2 levels) in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="86" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="87" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:447:in `instance_exec&#39;</a><br><a class="trace-frames" data-frame-id="88" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:375:in `execute_with&#39;</a><br><a class="trace-frames" data-frame-id="89" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:606:in `block (2 levels) in run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="90" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:342:in `call&#39;</a><br><a class="trace-frames" data-frame-id="91" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:607:in `run_around_example_hooks_for&#39;</a><br><a class="trace-frames" data-frame-id="92" href="#">rspec-core (3.6.0) lib/rspec/core/hooks.rb:464:in `run&#39;</a><br><a class="trace-frames" data-frame-id="93" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:457:in `with_around_example_hooks&#39;</a><br><a class="trace-frames" data-frame-id="94" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:500:in `with_around_and_singleton_context_hooks&#39;</a><br><a class="trace-frames" data-frame-id="95" href="#">rspec-core (3.6.0) lib/rspec/core/example.rb:251:in `run&#39;</a><br><a class="trace-frames" data-frame-id="96" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:627:in `block in run_examples&#39;</a><br><a class="trace-frames" data-frame-id="97" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `map&#39;</a><br><a class="trace-frames" data-frame-id="98" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:623:in `run_examples&#39;</a><br><a class="trace-frames" data-frame-id="99" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:589:in `run&#39;</a><br><a class="trace-frames" data-frame-id="100" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="101" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="102" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="103" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `block in run&#39;</a><br><a class="trace-frames" data-frame-id="104" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `map&#39;</a><br><a class="trace-frames" data-frame-id="105" href="#">rspec-core (3.6.0) lib/rspec/core/example_group.rb:590:in `run&#39;</a><br><a class="trace-frames" data-frame-id="106" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (3 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="107" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `map&#39;</a><br><a class="trace-frames" data-frame-id="108" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:118:in `block (2 levels) in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="109" href="#">rspec-core (3.6.0) lib/rspec/core/configuration.rb:1894:in `with_suite_hooks&#39;</a><br><a class="trace-frames" data-frame-id="110" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:113:in `block in run_specs&#39;</a><br><a class="trace-frames" data-frame-id="111" href="#">rspec-core (3.6.0) lib/rspec/core/reporter.rb:79:in `report&#39;</a><br><a class="trace-frames" data-frame-id="112" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:112:in `run_specs&#39;</a><br><a class="trace-frames" data-frame-id="113" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:87:in `run&#39;</a><br><a class="trace-frames" data-frame-id="114" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:71:in `run&#39;</a><br><a class="trace-frames" data-frame-id="115" href="#">rspec-core (3.6.0) lib/rspec/core/runner.rb:45:in `invoke&#39;</a><br><a class="trace-frames" data-frame-id="116" href="#">rspec-core (3.6.0) exe/rspec:4:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="117" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `load&#39;</a><br><a class="trace-frames" data-frame-id="118" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/rspec:23:in `&lt;main&gt;&#39;</a><br><a class="trace-frames" data-frame-id="119" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `eval&#39;</a><br><a class="trace-frames" data-frame-id="120" href="#">/home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/bin/ruby_executable_hooks:15:in `&lt;main&gt;&#39;</a><br></code></pre>
           </div>

         <script type="text/javascript">
           var traceFrames = document.getElementsByClassName('trace-frames');
           var selectedFrame, currentSource = document.getElementById('frame-source-0');

           // Add click listeners for all stack frames
           for (var i = 0; i < traceFrames.length; i++) {
             traceFrames[i].addEventListener('click', function(e) {
               e.preventDefault();
               var target = e.target;
               var frame_id = target.dataset.frameId;

               if (selectedFrame) {
                 selectedFrame.className = selectedFrame.className.replace("selected", "");
               }

               target.className += " selected";
               selectedFrame = target;

               // Change the extracted source code
               changeSourceExtract(frame_id);
             });

             function changeSourceExtract(frame_id) {
               var el = document.getElementById('frame-source-' + frame_id);
               if (currentSource && el) {
                 currentSource.className += " hidden";
                 el.className = el.className.replace(" hidden", "");
                 currentSource = el;
               }
             }
           }
         </script>
       </div>

         
       <h2 style="margin-top: 30px">Request</h2>
       <p><b>Parameters</b>:</p> <pre>{&quot;owner_id&quot;=&gt;&quot;1&quot;, &quot;id&quot;=&gt;&quot;2&quot;}
       </pre>

       <div class="details">
         <div class="summary"><a href="#" onclick="return toggleSessionDump()">Toggle session dump</a></div>
         <div id="session_dump" style="display:none"><pre></pre></div>
       </div>

       <div class="details">
         <div class="summary"><a href="#" onclick="return toggleEnvDump()">Toggle env dump</a></div>
         <div id="env_dump" style="display:none"><pre>HTTP_ACCEPT: &quot;text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5&quot;
       ORIGINAL_SCRIPT_NAME: &quot;&quot;
       REMOTE_ADDR: &quot;127.0.0.1&quot;
       SERVER_NAME: &quot;www.example.com&quot;</pre></div>
       </div>

       <h2 style="margin-top: 30px">Response</h2>
       <p><b>Headers</b>:</p> <pre>None</pre>

       </div>


       </body>
       </html>
       '
     # ./spec/support/request_spec_helper.rb:4:in `json'
     # ./spec/requests/projects_spec.rb:155:in `block (4 levels) in <top (required)>'
     # ./spec/rails_helper.rb:74:in `block (3 levels) in <top (required)>'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/generic/base.rb:16:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/base.rb:98:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:87:in `cleaning'
     # ./spec/rails_helper.rb:73:in `block (2 levels) in <top (required)>'

  9) Project PUT /projects/:project_id when a project is updated adding its owner the model actually reflects the change
     Failure/Error: expect(updated_project.owner.id).to eq(owner.id)

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/requests/projects_spec.rb:163:in `block (4 levels) in <top (required)>'
     # ./spec/rails_helper.rb:74:in `block (3 levels) in <top (required)>'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/generic/base.rb:16:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/base.rb:98:in `cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning'
     # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:87:in `cleaning'
     # ./spec/rails_helper.rb:73:in `block (2 levels) in <top (required)>'

  10) Project PUT /projects/:project_id when a project is updated adding its owner returns status code 202 (accepted)
      Failure/Error: expect(response).to have_http_status(202)
        expected the response to have status code 202 but it was 400
      # ./spec/requests/projects_spec.rb:167:in `block (4 levels) in <top (required)>'
      # ./spec/rails_helper.rb:74:in `block (3 levels) in <top (required)>'
      # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/generic/base.rb:16:in `cleaning'
      # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/base.rb:98:in `cleaning'
      # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:86:in `block (2 levels) in cleaning'
      # /home/giuliano/.rvm/gems/ruby-2.3.1@gamZoo/gems/database_cleaner-1.6.1/lib/database_cleaner/configuration.rb:87:in `cleaning'
      # ./spec/rails_helper.rb:73:in `block (2 levels) in <top (required)>'

Finished in 4.37 seconds (files took 1.16 seconds to load)
20 examples, 10 failures

Failed examples:

rspec ./spec/requests/projects_spec.rb:62 # Project POST /projects when the request is valid creates and returns the project
rspec ./spec/requests/projects_spec.rb:69 # Project POST /projects when the request is valid returns status code 201 (created)
rspec ./spec/requests/projects_spec.rb:75 # Project POST /projects when the request is invalid (wrong param name) returns status code 422 (unprocessable entity)
rspec ./spec/requests/projects_spec.rb:84 # Project POST /projects when the request is invalid (missing params) returns a validation error
rspec ./spec/requests/projects_spec.rb:88 # Project POST /projects when the request is invalid (missing params) returns status code 422 (unprocessable entity)
rspec ./spec/requests/projects_spec.rb:96 # Project POST /projects when the name of the project is taken returns a validation error
rspec ./spec/requests/projects_spec.rb:100 # Project POST /projects when the name of the project is taken returns status code 422 (unprocessable entity)
rspec ./spec/requests/projects_spec.rb:153 # Project PUT /projects/:project_id when a project is updated adding its owner adds the user as the project owner and returns the project
rspec ./spec/requests/projects_spec.rb:161 # Project PUT /projects/:project_id when a project is updated adding its owner the model actually reflects the change
rspec ./spec/requests/projects_spec.rb:166 # Project PUT /projects/:project_id when a project is updated adding its owner returns status code 202 (accepted)

